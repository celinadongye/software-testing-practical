import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test001");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher3.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher16.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher11.matchesAnyChar(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher8.makeParenthesis(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher3.matchesAnyChar(rEString21);
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher3.repeatOneOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher0.matchesNOrMoreOccurences(rEString27, 100);
        java.lang.String str30 = rEString27.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
    }

    @Test
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test002");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        java.lang.Class<?> wildcardClass6 = rEString5.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test003");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.makeNumreg();
        java.lang.Class<?> wildcardClass12 = regExpMatcher0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test004");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString6 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher regExpMatcher7 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString8 = null;
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher7.repeatZeroOrMore(rEString8);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher7.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher7.matchesAnyChar(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher7.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher7.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher20.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher regExpMatcher31 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher31.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString34 = null;
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher31.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher regExpMatcher36 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString37 = null;
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher36.repeatZeroOrMore(rEString37);
        st1920.automaton.RegExpMatcher regExpMatcher39 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString40 = null;
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher39.repeatZeroOrMore(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher39.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher44 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString45 = null;
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher44.repeatZeroOrMore(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher44.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher39.matchesAnyChar(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher36.makeParenthesis(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher20.eitherPattern(rEString34, rEString50);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = null;
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.repeatZeroOrMore(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher52.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher57 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = null;
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher57.repeatZeroOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher57.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher52.matchesAnyChar(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher52.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher64 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString65 = null;
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher64.repeatZeroOrMore(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher64.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher69 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString70 = null;
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher69.repeatZeroOrMore(rEString70);
        st1920.automaton.RegExpMatcher regExpMatcher72 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString73 = null;
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher72.repeatZeroOrMore(rEString73);
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher72.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher77 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString78 = null;
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher77.repeatZeroOrMore(rEString78);
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher77.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher72.matchesAnyChar(rEString81);
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher69.makeParenthesis(rEString82);
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher64.matchesAnyChar(rEString82);
        st1920.automaton.RegExpMatcher regExpMatcher85 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString87 = regExpMatcher85.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString88 = regExpMatcher64.repeatOneOrMore(rEString87);
        st1920.automaton.RegExpMatcher.REString rEString91 = regExpMatcher52.matchesNToMOccurences(rEString88, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString92 = regExpMatcher52.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString94 = regExpMatcher52.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString96 = regExpMatcher20.matchesNOccurences(rEString94, (int) '#');
        st1920.automaton.RegExpMatcher.REString rEString97 = regExpMatcher0.eitherPattern(rEString19, rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
    }

    @Test
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test005");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString6 = regExpMatcher0.makeConcatenation("hi!", "hi!");
        st1920.automaton.RegExpMatcher regExpMatcher7 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString8 = null;
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher7.repeatZeroOrMore(rEString8);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher7.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher7.matchesAnyChar(rEString16);
        st1920.automaton.RegExpMatcher regExpMatcher18 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher18.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher18.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher regExpMatcher23 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString24 = null;
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher23.repeatZeroOrMore(rEString24);
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher26.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher31 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString32 = null;
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher31.repeatZeroOrMore(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher31.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher26.matchesAnyChar(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher23.makeParenthesis(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher7.eitherPattern(rEString21, rEString37);
        boolean boolean39 = st1920.automaton.RegExpMatcher.matches(matchString6, rEString37);
        java.lang.String str40 = matchString6.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "hi!hi!" + "'", str40.equals("hi!hi!"));
    }

    @Test
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test006");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString14 = regExpMatcher0.makeConcatenation("hi!", "hi!");
        java.lang.Class<?> wildcardClass15 = matchString14.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test007");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher6.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher6.matchesAnyChar(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher3.makeParenthesis(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher0.matchesNOrMoreOccurences(rEString16, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher22.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher27 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString28 = null;
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher27.repeatZeroOrMore(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher27.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher22.matchesAnyChar(rEString31);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher33.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher41 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = null;
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher41.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher41.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString47 = null;
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.repeatZeroOrMore(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher41.matchesAnyChar(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher38.makeParenthesis(rEString51);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher22.eitherPattern(rEString36, rEString52);
        st1920.automaton.RegExpMatcher regExpMatcher54 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString55 = null;
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher54.repeatZeroOrMore(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher54.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher59 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString60 = null;
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher59.repeatZeroOrMore(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher59.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher54.matchesAnyChar(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher54.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher22.makeParenthesis(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher0.repeatZeroOrMore(rEString65);
        java.lang.String str68 = rEString65.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str68 + "' != '" + "1" + "'", str68.equals("1"));
    }

    @Test
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test008");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher3.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher3.matchesAnyChar(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher3.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher15 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString16 = null;
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher15.repeatZeroOrMore(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher15.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher regExpMatcher23 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString24 = null;
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher23.repeatZeroOrMore(rEString24);
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher23.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString29 = null;
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.repeatZeroOrMore(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher28.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher23.matchesAnyChar(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher20.makeParenthesis(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher15.matchesAnyChar(rEString33);
        st1920.automaton.RegExpMatcher regExpMatcher36 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher36.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher15.repeatOneOrMore(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher3.matchesNToMOccurences(rEString39, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString47 = null;
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.repeatZeroOrMore(rEString47);
        st1920.automaton.RegExpMatcher regExpMatcher49 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString50 = null;
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher49.repeatZeroOrMore(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher49.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher54 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString55 = null;
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher54.repeatZeroOrMore(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher54.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher49.matchesAnyChar(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher46.makeParenthesis(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher43.matchesNOrMoreOccurences(rEString59, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher0.eitherPattern(rEString39, rEString59);
        st1920.automaton.RegExpMatcher regExpMatcher64 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString65 = null;
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher64.repeatZeroOrMore(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher64.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher69 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString70 = null;
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher69.repeatZeroOrMore(rEString70);
        st1920.automaton.RegExpMatcher regExpMatcher72 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString73 = null;
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher72.repeatZeroOrMore(rEString73);
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher72.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher77 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString78 = null;
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher77.repeatZeroOrMore(rEString78);
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher77.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher72.matchesAnyChar(rEString81);
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher69.makeParenthesis(rEString82);
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher64.matchesAnyChar(rEString82);
        st1920.automaton.RegExpMatcher regExpMatcher85 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString87 = regExpMatcher85.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString88 = regExpMatcher64.repeatOneOrMore(rEString87);
        st1920.automaton.RegExpMatcher.REString rEString90 = regExpMatcher0.matchesNOccurences(rEString88, (int) (byte) 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
    }

    @Test
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test009");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher.MatchString matchString34 = regExpMatcher0.makeConcatenation("", "");
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher38.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher38.matchesAnyChar(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher38.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher50 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString51 = null;
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher50.repeatZeroOrMore(rEString51);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher50.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher55 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString56 = null;
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher55.repeatZeroOrMore(rEString56);
        st1920.automaton.RegExpMatcher regExpMatcher58 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString59 = null;
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher58.repeatZeroOrMore(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher58.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher63 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString64 = null;
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher63.repeatZeroOrMore(rEString64);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher63.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher58.matchesAnyChar(rEString67);
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher55.makeParenthesis(rEString68);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher50.matchesAnyChar(rEString68);
        st1920.automaton.RegExpMatcher regExpMatcher71 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher71.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher50.repeatOneOrMore(rEString73);
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher38.matchesNToMOccurences(rEString74, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher regExpMatcher78 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString79 = null;
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher78.repeatZeroOrMore(rEString79);
        st1920.automaton.RegExpMatcher regExpMatcher81 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString82 = null;
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher81.repeatZeroOrMore(rEString82);
        st1920.automaton.RegExpMatcher regExpMatcher84 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString85 = null;
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher84.repeatZeroOrMore(rEString85);
        st1920.automaton.RegExpMatcher.REString rEString88 = regExpMatcher84.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher89 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString90 = null;
        st1920.automaton.RegExpMatcher.REString rEString91 = regExpMatcher89.repeatZeroOrMore(rEString90);
        st1920.automaton.RegExpMatcher.REString rEString93 = regExpMatcher89.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString94 = regExpMatcher84.matchesAnyChar(rEString93);
        st1920.automaton.RegExpMatcher.REString rEString95 = regExpMatcher81.makeParenthesis(rEString94);
        st1920.automaton.RegExpMatcher.REString rEString97 = regExpMatcher78.matchesNOrMoreOccurences(rEString94, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString98 = regExpMatcher35.eitherPattern(rEString74, rEString94);
        boolean boolean99 = st1920.automaton.RegExpMatcher.matches(matchString34, rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test010");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher6.matchesAnyChar(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher6.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher0.repeatOneOrMore(rEString15);
        java.lang.Class<?> wildcardClass17 = regExpMatcher0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test011");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString8 = regExpMatcher0.makeConcatenation("", "1");
        java.lang.String str9 = matchString8.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "1" + "'", str9.equals("1"));
    }

    @Test
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test012");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher3.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher0.matchesAnyChar(rEString7);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.MatchString matchString12 = regExpMatcher0.makeConcatenation("[^hi!]", "[^hi!]");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
    }

    @Test
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test013");
        st1920.automaton.RegExpMatcher.MatchString matchString1 = new st1920.automaton.RegExpMatcher.MatchString("hi!");
        java.lang.String str2 = matchString1.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));
    }

    @Test
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test014");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher6.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher6.matchesAnyChar(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher3.makeParenthesis(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher0.matchesNOrMoreOccurences(rEString16, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher.MatchString matchString23 = regExpMatcher0.makeNum();
        java.lang.String str24 = matchString23.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "1" + "'", str24.equals("1"));
    }

    @Test
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test015");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher3.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher3.matchesAnyChar(rEString12);
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher22.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher27 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString28 = null;
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher27.repeatZeroOrMore(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher27.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher22.matchesAnyChar(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher19.makeParenthesis(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher3.eitherPattern(rEString17, rEString33);
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher38.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString47 = null;
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.repeatZeroOrMore(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher51 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString52 = null;
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher51.repeatZeroOrMore(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher51.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher46.matchesAnyChar(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher43.makeParenthesis(rEString56);
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher38.matchesAnyChar(rEString56);
        st1920.automaton.RegExpMatcher regExpMatcher59 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher59.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher38.repeatOneOrMore(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher35.matchesNOrMoreOccurences(rEString62, 100);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher3.matchesAnyChar(rEString64);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher0.matchesNOccurences(rEString65, (int) '#');
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher0.makeNumreg();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
    }

    @Test
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test016");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher32.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher37 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString38 = null;
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher37.repeatZeroOrMore(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher37.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher32.matchesAnyChar(rEString41);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher32.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher44 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString45 = null;
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher44.repeatZeroOrMore(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher44.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher49 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString50 = null;
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher49.repeatZeroOrMore(rEString50);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = null;
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.repeatZeroOrMore(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher52.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher57 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = null;
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher57.repeatZeroOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher57.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher52.matchesAnyChar(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher49.makeParenthesis(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher44.matchesAnyChar(rEString62);
        st1920.automaton.RegExpMatcher regExpMatcher65 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher65.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher44.repeatOneOrMore(rEString67);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher32.matchesNToMOccurences(rEString68, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher32.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher32.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher0.matchesNOccurences(rEString74, (int) '#');
        st1920.automaton.RegExpMatcher regExpMatcher77 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString78 = null;
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher77.repeatZeroOrMore(rEString78);
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher77.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher77.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher77.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher0.repeatOneOrMore(rEString85);
        st1920.automaton.RegExpMatcher.MatchString matchString89 = regExpMatcher0.makeConcatenation("[^hi!]", "1");
        st1920.automaton.RegExpMatcher.MatchString matchString90 = regExpMatcher0.makeNum();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString90);
    }

    @Test
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test017");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher6.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher6.matchesAnyChar(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher3.makeParenthesis(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher0.matchesNOrMoreOccurences(rEString16, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher0.matchesAnyString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
    }

    @Test
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test018");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher6.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher6.matchesAnyChar(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher3.makeParenthesis(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher0.matchesNOrMoreOccurences(rEString16, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.MatchString matchString21 = regExpMatcher0.makeAlpha();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
    }

    @Test
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test019");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString6 = regExpMatcher0.makeConcatenation("hi!", "hi!");
        st1920.automaton.RegExpMatcher.MatchString matchString7 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.REString rEString8 = null;
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString15 = null;
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.repeatZeroOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher9.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher9.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher21.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher29.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher34 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = null;
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher34.repeatZeroOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher34.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher29.matchesAnyChar(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher26.makeParenthesis(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher21.matchesAnyChar(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher42 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher42.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher21.repeatOneOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher9.matchesNToMOccurences(rEString45, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher9.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher9.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher9.matchesNumBetweenNandM(1, (int) (short) -1);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher9.matchesString("");
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher0.followPattern(rEString8, rEString56);
        java.lang.String str58 = rEString57.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
    }

    @Test
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test020");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString7 = regExpMatcher0.makeConcatenation("[^hi!]", "hi!hi!");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher11.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher11.repeatOneOrMore(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher8.matchesNOrMoreOccurences(rEString35, 100);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher8.matchesNoBracketChars("[^hi!]");
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString7, rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test021");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher5.makeParenthesis(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher0.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher21.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher29.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher34 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = null;
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher34.repeatZeroOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher34.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher29.matchesAnyChar(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher26.makeParenthesis(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher21.matchesAnyChar(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher42 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher42.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher21.repeatOneOrMore(rEString44);
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher0.eitherPattern(rEString44, rEString49);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher55 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString56 = null;
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher55.repeatZeroOrMore(rEString56);
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher55.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher52.matchesAnyChar(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher52.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher62 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString63 = null;
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher62.repeatZeroOrMore(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher62.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher62.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher0.eitherPattern(rEString61, rEString69);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher0.matchesAnyString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
    }

    @Test
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test022");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher5.makeParenthesis(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher0.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher21.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher29.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher34 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = null;
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher34.repeatZeroOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher34.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher29.matchesAnyChar(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher26.makeParenthesis(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher21.matchesAnyChar(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher42 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher42.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher21.repeatOneOrMore(rEString44);
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher0.eitherPattern(rEString44, rEString49);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher55 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString56 = null;
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher55.repeatZeroOrMore(rEString56);
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher55.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher52.matchesAnyChar(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher52.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher62 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString63 = null;
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher62.repeatZeroOrMore(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher62.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher62.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher0.eitherPattern(rEString61, rEString69);
        st1920.automaton.RegExpMatcher.MatchString matchString71 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString73 = regExpMatcher0.makeNum();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString73);
    }

    @Test
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test023");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher3.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher3.matchesAnyChar(rEString12);
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher22.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher27 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString28 = null;
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher27.repeatZeroOrMore(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher27.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher22.matchesAnyChar(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher19.makeParenthesis(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher3.eitherPattern(rEString17, rEString33);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher0.repeatOneOrMore(rEString17);
        st1920.automaton.RegExpMatcher.MatchString matchString38 = regExpMatcher0.makeConcatenation("hi!", "");
        java.lang.Class<?> wildcardClass39 = regExpMatcher0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test024");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher8.matchesAnyChar(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher0.repeatZeroOrMore(rEString16);
        java.lang.String str18 = rEString16.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
    }

    @Test
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test025");
        st1920.automaton.RegExpMatcher.MatchString matchString1 = new st1920.automaton.RegExpMatcher.MatchString("");
        java.lang.String str2 = matchString1.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "" + "'", str2.equals(""));
    }

    @Test
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test026");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString5 = regExpMatcher0.makeNum();
        java.lang.String str6 = matchString5.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "1" + "'", str6.equals("1"));
    }

    @Test
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test027");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher3.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher3.matchesAnyChar(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher0.makeParenthesis(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher16.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher16.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher24.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher16.excludePattern(rEString27);
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher32.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher37 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString38 = null;
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher37.repeatZeroOrMore(rEString38);
        st1920.automaton.RegExpMatcher regExpMatcher40 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString41 = null;
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher40.repeatZeroOrMore(rEString41);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher40.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher45 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString46 = null;
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher45.repeatZeroOrMore(rEString46);
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher45.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher40.matchesAnyChar(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher37.makeParenthesis(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher32.matchesAnyChar(rEString50);
        st1920.automaton.RegExpMatcher regExpMatcher53 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher53.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher32.repeatOneOrMore(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher29.matchesNOrMoreOccurences(rEString56, 100);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher16.matchesNOccurences(rEString58, 0);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher0.excludePattern(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
    }

    @Test
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test028");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher3.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher3.matchesAnyChar(rEString12);
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher22.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher27 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString28 = null;
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher27.repeatZeroOrMore(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher27.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher22.matchesAnyChar(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher19.makeParenthesis(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher3.eitherPattern(rEString17, rEString33);
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher38.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString47 = null;
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.repeatZeroOrMore(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher51 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString52 = null;
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher51.repeatZeroOrMore(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher51.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher46.matchesAnyChar(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher43.makeParenthesis(rEString56);
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher38.matchesAnyChar(rEString56);
        st1920.automaton.RegExpMatcher regExpMatcher59 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher59.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher38.repeatOneOrMore(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher35.matchesNOrMoreOccurences(rEString62, 100);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher3.matchesAnyChar(rEString64);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher0.matchesNOccurences(rEString65, (int) '#');
        st1920.automaton.RegExpMatcher.MatchString matchString68 = regExpMatcher0.makeAlpha();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
    }

    @Test
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test029");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher10 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString11 = null;
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher10.repeatZeroOrMore(rEString11);
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher10.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher5.matchesAnyChar(rEString14);
        java.lang.String str16 = rEString14.getString();
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher20.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher17.makeParenthesis(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher0.bothPatterns(rEString14, rEString31);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher0.matchesNoChar();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "[^hi!]" + "'", str16.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
    }

    @Test
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test030");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString15 = null;
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.repeatZeroOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher9.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher6.makeParenthesis(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesAnyChar(rEString19);
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher22.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher22.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher31 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString32 = null;
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher31.repeatZeroOrMore(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher31.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher28.matchesAnyChar(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher28.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher22.repeatOneOrMore(rEString37);
        st1920.automaton.RegExpMatcher regExpMatcher39 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString40 = null;
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher39.repeatZeroOrMore(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher39.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher48 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher48.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher regExpMatcher51 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString52 = null;
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher51.repeatZeroOrMore(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher51.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString57 = null;
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.repeatZeroOrMore(rEString57);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher56.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher51.matchesAnyChar(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher48.makeParenthesis(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher43.matchesAnyChar(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher39.repeatZeroOrOne(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher0.followPattern(rEString38, rEString64);
        st1920.automaton.RegExpMatcher.REString rEString66 = null;
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher0.repeatZeroOrOne(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
    }

    @Test
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test031");
        st1920.automaton.RegExpMatcher.MatchString matchString1 = new st1920.automaton.RegExpMatcher.MatchString("#");
    }

    @Test
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test032");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher32.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher37 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString38 = null;
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher37.repeatZeroOrMore(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher37.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher32.matchesAnyChar(rEString41);
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString46 = null;
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.repeatZeroOrMore(rEString46);
        st1920.automaton.RegExpMatcher regExpMatcher48 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher48.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher regExpMatcher51 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString52 = null;
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher51.repeatZeroOrMore(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher51.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString57 = null;
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.repeatZeroOrMore(rEString57);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher56.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher51.matchesAnyChar(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher48.makeParenthesis(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher32.eitherPattern(rEString46, rEString62);
        st1920.automaton.RegExpMatcher regExpMatcher64 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString65 = null;
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher64.repeatZeroOrMore(rEString65);
        st1920.automaton.RegExpMatcher regExpMatcher67 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString68 = null;
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher67.repeatZeroOrMore(rEString68);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher67.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher72 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString73 = null;
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher72.repeatZeroOrMore(rEString73);
        st1920.automaton.RegExpMatcher regExpMatcher75 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString76 = null;
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher75.repeatZeroOrMore(rEString76);
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher75.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher80 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString81 = null;
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher80.repeatZeroOrMore(rEString81);
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher80.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher75.matchesAnyChar(rEString84);
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher72.makeParenthesis(rEString85);
        st1920.automaton.RegExpMatcher.REString rEString87 = regExpMatcher67.matchesAnyChar(rEString85);
        st1920.automaton.RegExpMatcher regExpMatcher88 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString90 = regExpMatcher88.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString91 = regExpMatcher67.repeatOneOrMore(rEString90);
        st1920.automaton.RegExpMatcher.REString rEString93 = regExpMatcher64.matchesNOrMoreOccurences(rEString91, 100);
        st1920.automaton.RegExpMatcher.REString rEString94 = regExpMatcher32.matchesAnyChar(rEString93);
        st1920.automaton.RegExpMatcher.REString rEString95 = regExpMatcher0.matchesAnyChar(rEString94);
        st1920.automaton.RegExpMatcher.MatchString matchString98 = regExpMatcher0.makeConcatenation("hi!", "");
        st1920.automaton.RegExpMatcher.MatchString matchString99 = regExpMatcher0.makeAlpha();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString99);
    }

    @Test
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test033");
        st1920.automaton.RegExpMatcher.REString rEString1 = new st1920.automaton.RegExpMatcher.REString("1");
    }

    @Test
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test034");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher8.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher0.excludePattern(rEString11);
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher18 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString19 = null;
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher18.repeatZeroOrMore(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher18.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher13.matchesAnyChar(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher13.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher30 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString31 = null;
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher30.repeatZeroOrMore(rEString31);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = null;
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher33.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher38.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher33.matchesAnyChar(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher30.makeParenthesis(rEString43);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher25.matchesAnyChar(rEString43);
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher25.repeatOneOrMore(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher13.matchesNToMOccurences(rEString49, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher13.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher13.matchesBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString57 = null;
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.repeatZeroOrMore(rEString57);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher56.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher61 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString62 = null;
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher61.repeatZeroOrMore(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher61.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher56.matchesAnyChar(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher56.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher56.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher56.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher0.bothPatterns(rEString55, rEString69);
        java.lang.Class<?> wildcardClass71 = rEString55.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test035");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString6 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher regExpMatcher7 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString8 = null;
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher7.repeatZeroOrMore(rEString8);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher7.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher7.matchesAnyChar(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher0.repeatOneOrMore(rEString16);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher19.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher0.repeatZeroOrOne(rEString24);
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher26.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher26.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.excludePattern(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher0.matchesString("1");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
    }

    @Test
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test036");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher10 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString11 = null;
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher10.repeatZeroOrMore(rEString11);
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher10.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher5.matchesAnyChar(rEString14);
        java.lang.String str16 = rEString14.getString();
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher20.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher17.makeParenthesis(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher0.bothPatterns(rEString14, rEString31);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = null;
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher regExpMatcher36 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString37 = null;
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher36.repeatZeroOrMore(rEString37);
        st1920.automaton.RegExpMatcher regExpMatcher39 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString40 = null;
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher39.repeatZeroOrMore(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher39.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher44 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString45 = null;
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher44.repeatZeroOrMore(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher44.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher39.matchesAnyChar(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher36.makeParenthesis(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher33.matchesNOrMoreOccurences(rEString49, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher33.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.MatchString matchString57 = regExpMatcher33.makeConcatenation("", "1");
        st1920.automaton.RegExpMatcher.REString rEString58 = null;
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher33.repeatZeroOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher0.matchesNOrMoreOccurences(rEString59, 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "[^hi!]" + "'", str16.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
    }

    @Test
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test037");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher3.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher3.matchesAnyChar(rEString12);
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher22.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher27 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString28 = null;
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher27.repeatZeroOrMore(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher27.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher22.matchesAnyChar(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher19.makeParenthesis(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher3.eitherPattern(rEString17, rEString33);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher0.repeatOneOrMore(rEString17);
        st1920.automaton.RegExpMatcher.MatchString matchString38 = regExpMatcher0.makeConcatenation("hi!", "");
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher0.matchesNoBracketChars("a");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
    }

    @Test
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test038");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString8 = regExpMatcher0.makeConcatenation("", "1");
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher9.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString15 = regExpMatcher9.makeNum();
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher16.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher21.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher16.matchesAnyChar(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher9.repeatOneOrMore(rEString25);
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString29 = null;
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.repeatZeroOrMore(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher28.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher28.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher9.repeatZeroOrOne(rEString33);
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher35.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher35.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher9.excludePattern(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher0.matchesNToMOccurences(rEString40, 10, 1);
        st1920.automaton.RegExpMatcher.MatchString matchString46 = regExpMatcher0.makeConcatenation("[^hi!]hi!hi!", "hi!");
        st1920.automaton.RegExpMatcher regExpMatcher47 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = null;
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher47.repeatZeroOrMore(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher47.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = null;
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.repeatZeroOrMore(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher52.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher47.matchesAnyChar(rEString56);
        st1920.automaton.RegExpMatcher regExpMatcher58 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher58.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString61 = null;
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher58.repeatZeroOrMore(rEString61);
        st1920.automaton.RegExpMatcher regExpMatcher63 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString64 = null;
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher63.repeatZeroOrMore(rEString64);
        st1920.automaton.RegExpMatcher regExpMatcher66 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString67 = null;
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher66.repeatZeroOrMore(rEString67);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher66.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher71 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString72 = null;
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher71.repeatZeroOrMore(rEString72);
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher71.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher66.matchesAnyChar(rEString75);
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher63.makeParenthesis(rEString76);
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher47.eitherPattern(rEString61, rEString77);
        st1920.automaton.RegExpMatcher regExpMatcher79 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher79.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher47.repeatZeroOrMore(rEString81);
        st1920.automaton.RegExpMatcher.MatchString matchString83 = regExpMatcher47.makeAlpha();
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher47.matchesNoChar();
        boolean boolean85 = st1920.automaton.RegExpMatcher.matches(matchString46, rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test039");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher6.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher6.matchesAnyChar(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher3.makeParenthesis(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher0.matchesNOrMoreOccurences(rEString16, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.MatchString matchString24 = regExpMatcher0.makeConcatenation("", "1");
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher0.matchesBracketChars("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
    }

    @Test
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test040");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher20.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher17.makeParenthesis(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher12.matchesAnyChar(rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher12.repeatOneOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher0.matchesNToMOccurences(rEString36, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher0.makeAlphareg();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
    }

    @Test
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test041");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher5.makeParenthesis(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher0.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher21.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher29.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher34 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = null;
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher34.repeatZeroOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher34.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher29.matchesAnyChar(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher26.makeParenthesis(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher21.matchesAnyChar(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher42 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher42.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher21.repeatOneOrMore(rEString44);
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher0.eitherPattern(rEString44, rEString49);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = null;
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.repeatZeroOrMore(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher52.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher0.matchesNToMOccurences(rEString56, (-1), 100);
        st1920.automaton.RegExpMatcher.MatchString matchString62 = regExpMatcher0.makeConcatenation("", "hi!hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
    }

    @Test
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test042");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher0.matchesString("#");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
    }

    @Test
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test043");
        st1920.automaton.RegExpMatcher.MatchString matchString1 = new st1920.automaton.RegExpMatcher.MatchString("[^hi!]");
        java.lang.String str2 = matchString1.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "[^hi!]" + "'", str2.equals("[^hi!]"));
    }

    @Test
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test044");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher0.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher0.matchesString("");
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher41 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = null;
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher41.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher41.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString47 = null;
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.repeatZeroOrMore(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher41.matchesAnyChar(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher38.makeParenthesis(rEString51);
        st1920.automaton.RegExpMatcher regExpMatcher53 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString54 = null;
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher53.repeatZeroOrMore(rEString54);
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher53.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher58 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString59 = null;
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher58.repeatZeroOrMore(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher58.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher53.matchesAnyChar(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher53.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher65 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString66 = null;
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher65.repeatZeroOrMore(rEString66);
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher65.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher70 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString71 = null;
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher70.repeatZeroOrMore(rEString71);
        st1920.automaton.RegExpMatcher regExpMatcher73 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString74 = null;
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher73.repeatZeroOrMore(rEString74);
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher73.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher78 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString79 = null;
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher78.repeatZeroOrMore(rEString79);
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher78.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher73.matchesAnyChar(rEString82);
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher70.makeParenthesis(rEString83);
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher65.matchesAnyChar(rEString83);
        st1920.automaton.RegExpMatcher regExpMatcher86 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString88 = regExpMatcher86.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString89 = regExpMatcher65.repeatOneOrMore(rEString88);
        st1920.automaton.RegExpMatcher.REString rEString92 = regExpMatcher53.matchesNToMOccurences(rEString89, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString93 = regExpMatcher53.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString94 = regExpMatcher38.makeParenthesis(rEString93);
        java.lang.String str95 = rEString93.getString();
        st1920.automaton.RegExpMatcher.REString rEString96 = regExpMatcher0.matchesAnyChar(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str95 + "' != '" + "a" + "'", str95.equals("a"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
    }

    @Test
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test045");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString6 = regExpMatcher0.makeConcatenation("hi!", "hi!");
        st1920.automaton.RegExpMatcher.MatchString matchString7 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher8.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher20.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher31 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString32 = null;
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher31.repeatZeroOrMore(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher31.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher28.matchesAnyChar(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher20.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher20.matchesNumBetweenNandM(0, (int) ' ');
        st1920.automaton.RegExpMatcher regExpMatcher41 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = null;
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher41.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher41.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher41.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString47 = null;
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.repeatZeroOrMore(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher51 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString52 = null;
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher51.repeatZeroOrMore(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher51.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher46.matchesAnyChar(rEString55);
        java.lang.String str57 = rEString55.getString();
        st1920.automaton.RegExpMatcher regExpMatcher58 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString59 = null;
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher58.repeatZeroOrMore(rEString59);
        st1920.automaton.RegExpMatcher regExpMatcher61 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString62 = null;
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher61.repeatZeroOrMore(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher61.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher66 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString67 = null;
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher66.repeatZeroOrMore(rEString67);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher66.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher61.matchesAnyChar(rEString70);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher58.makeParenthesis(rEString71);
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher41.bothPatterns(rEString55, rEString72);
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher20.repeatZeroOrMore(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher8.makeParenthesis(rEString55);
        st1920.automaton.RegExpMatcher regExpMatcher76 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString77 = null;
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher76.repeatZeroOrMore(rEString77);
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher76.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher81 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString82 = null;
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher81.repeatZeroOrMore(rEString82);
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher81.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher76.matchesAnyChar(rEString85);
        java.lang.String str87 = rEString85.getString();
        st1920.automaton.RegExpMatcher.REString rEString89 = regExpMatcher8.matchesNOccurences(rEString85, 10);
        st1920.automaton.RegExpMatcher.REString rEString90 = regExpMatcher0.repeatZeroOrOne(rEString89);
        java.lang.Class<?> wildcardClass91 = rEString90.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str57 + "' != '" + "[^hi!]" + "'", str57.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str87 + "' != '" + "[^hi!]" + "'", str87.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test046");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher20.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher17.makeParenthesis(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher12.matchesAnyChar(rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher12.repeatOneOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher0.matchesNToMOccurences(rEString36, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher0.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher0.matchesNumBetweenNandM(1, (int) (short) -1);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher0.matchesString("");
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher0.matchesNoBracketChars("a");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
    }

    @Test
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test047");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher32.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher37 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString38 = null;
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher37.repeatZeroOrMore(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher37.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher32.matchesAnyChar(rEString41);
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString46 = null;
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.repeatZeroOrMore(rEString46);
        st1920.automaton.RegExpMatcher regExpMatcher48 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher48.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher regExpMatcher51 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString52 = null;
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher51.repeatZeroOrMore(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher51.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString57 = null;
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.repeatZeroOrMore(rEString57);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher56.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher51.matchesAnyChar(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher48.makeParenthesis(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher32.eitherPattern(rEString46, rEString62);
        st1920.automaton.RegExpMatcher regExpMatcher64 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString65 = null;
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher64.repeatZeroOrMore(rEString65);
        st1920.automaton.RegExpMatcher regExpMatcher67 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString68 = null;
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher67.repeatZeroOrMore(rEString68);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher67.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher72 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString73 = null;
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher72.repeatZeroOrMore(rEString73);
        st1920.automaton.RegExpMatcher regExpMatcher75 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString76 = null;
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher75.repeatZeroOrMore(rEString76);
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher75.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher80 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString81 = null;
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher80.repeatZeroOrMore(rEString81);
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher80.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher75.matchesAnyChar(rEString84);
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher72.makeParenthesis(rEString85);
        st1920.automaton.RegExpMatcher.REString rEString87 = regExpMatcher67.matchesAnyChar(rEString85);
        st1920.automaton.RegExpMatcher regExpMatcher88 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString90 = regExpMatcher88.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString91 = regExpMatcher67.repeatOneOrMore(rEString90);
        st1920.automaton.RegExpMatcher.REString rEString93 = regExpMatcher64.matchesNOrMoreOccurences(rEString91, 100);
        st1920.automaton.RegExpMatcher.REString rEString94 = regExpMatcher32.matchesAnyChar(rEString93);
        st1920.automaton.RegExpMatcher.REString rEString95 = regExpMatcher0.matchesAnyChar(rEString94);
        st1920.automaton.RegExpMatcher.MatchString matchString98 = regExpMatcher0.makeConcatenation("hi!", "");
        st1920.automaton.RegExpMatcher.MatchString matchString99 = regExpMatcher0.makeNum();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString99);
    }

    @Test
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test048");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher20.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher17.makeParenthesis(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher12.matchesAnyChar(rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher12.repeatOneOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher0.matchesNToMOccurences(rEString36, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.MatchString matchString41 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.MatchString matchString46 = regExpMatcher0.makeConcatenation("", "a");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
    }

    @Test
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test049");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher35.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher40 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString41 = null;
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher40.repeatZeroOrMore(rEString41);
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher48 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher48.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher48.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher43.matchesAnyChar(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher40.makeParenthesis(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher35.matchesAnyChar(rEString53);
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher35.repeatOneOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher32.matchesNOrMoreOccurences(rEString59, 100);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher0.matchesAnyChar(rEString61);
        st1920.automaton.RegExpMatcher regExpMatcher63 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString64 = null;
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher63.repeatZeroOrMore(rEString64);
        st1920.automaton.RegExpMatcher regExpMatcher66 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString67 = null;
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher66.repeatZeroOrMore(rEString67);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher66.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher71 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString72 = null;
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher71.repeatZeroOrMore(rEString72);
        st1920.automaton.RegExpMatcher regExpMatcher74 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString75 = null;
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher74.repeatZeroOrMore(rEString75);
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher74.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher79 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString80 = null;
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher79.repeatZeroOrMore(rEString80);
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher79.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher74.matchesAnyChar(rEString83);
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher71.makeParenthesis(rEString84);
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher66.matchesAnyChar(rEString84);
        st1920.automaton.RegExpMatcher regExpMatcher87 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString89 = regExpMatcher87.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString90 = regExpMatcher66.repeatOneOrMore(rEString89);
        st1920.automaton.RegExpMatcher.REString rEString92 = regExpMatcher63.matchesNOrMoreOccurences(rEString90, 100);
        java.lang.String str93 = rEString92.getString();
        st1920.automaton.RegExpMatcher.REString rEString95 = regExpMatcher0.matchesNOccurences(rEString92, 100);
        st1920.automaton.RegExpMatcher.MatchString matchString98 = regExpMatcher0.makeConcatenation("1", "[^hi!]");
        st1920.automaton.RegExpMatcher.REString rEString99 = regExpMatcher0.makeNumreg();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString99);
    }

    @Test
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test050");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher3.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher0.matchesAnyChar(rEString7);
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString15 = null;
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.repeatZeroOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher9.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher9.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher21.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher29.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher34 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = null;
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher34.repeatZeroOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher34.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher29.matchesAnyChar(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher26.makeParenthesis(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher21.matchesAnyChar(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher42 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher42.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher21.repeatOneOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher9.matchesNToMOccurences(rEString45, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher9.makeAlphareg();
        st1920.automaton.RegExpMatcher.MatchString matchString50 = regExpMatcher9.makeNum();
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher53 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString54 = null;
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher53.repeatZeroOrMore(rEString54);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher53.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher53.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher58 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString59 = null;
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher58.repeatZeroOrMore(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher58.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher63 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString64 = null;
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher63.repeatZeroOrMore(rEString64);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher63.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher58.matchesAnyChar(rEString67);
        java.lang.String str69 = rEString67.getString();
        st1920.automaton.RegExpMatcher regExpMatcher70 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString71 = null;
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher70.repeatZeroOrMore(rEString71);
        st1920.automaton.RegExpMatcher regExpMatcher73 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString74 = null;
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher73.repeatZeroOrMore(rEString74);
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher73.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher78 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString79 = null;
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher78.repeatZeroOrMore(rEString79);
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher78.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher73.matchesAnyChar(rEString82);
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher70.makeParenthesis(rEString83);
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher53.bothPatterns(rEString67, rEString84);
        st1920.automaton.RegExpMatcher.REString rEString88 = regExpMatcher53.matchesNumBetweenNandM((int) (short) 0, (int) ' ');
        st1920.automaton.RegExpMatcher.REString rEString89 = regExpMatcher0.followPattern(rEString52, rEString88);
        st1920.automaton.RegExpMatcher.REString rEString90 = regExpMatcher0.matchesAnyString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str69 + "' != '" + "[^hi!]" + "'", str69.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
    }

    @Test
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test051");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher3.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher3.matchesAnyChar(rEString12);
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher22.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher27 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString28 = null;
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher27.repeatZeroOrMore(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher27.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher22.matchesAnyChar(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher19.makeParenthesis(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher3.eitherPattern(rEString17, rEString33);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher0.repeatOneOrMore(rEString17);
        st1920.automaton.RegExpMatcher.MatchString matchString38 = regExpMatcher0.makeConcatenation("hi!", "");
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher.MatchString matchString40 = regExpMatcher0.makeAlpha();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
    }

    @Test
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test052");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher20.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher17.makeParenthesis(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher12.matchesAnyChar(rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher12.repeatOneOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher0.matchesNToMOccurences(rEString36, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher0.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher0.matchesNumBetweenNandM(1, (int) (short) -1);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher0.matchesString("");
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher0.matchesBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher0.matchesNumBetweenNandM((int) (short) 10, 1);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher0.matchesString("[^hi!]");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
    }

    @Test
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test053");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher20.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher17.makeParenthesis(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher12.matchesAnyChar(rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher12.repeatOneOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher0.matchesNToMOccurences(rEString36, (int) (short) 1, 0);
        java.lang.String str40 = rEString36.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
    }

    @Test
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test054");
        st1920.automaton.RegExpMatcher.REString rEString1 = new st1920.automaton.RegExpMatcher.REString("a");
    }

    @Test
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test055");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher5.makeParenthesis(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher0.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher21.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher29.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher34 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = null;
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher34.repeatZeroOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher34.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher29.matchesAnyChar(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher26.makeParenthesis(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher21.matchesAnyChar(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher42 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher42.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher21.repeatOneOrMore(rEString44);
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher0.eitherPattern(rEString44, rEString49);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher55 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString56 = null;
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher55.repeatZeroOrMore(rEString56);
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher55.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher52.matchesAnyChar(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher52.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher62 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString63 = null;
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher62.repeatZeroOrMore(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher62.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher62.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher0.eitherPattern(rEString61, rEString69);
        st1920.automaton.RegExpMatcher.MatchString matchString71 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher.MatchString matchString72 = regExpMatcher0.makeNum();
        java.lang.String str73 = matchString72.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "1" + "'", str73.equals("1"));
    }

    @Test
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test056");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher4 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString5 = null;
        st1920.automaton.RegExpMatcher.REString rEString6 = regExpMatcher4.repeatZeroOrMore(rEString5);
        st1920.automaton.RegExpMatcher regExpMatcher7 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString8 = null;
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher7.repeatZeroOrMore(rEString8);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher7.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher regExpMatcher15 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString16 = null;
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher15.repeatZeroOrMore(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher15.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher15.matchesAnyChar(rEString24);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher12.makeParenthesis(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher7.matchesAnyChar(rEString25);
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher7.repeatOneOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher4.matchesNOrMoreOccurences(rEString31, 100);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher4.matchesNoBracketChars("[^hi!]");
        st1920.automaton.RegExpMatcher regExpMatcher36 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString37 = null;
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher36.repeatZeroOrMore(rEString37);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher36.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher36.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher41 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = null;
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher41.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher41.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString47 = null;
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.repeatZeroOrMore(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher41.matchesAnyChar(rEString50);
        java.lang.String str52 = rEString50.getString();
        st1920.automaton.RegExpMatcher regExpMatcher53 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString54 = null;
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher53.repeatZeroOrMore(rEString54);
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString57 = null;
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.repeatZeroOrMore(rEString57);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher56.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher61 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString62 = null;
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher61.repeatZeroOrMore(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher61.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher56.matchesAnyChar(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher53.makeParenthesis(rEString66);
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher36.bothPatterns(rEString50, rEString67);
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher0.eitherPattern(rEString35, rEString68);
        st1920.automaton.RegExpMatcher.MatchString matchString72 = regExpMatcher0.makeConcatenation("[^hi!]hi!hi!", "a");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str52 + "' != '" + "[^hi!]" + "'", str52.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString72);
    }

    @Test
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test057");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher0.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher.MatchString matchString36 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher regExpMatcher37 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString38 = null;
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher37.repeatZeroOrMore(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher37.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher37.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString47 = null;
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.repeatZeroOrMore(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher51 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString52 = null;
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher51.repeatZeroOrMore(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher51.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher46.matchesAnyChar(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher43.makeParenthesis(rEString56);
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher37.matchesAnyChar(rEString56);
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher37.matchesNoChar();
        java.lang.String str60 = rEString59.getString();
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher0.repeatOneOrMore(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str60 + "' != '" + "#" + "'", str60.equals("#"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
    }

    @Test
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test058");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher32.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher37 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString38 = null;
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher37.repeatZeroOrMore(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher37.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher32.matchesAnyChar(rEString41);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher32.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher44 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString45 = null;
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher44.repeatZeroOrMore(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher44.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher49 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString50 = null;
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher49.repeatZeroOrMore(rEString50);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = null;
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.repeatZeroOrMore(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher52.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher57 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = null;
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher57.repeatZeroOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher57.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher52.matchesAnyChar(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher49.makeParenthesis(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher44.matchesAnyChar(rEString62);
        st1920.automaton.RegExpMatcher regExpMatcher65 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher65.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher44.repeatOneOrMore(rEString67);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher32.matchesNToMOccurences(rEString68, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher32.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher32.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher0.matchesNOccurences(rEString74, (int) '#');
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher0.matchesNoBracketChars("hi!hi!");
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher regExpMatcher81 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString83 = new st1920.automaton.RegExpMatcher.REString("");
        st1920.automaton.RegExpMatcher regExpMatcher84 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher84.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString87 = regExpMatcher84.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString88 = regExpMatcher81.bothPatterns(rEString83, rEString87);
        st1920.automaton.RegExpMatcher.REString rEString89 = regExpMatcher0.repeatZeroOrOne(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
    }

    @Test
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test059");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString14 = regExpMatcher0.makeConcatenation("hi!", "hi!");
        st1920.automaton.RegExpMatcher regExpMatcher15 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString16 = null;
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher15.repeatZeroOrMore(rEString16);
        st1920.automaton.RegExpMatcher regExpMatcher18 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher18.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher18.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher15.repeatOneOrMore(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher0.repeatOneOrMore(rEString23);
        java.lang.String str25 = rEString23.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
    }

    @Test
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test060");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString6 = regExpMatcher0.makeNum();
        java.lang.String str7 = matchString6.getString();
        java.lang.String str8 = matchString6.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "1" + "'", str7.equals("1"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "1" + "'", str8.equals("1"));
    }

    @Test
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test061");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.MatchString matchString4 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesNumBetweenNandM((int) 'a', (int) (byte) 10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
    }

    @Test
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test062");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher20.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher17.makeParenthesis(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher12.matchesAnyChar(rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher12.repeatOneOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher0.matchesNToMOccurences(rEString36, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.MatchString matchString41 = regExpMatcher0.makeNum();
        java.lang.Class<?> wildcardClass42 = regExpMatcher0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test063");
        st1920.automaton.RegExpMatcher.MatchString matchString1 = new st1920.automaton.RegExpMatcher.MatchString("1");
    }

    @Test
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test064");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher6.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher6.matchesAnyChar(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher3.makeParenthesis(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher0.matchesNOrMoreOccurences(rEString16, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher22.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher27 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString28 = null;
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher27.repeatZeroOrMore(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher27.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher22.matchesAnyChar(rEString31);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher33.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher41 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = null;
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher41.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher41.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString47 = null;
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.repeatZeroOrMore(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher41.matchesAnyChar(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher38.makeParenthesis(rEString51);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher22.eitherPattern(rEString36, rEString52);
        st1920.automaton.RegExpMatcher regExpMatcher54 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString55 = null;
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher54.repeatZeroOrMore(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher54.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher59 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString60 = null;
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher59.repeatZeroOrMore(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher59.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher54.matchesAnyChar(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher54.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher22.makeParenthesis(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher0.repeatZeroOrMore(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher0.matchesBracketChars("[^hi!]");
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher0.matchesNumBetweenNandM((int) ' ', (int) ' ');
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
    }

    @Test
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test065");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher35.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher40 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString41 = null;
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher40.repeatZeroOrMore(rEString41);
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher48 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher48.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher48.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher43.matchesAnyChar(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher40.makeParenthesis(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher35.matchesAnyChar(rEString53);
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher35.repeatOneOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher32.matchesNOrMoreOccurences(rEString59, 100);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher0.matchesAnyChar(rEString61);
        st1920.automaton.RegExpMatcher regExpMatcher63 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString64 = null;
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher63.repeatZeroOrMore(rEString64);
        st1920.automaton.RegExpMatcher regExpMatcher66 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString67 = null;
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher66.repeatZeroOrMore(rEString67);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher66.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher71 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString72 = null;
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher71.repeatZeroOrMore(rEString72);
        st1920.automaton.RegExpMatcher regExpMatcher74 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString75 = null;
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher74.repeatZeroOrMore(rEString75);
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher74.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher79 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString80 = null;
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher79.repeatZeroOrMore(rEString80);
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher79.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher74.matchesAnyChar(rEString83);
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher71.makeParenthesis(rEString84);
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher66.matchesAnyChar(rEString84);
        st1920.automaton.RegExpMatcher regExpMatcher87 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString89 = regExpMatcher87.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString90 = regExpMatcher66.repeatOneOrMore(rEString89);
        st1920.automaton.RegExpMatcher.REString rEString92 = regExpMatcher63.matchesNOrMoreOccurences(rEString90, 100);
        java.lang.String str93 = rEString92.getString();
        st1920.automaton.RegExpMatcher.REString rEString95 = regExpMatcher0.matchesNOccurences(rEString92, 100);
        st1920.automaton.RegExpMatcher.MatchString matchString98 = regExpMatcher0.makeConcatenation("1", "[^hi!]");
        st1920.automaton.RegExpMatcher.MatchString matchString99 = regExpMatcher0.makeNum();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString99);
    }

    @Test
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test066");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesAnyString();
        java.lang.Class<?> wildcardClass5 = regExpMatcher0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test067");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher10 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString11 = null;
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher10.repeatZeroOrMore(rEString11);
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher10.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher5.matchesAnyChar(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher5.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher17.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher30 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString31 = null;
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher30.repeatZeroOrMore(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher30.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher25.matchesAnyChar(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher22.makeParenthesis(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher17.matchesAnyChar(rEString35);
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher17.repeatOneOrMore(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher5.matchesNToMOccurences(rEString41, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher5.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher5.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher5.matchesNumBetweenNandM(1, (int) (short) -1);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher0.makeParenthesis(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.MatchString matchString55 = regExpMatcher0.makeConcatenation("", "1");
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = new st1920.automaton.RegExpMatcher.REString("");
        st1920.automaton.RegExpMatcher regExpMatcher59 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher59.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher59.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher56.bothPatterns(rEString58, rEString62);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher0.repeatZeroOrMore(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher0.matchesNoChar();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
    }

    @Test
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test068");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher5.makeParenthesis(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher0.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher21.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher29.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher34 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = null;
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher34.repeatZeroOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher34.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher29.matchesAnyChar(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher26.makeParenthesis(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher21.matchesAnyChar(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher42 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher42.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher21.repeatOneOrMore(rEString44);
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher0.eitherPattern(rEString44, rEString49);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher55 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString56 = null;
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher55.repeatZeroOrMore(rEString56);
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher55.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher52.matchesAnyChar(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher52.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher62 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString63 = null;
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher62.repeatZeroOrMore(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher62.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher62.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher0.eitherPattern(rEString61, rEString69);
        st1920.automaton.RegExpMatcher.MatchString matchString71 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher0.matchesNoChar();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
    }

    @Test
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test069");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher4 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString5 = null;
        st1920.automaton.RegExpMatcher.REString rEString6 = regExpMatcher4.repeatZeroOrMore(rEString5);
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher4.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher4.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString10 = regExpMatcher4.makeNum();
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher16.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher11.matchesAnyChar(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher4.repeatOneOrMore(rEString20);
        st1920.automaton.RegExpMatcher regExpMatcher23 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString24 = null;
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher23.repeatZeroOrMore(rEString24);
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher29.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher34 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = null;
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher34.repeatZeroOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher34.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher29.matchesAnyChar(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher26.makeParenthesis(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher23.matchesNOrMoreOccurences(rEString39, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher4.matchesNOccurences(rEString39, (int) (short) 1);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher0.repeatZeroOrOne(rEString44);
        java.lang.String str46 = rEString45.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
    }

    @Test
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test070");
        st1920.automaton.RegExpMatcher.MatchString matchString1 = new st1920.automaton.RegExpMatcher.MatchString("a");
    }

    @Test
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test071");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher4 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString5 = null;
        st1920.automaton.RegExpMatcher.REString rEString6 = regExpMatcher4.repeatZeroOrMore(rEString5);
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher4.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher4.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString10 = regExpMatcher4.makeNum();
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher16.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher11.matchesAnyChar(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher4.repeatOneOrMore(rEString20);
        st1920.automaton.RegExpMatcher regExpMatcher23 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString24 = null;
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher23.repeatZeroOrMore(rEString24);
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher29.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher34 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = null;
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher34.repeatZeroOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher34.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher29.matchesAnyChar(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher26.makeParenthesis(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher23.matchesNOrMoreOccurences(rEString39, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher4.matchesNOccurences(rEString39, (int) (short) 1);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher0.repeatZeroOrOne(rEString44);
        java.lang.Class<?> wildcardClass46 = regExpMatcher0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test072");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher5.makeParenthesis(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher0.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher21.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher29.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher34 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = null;
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher34.repeatZeroOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher34.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher29.matchesAnyChar(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher26.makeParenthesis(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher21.matchesAnyChar(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher42 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher42.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher21.repeatOneOrMore(rEString44);
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher0.eitherPattern(rEString44, rEString49);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher55 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString56 = null;
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher55.repeatZeroOrMore(rEString56);
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher55.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher52.matchesAnyChar(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher52.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher62 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString63 = null;
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher62.repeatZeroOrMore(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher62.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher62.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher0.eitherPattern(rEString61, rEString69);
        st1920.automaton.RegExpMatcher.MatchString matchString71 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher0.makeNumreg();
        java.lang.String str73 = rEString72.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "1" + "'", str73.equals("1"));
    }

    @Test
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test073");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher3.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher3.matchesAnyChar(rEString12);
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher22.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher27 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString28 = null;
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher27.repeatZeroOrMore(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher27.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher22.matchesAnyChar(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher19.makeParenthesis(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher3.eitherPattern(rEString17, rEString33);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher0.repeatOneOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher36 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString37 = null;
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher36.repeatZeroOrMore(rEString37);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher36.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher41 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = null;
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher41.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher41.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher36.matchesAnyChar(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher36.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher36.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher36.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher36.matchesBracketChars("#");
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher0.matchesNToMOccurences(rEString51, (int) 'a', 0);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher0.makeAlphareg();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
    }

    @Test
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test074");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString6 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher regExpMatcher7 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString8 = null;
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher7.repeatZeroOrMore(rEString8);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher7.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher7.matchesAnyChar(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher0.repeatOneOrMore(rEString16);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher19.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher0.repeatZeroOrOne(rEString24);
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher26.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher26.matchesBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = null;
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher33.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher33.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher41 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher41.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher41.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher38.repeatOneOrMore(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher26.eitherPattern(rEString37, rEString45);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher0.matchesAnyChar(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
    }

    @Test
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test075");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.excludePattern(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
    }

    @Test
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test076");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher0.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher.MatchString matchString36 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher0.matchesString("[^hi!]hi!hi!");
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher0.matchesNumBetweenNandM((int) (byte) -1, 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
    }

    @Test
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test077");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher12.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher17.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher22.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher17.matchesAnyChar(rEString26);
        java.lang.String str28 = rEString26.getString();
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher32.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher37 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString38 = null;
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher37.repeatZeroOrMore(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher37.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher32.matchesAnyChar(rEString41);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher29.makeParenthesis(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher12.bothPatterns(rEString26, rEString43);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher12.matchesNumBetweenNandM((int) (short) 0, (int) ' ');
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher12.matchesBracketChars("[^hi!]hi!hi!");
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher0.matchesNToMOccurences(rEString49, (int) (short) 10, (int) (byte) 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "[^hi!]" + "'", str28.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
    }

    @Test
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test078");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString6 = regExpMatcher0.makeConcatenation("hi!", "hi!");
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher0.matchesNOccurences(rEString7, (int) ' ');
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
    }

    @Test
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test079");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString14 = regExpMatcher0.makeConcatenation("hi!", "hi!");
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher0.matchesBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher0.matchesNoChar();
        java.lang.Class<?> wildcardClass18 = rEString17.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test080");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher20.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher17.makeParenthesis(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher12.matchesAnyChar(rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher12.repeatOneOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher0.matchesNToMOccurences(rEString36, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher0.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher0.matchesNumBetweenNandM(1, (int) (short) -1);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher0.matchesString("");
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher0.matchesBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher0.matchesNumBetweenNandM((int) (short) 10, 1);
        st1920.automaton.RegExpMatcher.MatchString matchString53 = regExpMatcher0.makeNum();
        java.lang.Class<?> wildcardClass54 = regExpMatcher0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test081");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString13 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher0.matchesNoChar();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
    }

    @Test
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test082");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher6.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher6.matchesAnyChar(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher3.makeParenthesis(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher0.matchesNOrMoreOccurences(rEString16, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.MatchString matchString24 = regExpMatcher0.makeConcatenation("", "1");
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher0.repeatZeroOrMore(rEString25);
        java.lang.String str27 = rEString26.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "null*" + "'", str27.equals("null*"));
    }

    @Test
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test083");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString15 = null;
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.repeatZeroOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher9.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher6.makeParenthesis(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesAnyChar(rEString19);
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher22.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher22.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher31 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString32 = null;
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher31.repeatZeroOrMore(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher31.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher28.matchesAnyChar(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher28.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher22.repeatOneOrMore(rEString37);
        st1920.automaton.RegExpMatcher regExpMatcher39 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString40 = null;
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher39.repeatZeroOrMore(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher39.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher48 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher48.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher regExpMatcher51 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString52 = null;
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher51.repeatZeroOrMore(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher51.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString57 = null;
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.repeatZeroOrMore(rEString57);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher56.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher51.matchesAnyChar(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher48.makeParenthesis(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher43.matchesAnyChar(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher39.repeatZeroOrOne(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher0.followPattern(rEString38, rEString64);
        java.lang.String str66 = rEString38.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
    }

    @Test
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test084");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher32.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher37 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString38 = null;
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher37.repeatZeroOrMore(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher37.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher32.matchesAnyChar(rEString41);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher32.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher44 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString45 = null;
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher44.repeatZeroOrMore(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher44.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher49 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString50 = null;
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher49.repeatZeroOrMore(rEString50);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = null;
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.repeatZeroOrMore(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher52.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher57 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = null;
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher57.repeatZeroOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher57.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher52.matchesAnyChar(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher49.makeParenthesis(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher44.matchesAnyChar(rEString62);
        st1920.automaton.RegExpMatcher regExpMatcher65 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher65.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher44.repeatOneOrMore(rEString67);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher32.matchesNToMOccurences(rEString68, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher32.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher32.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher0.matchesNOccurences(rEString74, (int) '#');
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher0.matchesNoBracketChars("hi!hi!");
        st1920.automaton.RegExpMatcher.MatchString matchString80 = regExpMatcher0.makeNum();
        java.lang.String str81 = matchString80.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str81 + "' != '" + "1" + "'", str81.equals("1"));
    }

    @Test
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test085");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher.MatchString matchString34 = regExpMatcher0.makeConcatenation("", "");
        st1920.automaton.RegExpMatcher.MatchString matchString35 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher0.matchesString("[^hi!]");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
    }

    @Test
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test086");
        st1920.automaton.RegExpMatcher.REString rEString1 = new st1920.automaton.RegExpMatcher.REString("@");
    }

    @Test
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test087");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher5.makeParenthesis(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher0.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher21.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher29.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher34 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = null;
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher34.repeatZeroOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher34.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher29.matchesAnyChar(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher26.makeParenthesis(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher21.matchesAnyChar(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher42 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher42.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher21.repeatOneOrMore(rEString44);
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher0.eitherPattern(rEString44, rEString49);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher55 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString56 = null;
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher55.repeatZeroOrMore(rEString56);
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher55.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher52.matchesAnyChar(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher52.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher62 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString63 = null;
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher62.repeatZeroOrMore(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher62.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher62.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher0.eitherPattern(rEString61, rEString69);
        st1920.automaton.RegExpMatcher.MatchString matchString71 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher.MatchString matchString72 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher0.makeAlphareg();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
    }

    @Test
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test088");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher6.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher6.matchesAnyChar(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher3.makeParenthesis(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher0.matchesNOrMoreOccurences(rEString16, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher30 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString31 = null;
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher30.repeatZeroOrMore(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher30.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher25.matchesAnyChar(rEString34);
        st1920.automaton.RegExpMatcher regExpMatcher36 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher36.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher36.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher41 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = null;
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher41.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher regExpMatcher44 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString45 = null;
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher44.repeatZeroOrMore(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher44.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher49 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString50 = null;
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher49.repeatZeroOrMore(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher49.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher44.matchesAnyChar(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher41.makeParenthesis(rEString54);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher25.eitherPattern(rEString39, rEString55);
        st1920.automaton.RegExpMatcher regExpMatcher57 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = null;
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher57.repeatZeroOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher57.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher62 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString63 = null;
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher62.repeatZeroOrMore(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher62.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher57.matchesAnyChar(rEString66);
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher57.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher25.makeParenthesis(rEString68);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher0.makeParenthesis(rEString69);
        java.lang.Class<?> wildcardClass71 = rEString70.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test089");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher3.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher3.matchesAnyChar(rEString12);
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher22.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher27 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString28 = null;
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher27.repeatZeroOrMore(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher27.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher22.matchesAnyChar(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher19.makeParenthesis(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher3.eitherPattern(rEString17, rEString33);
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher35.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher40 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString41 = null;
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher40.repeatZeroOrMore(rEString41);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher40.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher35.matchesAnyChar(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher35.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher47 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = null;
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher47.repeatZeroOrMore(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher47.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = null;
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.repeatZeroOrMore(rEString53);
        st1920.automaton.RegExpMatcher regExpMatcher55 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString56 = null;
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher55.repeatZeroOrMore(rEString56);
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher55.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher60 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString61 = null;
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher60.repeatZeroOrMore(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher60.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher55.matchesAnyChar(rEString64);
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher52.makeParenthesis(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher47.matchesAnyChar(rEString65);
        st1920.automaton.RegExpMatcher regExpMatcher68 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher68.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher47.repeatOneOrMore(rEString70);
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher35.matchesNToMOccurences(rEString71, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher35.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher35.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher3.matchesNOccurences(rEString77, (int) '#');
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher0.excludePattern(rEString77);
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher0.matchesBracketChars("hi!hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
    }

    @Test
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test090");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString15 = null;
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.repeatZeroOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher9.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher6.makeParenthesis(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesAnyChar(rEString19);
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher22.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher22.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher31 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString32 = null;
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher31.repeatZeroOrMore(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher31.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher28.matchesAnyChar(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher28.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher22.repeatOneOrMore(rEString37);
        st1920.automaton.RegExpMatcher regExpMatcher39 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString40 = null;
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher39.repeatZeroOrMore(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher39.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher48 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher48.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher regExpMatcher51 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString52 = null;
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher51.repeatZeroOrMore(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher51.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString57 = null;
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.repeatZeroOrMore(rEString57);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher56.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher51.matchesAnyChar(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher48.makeParenthesis(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher43.matchesAnyChar(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher39.repeatZeroOrOne(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher0.followPattern(rEString38, rEString64);
        st1920.automaton.RegExpMatcher.MatchString matchString68 = regExpMatcher0.makeConcatenation("", "1");
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher0.matchesString("a");
        st1920.automaton.RegExpMatcher.REString rEString72 = new st1920.automaton.RegExpMatcher.REString("hi!");
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher0.repeatZeroOrOne(rEString72);
        st1920.automaton.RegExpMatcher.MatchString matchString74 = regExpMatcher0.makeAlpha();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString74);
    }

    @Test
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test091");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher32.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher37 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString38 = null;
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher37.repeatZeroOrMore(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher37.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher32.matchesAnyChar(rEString41);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher32.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher44 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString45 = null;
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher44.repeatZeroOrMore(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher44.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher49 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString50 = null;
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher49.repeatZeroOrMore(rEString50);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = null;
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.repeatZeroOrMore(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher52.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher57 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = null;
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher57.repeatZeroOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher57.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher52.matchesAnyChar(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher49.makeParenthesis(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher44.matchesAnyChar(rEString62);
        st1920.automaton.RegExpMatcher regExpMatcher65 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher65.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher44.repeatOneOrMore(rEString67);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher32.matchesNToMOccurences(rEString68, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher32.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher32.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher0.matchesNOccurences(rEString74, (int) '#');
        st1920.automaton.RegExpMatcher regExpMatcher77 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString78 = null;
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher77.repeatZeroOrMore(rEString78);
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher77.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher77.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher77.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher0.repeatOneOrMore(rEString85);
        java.lang.String str87 = rEString85.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str87 + "' != '" + "1" + "'", str87.equals("1"));
    }

    @Test
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test092");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher5.makeParenthesis(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher0.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher0.matchesNOccurences(rEString21, (-1));
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher29.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher24.matchesAnyChar(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher24.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher36 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString37 = null;
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher36.repeatZeroOrMore(rEString37);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher36.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher41 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = null;
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher41.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher regExpMatcher44 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString45 = null;
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher44.repeatZeroOrMore(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher44.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher49 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString50 = null;
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher49.repeatZeroOrMore(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher49.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher44.matchesAnyChar(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher41.makeParenthesis(rEString54);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher36.matchesAnyChar(rEString54);
        st1920.automaton.RegExpMatcher regExpMatcher57 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher57.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher36.repeatOneOrMore(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher24.matchesNToMOccurences(rEString60, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher24.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher24.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher0.matchesAnyChar(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
    }

    @Test
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test093");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher8.matchesAnyChar(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher0.repeatZeroOrMore(rEString16);
        st1920.automaton.RegExpMatcher regExpMatcher18 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString19 = null;
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher18.repeatZeroOrMore(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher18.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher18.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher23 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString24 = null;
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher23.repeatZeroOrMore(rEString24);
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher23.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString29 = null;
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.repeatZeroOrMore(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher28.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher23.matchesAnyChar(rEString32);
        java.lang.String str34 = rEString32.getString();
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher38.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher38.matchesAnyChar(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher35.makeParenthesis(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher18.bothPatterns(rEString32, rEString49);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher18.matchesNumBetweenNandM((int) (short) 0, (int) ' ');
        st1920.automaton.RegExpMatcher.REString rEString55 = new st1920.automaton.RegExpMatcher.REString("");
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher18.excludePattern(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher0.repeatZeroOrOne(rEString55);
        java.lang.String str58 = rEString57.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "[^hi!]" + "'", str34.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
    }

    @Test
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test094");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher32.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher37 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString38 = null;
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher37.repeatZeroOrMore(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher37.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher32.matchesAnyChar(rEString41);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher32.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher44 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString45 = null;
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher44.repeatZeroOrMore(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher44.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher49 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString50 = null;
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher49.repeatZeroOrMore(rEString50);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = null;
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.repeatZeroOrMore(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher52.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher57 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = null;
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher57.repeatZeroOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher57.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher52.matchesAnyChar(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher49.makeParenthesis(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher44.matchesAnyChar(rEString62);
        st1920.automaton.RegExpMatcher regExpMatcher65 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher65.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher44.repeatOneOrMore(rEString67);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher32.matchesNToMOccurences(rEString68, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher32.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher32.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher0.matchesNOccurences(rEString74, (int) '#');
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher0.matchesNoBracketChars("hi!hi!");
        st1920.automaton.RegExpMatcher.MatchString matchString80 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher0.matchesNoBracketChars("null*");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
    }

    @Test
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test095");
        st1920.automaton.RegExpMatcher.MatchString matchString1 = new st1920.automaton.RegExpMatcher.MatchString("hi!hi!");
        st1920.automaton.RegExpMatcher regExpMatcher2 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString3 = null;
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher2.repeatZeroOrMore(rEString3);
        st1920.automaton.RegExpMatcher.REString rEString6 = regExpMatcher2.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher7 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString8 = null;
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher7.repeatZeroOrMore(rEString8);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher7.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher2.matchesAnyChar(rEString11);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher2.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString16 = regExpMatcher2.makeConcatenation("hi!", "hi!");
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher regExpMatcher23 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString24 = null;
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher23.repeatZeroOrMore(rEString24);
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher23.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString29 = null;
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.repeatZeroOrMore(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher28.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher23.matchesAnyChar(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher20.makeParenthesis(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher17.matchesNOrMoreOccurences(rEString33, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher17.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher17.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher17.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher2.excludePattern(rEString41);
        boolean boolean43 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString41);
        java.lang.String str44 = matchString1.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str44 + "' != '" + "hi!hi!" + "'", str44.equals("hi!hi!"));
    }

    @Test
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test096");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher3.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher0.matchesAnyChar(rEString7);
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString15 = null;
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.repeatZeroOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher9.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher9.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher21.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher29.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher34 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = null;
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher34.repeatZeroOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher34.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher29.matchesAnyChar(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher26.makeParenthesis(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher21.matchesAnyChar(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher42 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher42.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher21.repeatOneOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher9.matchesNToMOccurences(rEString45, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher9.makeAlphareg();
        st1920.automaton.RegExpMatcher.MatchString matchString50 = regExpMatcher9.makeNum();
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher53 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString54 = null;
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher53.repeatZeroOrMore(rEString54);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher53.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher53.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher58 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString59 = null;
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher58.repeatZeroOrMore(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher58.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher63 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString64 = null;
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher63.repeatZeroOrMore(rEString64);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher63.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher58.matchesAnyChar(rEString67);
        java.lang.String str69 = rEString67.getString();
        st1920.automaton.RegExpMatcher regExpMatcher70 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString71 = null;
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher70.repeatZeroOrMore(rEString71);
        st1920.automaton.RegExpMatcher regExpMatcher73 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString74 = null;
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher73.repeatZeroOrMore(rEString74);
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher73.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher78 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString79 = null;
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher78.repeatZeroOrMore(rEString79);
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher78.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher73.matchesAnyChar(rEString82);
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher70.makeParenthesis(rEString83);
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher53.bothPatterns(rEString67, rEString84);
        st1920.automaton.RegExpMatcher.REString rEString88 = regExpMatcher53.matchesNumBetweenNandM((int) (short) 0, (int) ' ');
        st1920.automaton.RegExpMatcher.REString rEString89 = regExpMatcher0.followPattern(rEString52, rEString88);
        st1920.automaton.RegExpMatcher.MatchString matchString92 = regExpMatcher0.makeConcatenation("", "a");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str69 + "' != '" + "[^hi!]" + "'", str69.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString92);
    }

    @Test
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test097");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString7 = regExpMatcher0.makeConcatenation("[^hi!]", "hi!hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesNumBetweenNandM((-1), 0);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString15 = null;
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.repeatZeroOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher22.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher27 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString28 = null;
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher27.repeatZeroOrMore(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher27.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher22.matchesAnyChar(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher19.makeParenthesis(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher14.matchesAnyChar(rEString32);
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher35.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher40 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString41 = null;
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher40.repeatZeroOrMore(rEString41);
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher48 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher48.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher48.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher43.matchesAnyChar(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher40.makeParenthesis(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher35.matchesAnyChar(rEString53);
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher35.repeatOneOrMore(rEString58);
        st1920.automaton.RegExpMatcher regExpMatcher60 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher60.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString63 = null;
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher60.repeatZeroOrMore(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher14.eitherPattern(rEString58, rEString63);
        st1920.automaton.RegExpMatcher regExpMatcher66 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher66.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher69 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString70 = null;
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher69.repeatZeroOrMore(rEString70);
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher69.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher66.matchesAnyChar(rEString73);
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher66.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher76 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString77 = null;
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher76.repeatZeroOrMore(rEString77);
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher76.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher76.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher14.eitherPattern(rEString75, rEString83);
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher11.makeParenthesis(rEString75);
        st1920.automaton.RegExpMatcher regExpMatcher86 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString87 = null;
        st1920.automaton.RegExpMatcher.REString rEString88 = regExpMatcher86.repeatZeroOrMore(rEString87);
        st1920.automaton.RegExpMatcher.REString rEString90 = regExpMatcher86.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString93 = regExpMatcher86.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher.REString rEString94 = regExpMatcher0.eitherPattern(rEString85, rEString93);
        java.lang.Class<?> wildcardClass95 = rEString85.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test098");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher3.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher3.matchesAnyChar(rEString12);
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher22.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher27 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString28 = null;
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher27.repeatZeroOrMore(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher27.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher22.matchesAnyChar(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher19.makeParenthesis(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher3.eitherPattern(rEString17, rEString33);
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher35.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher40 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString41 = null;
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher40.repeatZeroOrMore(rEString41);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher40.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher35.matchesAnyChar(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher35.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher47 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = null;
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher47.repeatZeroOrMore(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher47.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = null;
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.repeatZeroOrMore(rEString53);
        st1920.automaton.RegExpMatcher regExpMatcher55 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString56 = null;
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher55.repeatZeroOrMore(rEString56);
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher55.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher60 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString61 = null;
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher60.repeatZeroOrMore(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher60.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher55.matchesAnyChar(rEString64);
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher52.makeParenthesis(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher47.matchesAnyChar(rEString65);
        st1920.automaton.RegExpMatcher regExpMatcher68 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher68.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher47.repeatOneOrMore(rEString70);
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher35.matchesNToMOccurences(rEString71, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher35.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher35.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher3.matchesNOccurences(rEString77, (int) '#');
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher0.excludePattern(rEString77);
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher0.makeAlphareg();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
    }

    @Test
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test099");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher6.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher6.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString12 = regExpMatcher6.makeNum();
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher18 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString19 = null;
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher18.repeatZeroOrMore(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher18.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher13.matchesAnyChar(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher6.repeatOneOrMore(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher0.matchesNOccurences(rEString24, (int) (short) 10);
        st1920.automaton.RegExpMatcher regExpMatcher27 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString28 = null;
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher27.repeatZeroOrMore(rEString28);
        st1920.automaton.RegExpMatcher regExpMatcher30 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString31 = null;
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher30.repeatZeroOrMore(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher30.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher35.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher30.matchesAnyChar(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher41 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher41.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher41.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString47 = null;
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.repeatZeroOrMore(rEString47);
        st1920.automaton.RegExpMatcher regExpMatcher49 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString50 = null;
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher49.repeatZeroOrMore(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher49.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher54 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString55 = null;
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher54.repeatZeroOrMore(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher54.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher49.matchesAnyChar(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher46.makeParenthesis(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher30.eitherPattern(rEString44, rEString60);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher27.repeatOneOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString64 = new st1920.automaton.RegExpMatcher.REString("hi!hi!");
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher0.bothPatterns(rEString62, rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
    }

    @Test
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test100");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher4 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString5 = null;
        st1920.automaton.RegExpMatcher.REString rEString6 = regExpMatcher4.repeatZeroOrMore(rEString5);
        st1920.automaton.RegExpMatcher regExpMatcher7 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString8 = null;
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher7.repeatZeroOrMore(rEString8);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher7.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher regExpMatcher15 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString16 = null;
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher15.repeatZeroOrMore(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher15.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher15.matchesAnyChar(rEString24);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher12.makeParenthesis(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher7.matchesAnyChar(rEString25);
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher7.repeatOneOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher4.matchesNOrMoreOccurences(rEString31, 100);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher4.matchesNoBracketChars("[^hi!]");
        st1920.automaton.RegExpMatcher regExpMatcher36 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString37 = null;
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher36.repeatZeroOrMore(rEString37);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher36.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher36.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher41 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = null;
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher41.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher41.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString47 = null;
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.repeatZeroOrMore(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher41.matchesAnyChar(rEString50);
        java.lang.String str52 = rEString50.getString();
        st1920.automaton.RegExpMatcher regExpMatcher53 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString54 = null;
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher53.repeatZeroOrMore(rEString54);
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString57 = null;
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.repeatZeroOrMore(rEString57);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher56.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher61 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString62 = null;
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher61.repeatZeroOrMore(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher61.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher56.matchesAnyChar(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher53.makeParenthesis(rEString66);
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher36.bothPatterns(rEString50, rEString67);
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher0.eitherPattern(rEString35, rEString68);
        st1920.automaton.RegExpMatcher.MatchString matchString70 = regExpMatcher0.makeAlpha();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str52 + "' != '" + "[^hi!]" + "'", str52.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString70);
    }

    @Test
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test101");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher5.makeParenthesis(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher0.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher21.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher29.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher34 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = null;
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher34.repeatZeroOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher34.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher29.matchesAnyChar(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher26.makeParenthesis(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher21.matchesAnyChar(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher42 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher42.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher21.repeatOneOrMore(rEString44);
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher0.eitherPattern(rEString44, rEString49);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher55 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString56 = null;
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher55.repeatZeroOrMore(rEString56);
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher55.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher52.matchesAnyChar(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher52.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher62 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString63 = null;
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher62.repeatZeroOrMore(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher62.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher62.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher0.eitherPattern(rEString61, rEString69);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher0.makeAlphareg();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
    }

    @Test
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test102");
        st1920.automaton.RegExpMatcher.REString rEString1 = new st1920.automaton.RegExpMatcher.REString("#");
    }

    @Test
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test103");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher8.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher0.excludePattern(rEString11);
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher18 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString19 = null;
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher18.repeatZeroOrMore(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher18.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher13.matchesAnyChar(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher13.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher30 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString31 = null;
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher30.repeatZeroOrMore(rEString31);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = null;
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher33.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher38.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher33.matchesAnyChar(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher30.makeParenthesis(rEString43);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher25.matchesAnyChar(rEString43);
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher25.repeatOneOrMore(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher13.matchesNToMOccurences(rEString49, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher13.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher13.matchesBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString57 = null;
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.repeatZeroOrMore(rEString57);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher56.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher61 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString62 = null;
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher61.repeatZeroOrMore(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher61.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher56.matchesAnyChar(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher56.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher56.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher56.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher0.bothPatterns(rEString55, rEString69);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher0.makeNumreg();
        java.lang.String str72 = rEString71.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str72 + "' != '" + "1" + "'", str72.equals("1"));
    }

    @Test
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test104");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher32.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher37 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString38 = null;
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher37.repeatZeroOrMore(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher37.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher32.matchesAnyChar(rEString41);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher32.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher44 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString45 = null;
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher44.repeatZeroOrMore(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher44.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher49 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString50 = null;
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher49.repeatZeroOrMore(rEString50);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = null;
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.repeatZeroOrMore(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher52.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher57 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = null;
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher57.repeatZeroOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher57.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher52.matchesAnyChar(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher49.makeParenthesis(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher44.matchesAnyChar(rEString62);
        st1920.automaton.RegExpMatcher regExpMatcher65 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher65.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher44.repeatOneOrMore(rEString67);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher32.matchesNToMOccurences(rEString68, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher32.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher32.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher0.matchesNOccurences(rEString74, (int) '#');
        st1920.automaton.RegExpMatcher regExpMatcher77 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString78 = null;
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher77.repeatZeroOrMore(rEString78);
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher77.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher77.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher77.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher0.repeatOneOrMore(rEString85);
        st1920.automaton.RegExpMatcher.MatchString matchString89 = regExpMatcher0.makeConcatenation("[^hi!]", "1");
        st1920.automaton.RegExpMatcher.REString rEString91 = regExpMatcher0.matchesBracketChars("a");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
    }

    @Test
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test105");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher32.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher37 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString38 = null;
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher37.repeatZeroOrMore(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher37.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher32.matchesAnyChar(rEString41);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher32.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher44 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString45 = null;
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher44.repeatZeroOrMore(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher44.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher49 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString50 = null;
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher49.repeatZeroOrMore(rEString50);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = null;
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.repeatZeroOrMore(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher52.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher57 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = null;
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher57.repeatZeroOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher57.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher52.matchesAnyChar(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher49.makeParenthesis(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher44.matchesAnyChar(rEString62);
        st1920.automaton.RegExpMatcher regExpMatcher65 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher65.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher44.repeatOneOrMore(rEString67);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher32.matchesNToMOccurences(rEString68, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher32.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher32.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher0.matchesNOccurences(rEString74, (int) '#');
        st1920.automaton.RegExpMatcher.MatchString matchString77 = regExpMatcher0.makeNum();
        java.lang.String str78 = matchString77.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str78 + "' != '" + "1" + "'", str78.equals("1"));
    }

    @Test
    public void test106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test106");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString6 = regExpMatcher0.makeConcatenation("hi!", "hi!");
        java.lang.Class<?> wildcardClass7 = regExpMatcher0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test107");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher10 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString11 = null;
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher10.repeatZeroOrMore(rEString11);
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher10.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher5.matchesAnyChar(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher5.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher17.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher30 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString31 = null;
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher30.repeatZeroOrMore(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher30.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher25.matchesAnyChar(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher22.makeParenthesis(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher17.matchesAnyChar(rEString35);
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher17.repeatOneOrMore(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher5.matchesNToMOccurences(rEString41, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher5.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher5.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher5.matchesNumBetweenNandM(1, (int) (short) -1);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher0.makeParenthesis(rEString50);
        st1920.automaton.RegExpMatcher.MatchString matchString54 = regExpMatcher0.makeConcatenation("null*", "[^hi!]hi!hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
    }

    @Test
    public void test108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test108");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher.MatchString matchString34 = regExpMatcher0.makeConcatenation("", "");
        st1920.automaton.RegExpMatcher.MatchString matchString35 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher0.matchesNumBetweenNandM((int) (short) 1, (int) (short) 1);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher0.matchesString("");
        st1920.automaton.RegExpMatcher.MatchString matchString43 = regExpMatcher0.makeConcatenation("hi!hi!", "hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
    }

    @Test
    public void test109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test109");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString15 = null;
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.repeatZeroOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher9.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher6.makeParenthesis(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesAnyChar(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher0.matchesString("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher24.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher29.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher34 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = null;
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher34.repeatZeroOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher34.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher29.matchesAnyChar(rEString38);
        java.lang.String str40 = rEString38.getString();
        st1920.automaton.RegExpMatcher regExpMatcher41 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = null;
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher41.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher regExpMatcher44 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString45 = null;
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher44.repeatZeroOrMore(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher44.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher49 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString50 = null;
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher49.repeatZeroOrMore(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher49.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher44.matchesAnyChar(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher41.makeParenthesis(rEString54);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher24.bothPatterns(rEString38, rEString55);
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher24.matchesNumBetweenNandM((int) (short) 0, (int) ' ');
        st1920.automaton.RegExpMatcher regExpMatcher60 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString61 = null;
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher60.repeatZeroOrMore(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher60.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher60.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString68 = regExpMatcher60.makeConcatenation("", "1");
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher60.matchesBracketChars("1");
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher0.followPattern(rEString59, rEString70);
        st1920.automaton.RegExpMatcher regExpMatcher72 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString73 = null;
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher72.repeatZeroOrMore(rEString73);
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher72.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher72.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher77 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString78 = null;
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher77.repeatZeroOrMore(rEString78);
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher77.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher82 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString83 = null;
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher82.repeatZeroOrMore(rEString83);
        st1920.automaton.RegExpMatcher regExpMatcher85 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString86 = null;
        st1920.automaton.RegExpMatcher.REString rEString87 = regExpMatcher85.repeatZeroOrMore(rEString86);
        st1920.automaton.RegExpMatcher.REString rEString89 = regExpMatcher85.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher90 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString91 = null;
        st1920.automaton.RegExpMatcher.REString rEString92 = regExpMatcher90.repeatZeroOrMore(rEString91);
        st1920.automaton.RegExpMatcher.REString rEString94 = regExpMatcher90.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString95 = regExpMatcher85.matchesAnyChar(rEString94);
        st1920.automaton.RegExpMatcher.REString rEString96 = regExpMatcher82.makeParenthesis(rEString95);
        st1920.automaton.RegExpMatcher.REString rEString97 = regExpMatcher77.matchesAnyChar(rEString95);
        st1920.automaton.RegExpMatcher.REString rEString98 = regExpMatcher72.matchesAnyChar(rEString97);
        st1920.automaton.RegExpMatcher.REString rEString99 = regExpMatcher0.repeatOneOrMore(rEString98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "[^hi!]" + "'", str40.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString99);
    }

    @Test
    public void test110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test110");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher17.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher12.matchesAnyChar(rEString21);
        st1920.automaton.RegExpMatcher.MatchString matchString25 = regExpMatcher12.makeConcatenation("hi!hi!", "[^hi!]");
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher26.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher31 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString32 = null;
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher31.repeatZeroOrMore(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher31.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher26.matchesAnyChar(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher26.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher38.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString47 = null;
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.repeatZeroOrMore(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher51 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString52 = null;
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher51.repeatZeroOrMore(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher51.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher46.matchesAnyChar(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher43.makeParenthesis(rEString56);
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher38.matchesAnyChar(rEString56);
        st1920.automaton.RegExpMatcher regExpMatcher59 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher59.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher38.repeatOneOrMore(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher26.matchesNToMOccurences(rEString62, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher26.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher26.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher12.makeParenthesis(rEString68);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher12.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher71 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString72 = null;
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher71.repeatZeroOrMore(rEString72);
        st1920.automaton.RegExpMatcher regExpMatcher74 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString75 = null;
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher74.repeatZeroOrMore(rEString75);
        st1920.automaton.RegExpMatcher regExpMatcher77 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString78 = null;
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher77.repeatZeroOrMore(rEString78);
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher77.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher82 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString83 = null;
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher82.repeatZeroOrMore(rEString83);
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher82.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString87 = regExpMatcher77.matchesAnyChar(rEString86);
        st1920.automaton.RegExpMatcher.REString rEString88 = regExpMatcher74.makeParenthesis(rEString87);
        st1920.automaton.RegExpMatcher.REString rEString90 = regExpMatcher71.matchesNOrMoreOccurences(rEString87, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString92 = regExpMatcher71.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString93 = regExpMatcher71.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString94 = regExpMatcher0.bothPatterns(rEString70, rEString93);
        st1920.automaton.RegExpMatcher.MatchString matchString97 = regExpMatcher0.makeConcatenation("a", "[^hi!]hi!hi!");
        st1920.automaton.RegExpMatcher.REString rEString98 = null;
        st1920.automaton.RegExpMatcher.REString rEString99 = regExpMatcher0.repeatZeroOrOne(rEString98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString99);
    }

    @Test
    public void test111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test111");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString5 = regExpMatcher0.makeNum();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
    }

    @Test
    public void test112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test112");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.MatchString matchString13 = regExpMatcher0.makeConcatenation("hi!hi!", "[^hi!]");
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString15 = null;
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.repeatZeroOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher14.matchesAnyChar(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher14.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher26.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher31 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString32 = null;
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher31.repeatZeroOrMore(rEString32);
        st1920.automaton.RegExpMatcher regExpMatcher34 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = null;
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher34.repeatZeroOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher34.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher39 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString40 = null;
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher39.repeatZeroOrMore(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher39.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher34.matchesAnyChar(rEString43);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher31.makeParenthesis(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher26.matchesAnyChar(rEString44);
        st1920.automaton.RegExpMatcher regExpMatcher47 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher47.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher26.repeatOneOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher14.matchesNToMOccurences(rEString50, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher14.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher14.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher0.makeParenthesis(rEString56);
        java.lang.Class<?> wildcardClass58 = regExpMatcher0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test113");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher0.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher.MatchString matchString36 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher0.matchesString("[^hi!]hi!hi!");
        st1920.automaton.RegExpMatcher regExpMatcher39 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString40 = null;
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher39.repeatZeroOrMore(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher39.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher44 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString45 = null;
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher44.repeatZeroOrMore(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher44.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher39.matchesAnyChar(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher39.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString53 = regExpMatcher39.makeConcatenation("hi!", "hi!");
        st1920.automaton.RegExpMatcher regExpMatcher54 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString55 = null;
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher54.repeatZeroOrMore(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher54.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher59 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString60 = null;
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher59.repeatZeroOrMore(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher59.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher54.matchesAnyChar(rEString63);
        st1920.automaton.RegExpMatcher regExpMatcher65 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher65.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString68 = null;
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher65.repeatZeroOrMore(rEString68);
        st1920.automaton.RegExpMatcher regExpMatcher70 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString71 = null;
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher70.repeatZeroOrMore(rEString71);
        st1920.automaton.RegExpMatcher regExpMatcher73 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString74 = null;
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher73.repeatZeroOrMore(rEString74);
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher73.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher78 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString79 = null;
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher78.repeatZeroOrMore(rEString79);
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher78.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher73.matchesAnyChar(rEString82);
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher70.makeParenthesis(rEString83);
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher54.eitherPattern(rEString68, rEString84);
        st1920.automaton.RegExpMatcher regExpMatcher86 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString88 = regExpMatcher86.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString89 = regExpMatcher54.repeatZeroOrMore(rEString88);
        st1920.automaton.RegExpMatcher.REString rEString90 = regExpMatcher39.matchesAnyChar(rEString88);
        st1920.automaton.RegExpMatcher.REString rEString93 = regExpMatcher0.matchesNToMOccurences(rEString88, (int) (short) 1, (int) (byte) 10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
    }

    @Test
    public void test114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test114");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher8.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher0.excludePattern(rEString11);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher0.matchesNumBetweenNandM((int) (short) 0, (int) (short) 1);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher0.matchesNoChar();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
    }

    @Test
    public void test115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test115");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher32.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher37 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString38 = null;
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher37.repeatZeroOrMore(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher37.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher32.matchesAnyChar(rEString41);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher32.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher44 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString45 = null;
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher44.repeatZeroOrMore(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher44.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher49 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString50 = null;
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher49.repeatZeroOrMore(rEString50);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = null;
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.repeatZeroOrMore(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher52.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher57 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = null;
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher57.repeatZeroOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher57.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher52.matchesAnyChar(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher49.makeParenthesis(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher44.matchesAnyChar(rEString62);
        st1920.automaton.RegExpMatcher regExpMatcher65 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher65.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher44.repeatOneOrMore(rEString67);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher32.matchesNToMOccurences(rEString68, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher32.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher32.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher0.matchesNOccurences(rEString74, (int) '#');
        st1920.automaton.RegExpMatcher regExpMatcher77 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString78 = null;
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher77.repeatZeroOrMore(rEString78);
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher77.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher77.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher77.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher0.repeatOneOrMore(rEString85);
        st1920.automaton.RegExpMatcher.REString rEString88 = regExpMatcher0.matchesNoBracketChars("[^hi!]hi!hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
    }

    @Test
    public void test116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test116");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher10 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString11 = null;
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher10.repeatZeroOrMore(rEString11);
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher10.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher5.matchesAnyChar(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString19 = null;
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher16.repeatZeroOrMore(rEString19);
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher29.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher24.matchesAnyChar(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher21.makeParenthesis(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher5.eitherPattern(rEString19, rEString35);
        st1920.automaton.RegExpMatcher regExpMatcher37 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString38 = null;
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher37.repeatZeroOrMore(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher37.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher42 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString43 = null;
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher42.repeatZeroOrMore(rEString43);
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher42.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher37.matchesAnyChar(rEString46);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher37.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher49 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString50 = null;
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher49.repeatZeroOrMore(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher49.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher54 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString55 = null;
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher54.repeatZeroOrMore(rEString55);
        st1920.automaton.RegExpMatcher regExpMatcher57 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = null;
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher57.repeatZeroOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher57.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher62 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString63 = null;
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher62.repeatZeroOrMore(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher62.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher57.matchesAnyChar(rEString66);
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher54.makeParenthesis(rEString67);
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher49.matchesAnyChar(rEString67);
        st1920.automaton.RegExpMatcher regExpMatcher70 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher70.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher49.repeatOneOrMore(rEString72);
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher37.matchesNToMOccurences(rEString73, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher37.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher37.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher5.matchesNOccurences(rEString79, (int) '#');
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher5.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher5.matchesString("[^hi!]hi!hi!");
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher0.makeParenthesis(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
    }

    @Test
    public void test117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test117");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher6.matchesAnyChar(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher6.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher0.repeatOneOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher0.matchesBracketChars("1");
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher0.matchesNoChar();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
    }

    @Test
    public void test118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test118");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher3.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher3.matchesAnyChar(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher0.makeParenthesis(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher0.matchesNoChar();
        java.lang.String str16 = rEString15.getString();
        java.lang.String str17 = rEString15.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "#" + "'", str16.equals("#"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "#" + "'", str17.equals("#"));
    }

    @Test
    public void test119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test119");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString7 = regExpMatcher0.makeConcatenation("[^hi!]", "hi!hi!");
        java.lang.String str8 = matchString7.getString();
        java.lang.String str9 = matchString7.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "[^hi!]hi!hi!" + "'", str8.equals("[^hi!]hi!hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "[^hi!]hi!hi!" + "'", str9.equals("[^hi!]hi!hi!"));
    }

    @Test
    public void test120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test120");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher35.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher40 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString41 = null;
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher40.repeatZeroOrMore(rEString41);
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher48 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher48.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher48.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher43.matchesAnyChar(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher40.makeParenthesis(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher35.matchesAnyChar(rEString53);
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher35.repeatOneOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher32.matchesNOrMoreOccurences(rEString59, 100);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher0.matchesAnyChar(rEString61);
        st1920.automaton.RegExpMatcher regExpMatcher63 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString64 = null;
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher63.repeatZeroOrMore(rEString64);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher63.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher68 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString69 = null;
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher68.repeatZeroOrMore(rEString69);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher68.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher63.matchesAnyChar(rEString72);
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher63.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString77 = regExpMatcher63.makeConcatenation("hi!", "hi!");
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher63.matchesBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher63.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher0.repeatZeroOrOne(rEString80);
        st1920.automaton.RegExpMatcher.MatchString matchString82 = regExpMatcher0.makeAlpha();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString82);
    }

    @Test
    public void test121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test121");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString14 = regExpMatcher0.makeConcatenation("hi!", "hi!");
        st1920.automaton.RegExpMatcher regExpMatcher15 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString16 = null;
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher15.repeatZeroOrMore(rEString16);
        st1920.automaton.RegExpMatcher regExpMatcher18 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString19 = null;
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher18.repeatZeroOrMore(rEString19);
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher21.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher26.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher21.matchesAnyChar(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher18.makeParenthesis(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher15.matchesNOrMoreOccurences(rEString31, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher15.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher15.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher15.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher0.excludePattern(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher41 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = null;
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher41.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher41.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher41.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher47 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher47.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher50 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString51 = null;
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher50.repeatZeroOrMore(rEString51);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher50.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher47.matchesAnyChar(rEString54);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher47.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher41.repeatOneOrMore(rEString56);
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher41.matchesBracketChars("1");
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher41.matchesNumBetweenNandM((int) (byte) -1, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher0.repeatZeroOrOne(rEString62);
        java.lang.Class<?> wildcardClass64 = rEString62.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test122");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher32.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher37 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString38 = null;
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher37.repeatZeroOrMore(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher37.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher32.matchesAnyChar(rEString41);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher32.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher44 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString45 = null;
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher44.repeatZeroOrMore(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher44.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher49 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString50 = null;
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher49.repeatZeroOrMore(rEString50);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = null;
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.repeatZeroOrMore(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher52.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher57 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = null;
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher57.repeatZeroOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher57.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher52.matchesAnyChar(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher49.makeParenthesis(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher44.matchesAnyChar(rEString62);
        st1920.automaton.RegExpMatcher regExpMatcher65 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher65.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher44.repeatOneOrMore(rEString67);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher32.matchesNToMOccurences(rEString68, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher32.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher32.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher0.matchesNOccurences(rEString74, (int) '#');
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher0.matchesNoBracketChars("hi!hi!");
        java.lang.Class<?> wildcardClass80 = regExpMatcher0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test123");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher3.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher3.matchesAnyChar(rEString12);
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher22.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher27 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString28 = null;
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher27.repeatZeroOrMore(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher27.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher22.matchesAnyChar(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher19.makeParenthesis(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher3.eitherPattern(rEString17, rEString33);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher0.repeatOneOrMore(rEString17);
        st1920.automaton.RegExpMatcher.MatchString matchString38 = regExpMatcher0.makeConcatenation("hi!", "");
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher0.matchesNoChar();
        java.lang.String str40 = rEString39.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "#" + "'", str40.equals("#"));
    }

    @Test
    public void test124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test124");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher17.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher12.matchesAnyChar(rEString21);
        st1920.automaton.RegExpMatcher.MatchString matchString25 = regExpMatcher12.makeConcatenation("hi!hi!", "[^hi!]");
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher26.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher31 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString32 = null;
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher31.repeatZeroOrMore(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher31.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher26.matchesAnyChar(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher26.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher38.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString47 = null;
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.repeatZeroOrMore(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher51 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString52 = null;
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher51.repeatZeroOrMore(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher51.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher46.matchesAnyChar(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher43.makeParenthesis(rEString56);
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher38.matchesAnyChar(rEString56);
        st1920.automaton.RegExpMatcher regExpMatcher59 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher59.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher38.repeatOneOrMore(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher26.matchesNToMOccurences(rEString62, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher26.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher26.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher12.makeParenthesis(rEString68);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher12.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher71 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString72 = null;
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher71.repeatZeroOrMore(rEString72);
        st1920.automaton.RegExpMatcher regExpMatcher74 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString75 = null;
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher74.repeatZeroOrMore(rEString75);
        st1920.automaton.RegExpMatcher regExpMatcher77 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString78 = null;
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher77.repeatZeroOrMore(rEString78);
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher77.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher82 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString83 = null;
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher82.repeatZeroOrMore(rEString83);
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher82.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString87 = regExpMatcher77.matchesAnyChar(rEString86);
        st1920.automaton.RegExpMatcher.REString rEString88 = regExpMatcher74.makeParenthesis(rEString87);
        st1920.automaton.RegExpMatcher.REString rEString90 = regExpMatcher71.matchesNOrMoreOccurences(rEString87, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString92 = regExpMatcher71.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString93 = regExpMatcher71.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString94 = regExpMatcher0.bothPatterns(rEString70, rEString93);
        java.lang.Class<?> wildcardClass95 = rEString94.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test125");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher6.matchesAnyChar(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher6.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher0.repeatOneOrMore(rEString15);
        st1920.automaton.RegExpMatcher.MatchString matchString17 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher19.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher29.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher24.matchesAnyChar(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher24.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher36 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString37 = null;
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher36.repeatZeroOrMore(rEString37);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher36.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher41 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = null;
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher41.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher regExpMatcher44 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString45 = null;
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher44.repeatZeroOrMore(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher44.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher49 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString50 = null;
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher49.repeatZeroOrMore(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher49.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher44.matchesAnyChar(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher41.makeParenthesis(rEString54);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher36.matchesAnyChar(rEString54);
        st1920.automaton.RegExpMatcher regExpMatcher57 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher57.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher36.repeatOneOrMore(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher24.matchesNToMOccurences(rEString60, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher24.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher24.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher24.matchesNumBetweenNandM(1, (int) (short) -1);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher19.makeParenthesis(rEString69);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher19.makeAlphareg();
        st1920.automaton.RegExpMatcher.MatchString matchString74 = regExpMatcher19.makeConcatenation("", "1");
        st1920.automaton.RegExpMatcher regExpMatcher75 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString77 = new st1920.automaton.RegExpMatcher.REString("");
        st1920.automaton.RegExpMatcher regExpMatcher78 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher78.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher78.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher75.bothPatterns(rEString77, rEString81);
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher19.repeatZeroOrMore(rEString82);
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher0.matchesNOccurences(rEString83, (int) (byte) 10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
    }

    @Test
    public void test126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test126");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher32.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher37 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString38 = null;
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher37.repeatZeroOrMore(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher37.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher32.matchesAnyChar(rEString41);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher32.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher44 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString45 = null;
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher44.repeatZeroOrMore(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher44.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher49 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString50 = null;
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher49.repeatZeroOrMore(rEString50);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = null;
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.repeatZeroOrMore(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher52.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher57 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = null;
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher57.repeatZeroOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher57.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher52.matchesAnyChar(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher49.makeParenthesis(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher44.matchesAnyChar(rEString62);
        st1920.automaton.RegExpMatcher regExpMatcher65 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher65.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher44.repeatOneOrMore(rEString67);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher32.matchesNToMOccurences(rEString68, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher32.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher32.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher0.matchesNOccurences(rEString74, (int) '#');
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher0.matchesBracketChars("null*");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
    }

    @Test
    public void test127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test127");
        st1920.automaton.RegExpMatcher.MatchString matchString1 = new st1920.automaton.RegExpMatcher.MatchString("hi!hi!");
        java.lang.String str2 = matchString1.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!hi!" + "'", str2.equals("hi!hi!"));
    }

    @Test
    public void test128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test128");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher3.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher16.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher11.matchesAnyChar(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher8.makeParenthesis(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher3.matchesAnyChar(rEString21);
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher3.repeatOneOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher0.matchesNOrMoreOccurences(rEString27, 100);
        st1920.automaton.RegExpMatcher.MatchString matchString30 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.matchesAnyString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
    }

    @Test
    public void test129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test129");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher3.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher0.matchesAnyChar(rEString7);
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString15 = null;
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.repeatZeroOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher9.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher9.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher21.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher29.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher34 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = null;
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher34.repeatZeroOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher34.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher29.matchesAnyChar(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher26.makeParenthesis(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher21.matchesAnyChar(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher42 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher42.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher21.repeatOneOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher9.matchesNToMOccurences(rEString45, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher9.makeAlphareg();
        st1920.automaton.RegExpMatcher.MatchString matchString50 = regExpMatcher9.makeNum();
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher53 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString54 = null;
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher53.repeatZeroOrMore(rEString54);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher53.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher53.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher58 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString59 = null;
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher58.repeatZeroOrMore(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher58.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher63 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString64 = null;
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher63.repeatZeroOrMore(rEString64);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher63.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher58.matchesAnyChar(rEString67);
        java.lang.String str69 = rEString67.getString();
        st1920.automaton.RegExpMatcher regExpMatcher70 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString71 = null;
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher70.repeatZeroOrMore(rEString71);
        st1920.automaton.RegExpMatcher regExpMatcher73 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString74 = null;
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher73.repeatZeroOrMore(rEString74);
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher73.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher78 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString79 = null;
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher78.repeatZeroOrMore(rEString79);
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher78.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher73.matchesAnyChar(rEString82);
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher70.makeParenthesis(rEString83);
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher53.bothPatterns(rEString67, rEString84);
        st1920.automaton.RegExpMatcher.REString rEString88 = regExpMatcher53.matchesNumBetweenNandM((int) (short) 0, (int) ' ');
        st1920.automaton.RegExpMatcher.REString rEString89 = regExpMatcher0.followPattern(rEString52, rEString88);
        st1920.automaton.RegExpMatcher.REString rEString90 = regExpMatcher0.matchesNoChar();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str69 + "' != '" + "[^hi!]" + "'", str69.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
    }

    @Test
    public void test130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test130");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher6.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher6.matchesAnyChar(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher3.makeParenthesis(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher0.matchesNOrMoreOccurences(rEString16, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher.MatchString matchString23 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher0.matchesNumBetweenNandM((int) (short) 100, 0);
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher0.matchesAnyString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
    }

    @Test
    public void test131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test131");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher4 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString5 = null;
        st1920.automaton.RegExpMatcher.REString rEString6 = regExpMatcher4.repeatZeroOrMore(rEString5);
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher4.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher4.matchesAnyChar(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher4.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher16.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher29.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher24.matchesAnyChar(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher21.makeParenthesis(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher16.matchesAnyChar(rEString34);
        st1920.automaton.RegExpMatcher regExpMatcher37 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher37.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher16.repeatOneOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher4.matchesNToMOccurences(rEString40, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher4.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher4.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher0.matchesNToMOccurences(rEString46, (int) (byte) 10, (int) ' ');
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher0.makeNumreg();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
    }

    @Test
    public void test132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test132");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher5.makeParenthesis(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher0.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher0.repeatOneOrMore(rEString23);
        java.lang.Class<?> wildcardClass25 = rEString24.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test133");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher6.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher6.matchesAnyChar(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher3.makeParenthesis(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher0.matchesNOrMoreOccurences(rEString16, (int) (byte) -1);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher regExpMatcher23 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString24 = null;
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher23.repeatZeroOrMore(rEString24);
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher23.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString29 = null;
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.repeatZeroOrMore(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher28.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher23.matchesAnyChar(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher20.makeParenthesis(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher0.matchesNOrMoreOccurences(rEString34, (int) '4');
        st1920.automaton.RegExpMatcher regExpMatcher37 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString38 = null;
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher37.repeatZeroOrMore(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher37.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher42 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString43 = null;
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher42.repeatZeroOrMore(rEString43);
        st1920.automaton.RegExpMatcher regExpMatcher45 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString46 = null;
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher45.repeatZeroOrMore(rEString46);
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher45.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher50 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString51 = null;
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher50.repeatZeroOrMore(rEString51);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher50.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher45.matchesAnyChar(rEString54);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher42.makeParenthesis(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher37.matchesAnyChar(rEString55);
        st1920.automaton.RegExpMatcher regExpMatcher58 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString59 = null;
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher58.repeatZeroOrMore(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher58.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher63 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString64 = null;
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher63.repeatZeroOrMore(rEString64);
        st1920.automaton.RegExpMatcher regExpMatcher66 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString67 = null;
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher66.repeatZeroOrMore(rEString67);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher66.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher71 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString72 = null;
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher71.repeatZeroOrMore(rEString72);
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher71.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher66.matchesAnyChar(rEString75);
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher63.makeParenthesis(rEString76);
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher58.matchesAnyChar(rEString76);
        st1920.automaton.RegExpMatcher regExpMatcher79 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher79.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher58.repeatOneOrMore(rEString81);
        st1920.automaton.RegExpMatcher regExpMatcher83 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher83.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString86 = null;
        st1920.automaton.RegExpMatcher.REString rEString87 = regExpMatcher83.repeatZeroOrMore(rEString86);
        st1920.automaton.RegExpMatcher.REString rEString88 = regExpMatcher37.eitherPattern(rEString81, rEString86);
        st1920.automaton.RegExpMatcher regExpMatcher89 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString90 = null;
        st1920.automaton.RegExpMatcher.REString rEString91 = regExpMatcher89.repeatZeroOrMore(rEString90);
        st1920.automaton.RegExpMatcher.REString rEString93 = regExpMatcher89.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString96 = regExpMatcher37.matchesNToMOccurences(rEString93, (-1), 100);
        java.lang.String str97 = rEString93.getString();
        st1920.automaton.RegExpMatcher.REString rEString98 = regExpMatcher0.matchesAnyChar(rEString93);
        st1920.automaton.RegExpMatcher.REString rEString99 = regExpMatcher0.makeAlphareg();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str97 + "' != '" + "[^hi!]" + "'", str97.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString99);
    }

    @Test
    public void test134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test134");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher3.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher3.matchesAnyChar(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher0.makeParenthesis(rEString13);
        st1920.automaton.RegExpMatcher regExpMatcher15 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString16 = null;
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher15.repeatZeroOrMore(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher15.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher15.matchesAnyChar(rEString24);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher15.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher27 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString28 = null;
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher27.repeatZeroOrMore(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher27.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher35.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher40 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString41 = null;
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher40.repeatZeroOrMore(rEString41);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher40.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher35.matchesAnyChar(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher32.makeParenthesis(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher27.matchesAnyChar(rEString45);
        st1920.automaton.RegExpMatcher regExpMatcher48 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher48.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher27.repeatOneOrMore(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher15.matchesNToMOccurences(rEString51, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher15.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher0.makeParenthesis(rEString55);
        java.lang.Class<?> wildcardClass57 = rEString55.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test135");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher32.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher37 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString38 = null;
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher37.repeatZeroOrMore(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher37.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher32.matchesAnyChar(rEString41);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher32.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher44 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString45 = null;
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher44.repeatZeroOrMore(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher44.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher49 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString50 = null;
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher49.repeatZeroOrMore(rEString50);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = null;
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.repeatZeroOrMore(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher52.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher57 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = null;
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher57.repeatZeroOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher57.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher52.matchesAnyChar(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher49.makeParenthesis(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher44.matchesAnyChar(rEString62);
        st1920.automaton.RegExpMatcher regExpMatcher65 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher65.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher44.repeatOneOrMore(rEString67);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher32.matchesNToMOccurences(rEString68, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher32.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher32.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher0.matchesNOccurences(rEString74, (int) '#');
        st1920.automaton.RegExpMatcher regExpMatcher77 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString78 = null;
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher77.repeatZeroOrMore(rEString78);
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher77.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher77.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher77.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher0.repeatOneOrMore(rEString85);
        st1920.automaton.RegExpMatcher.MatchString matchString89 = regExpMatcher0.makeConcatenation("[^hi!]", "1");
        st1920.automaton.RegExpMatcher.REString rEString90 = regExpMatcher0.matchesAnyString();
        java.lang.Class<?> wildcardClass91 = regExpMatcher0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test136");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.MatchString matchString7 = regExpMatcher0.makeConcatenation("[^hi!]", "");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesNumBetweenNandM(0, 1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
    }

    @Test
    public void test137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test137");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher5.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString15 = null;
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.repeatZeroOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher9.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher9.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher21.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher29.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher34 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = null;
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher34.repeatZeroOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher34.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher29.matchesAnyChar(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher26.makeParenthesis(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher21.matchesAnyChar(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher42 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher42.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher21.repeatOneOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher9.matchesNToMOccurences(rEString45, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher9.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher9.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher5.matchesNToMOccurences(rEString51, (int) (byte) 10, (int) ' ');
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher5.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString57 = null;
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.repeatZeroOrMore(rEString57);
        st1920.automaton.RegExpMatcher regExpMatcher59 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString60 = null;
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher59.repeatZeroOrMore(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher59.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher64 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString65 = null;
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher64.repeatZeroOrMore(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher64.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher59.matchesAnyChar(rEString68);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher56.makeParenthesis(rEString69);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher56.matchesString("#");
        st1920.automaton.RegExpMatcher regExpMatcher73 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString74 = null;
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher73.repeatZeroOrMore(rEString74);
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher73.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher5.bothPatterns(rEString72, rEString76);
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher0.matchesAnyChar(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
    }

    @Test
    public void test138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test138");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher5.makeParenthesis(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher0.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher0.repeatOneOrMore(rEString23);
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString29 = null;
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.repeatZeroOrMore(rEString29);
        st1920.automaton.RegExpMatcher regExpMatcher31 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString32 = null;
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher31.repeatZeroOrMore(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher31.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher36 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString37 = null;
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher36.repeatZeroOrMore(rEString37);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher36.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher31.matchesAnyChar(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher28.makeParenthesis(rEString41);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher25.matchesNOrMoreOccurences(rEString41, (int) (byte) -1);
        st1920.automaton.RegExpMatcher regExpMatcher45 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString46 = null;
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher45.repeatZeroOrMore(rEString46);
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher45.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher45.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher0.eitherPattern(rEString44, rEString50);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = null;
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.repeatZeroOrMore(rEString53);
        st1920.automaton.RegExpMatcher regExpMatcher55 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString56 = null;
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher55.repeatZeroOrMore(rEString56);
        st1920.automaton.RegExpMatcher regExpMatcher58 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString59 = null;
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher58.repeatZeroOrMore(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher58.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher63 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString64 = null;
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher63.repeatZeroOrMore(rEString64);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher63.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher58.matchesAnyChar(rEString67);
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher55.makeParenthesis(rEString68);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher52.matchesNOrMoreOccurences(rEString68, (int) (byte) -1);
        st1920.automaton.RegExpMatcher regExpMatcher72 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString73 = null;
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher72.repeatZeroOrMore(rEString73);
        st1920.automaton.RegExpMatcher regExpMatcher75 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher75.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString78 = null;
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher75.repeatZeroOrMore(rEString78);
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher72.repeatOneOrMore(rEString79);
        java.lang.String str81 = rEString80.getString();
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher0.followPattern(rEString68, rEString80);
        st1920.automaton.RegExpMatcher.MatchString matchString85 = regExpMatcher0.makeConcatenation("", "#");
        st1920.automaton.RegExpMatcher.REString rEString87 = regExpMatcher0.matchesNoBracketChars("[^hi!]hi!hi!");
        st1920.automaton.RegExpMatcher regExpMatcher88 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString89 = null;
        st1920.automaton.RegExpMatcher.REString rEString90 = regExpMatcher88.repeatZeroOrMore(rEString89);
        st1920.automaton.RegExpMatcher regExpMatcher91 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString93 = regExpMatcher91.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString94 = null;
        st1920.automaton.RegExpMatcher.REString rEString95 = regExpMatcher91.repeatZeroOrMore(rEString94);
        st1920.automaton.RegExpMatcher.REString rEString96 = regExpMatcher88.repeatOneOrMore(rEString95);
        st1920.automaton.RegExpMatcher.REString rEString97 = regExpMatcher0.repeatZeroOrMore(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
    }

    @Test
    public void test139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test139");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString7 = regExpMatcher0.makeConcatenation("[^hi!]", "hi!hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesNumBetweenNandM((-1), 0);
        st1920.automaton.RegExpMatcher.MatchString matchString13 = regExpMatcher0.makeConcatenation("hi!", "#");
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString15 = null;
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.repeatZeroOrMore(rEString15);
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher17.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher22.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher17.matchesAnyChar(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher14.makeParenthesis(rEString27);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher14.matchesNoChar();
        st1920.automaton.RegExpMatcher regExpMatcher30 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString31 = null;
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher30.repeatZeroOrMore(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher30.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher38.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher38.matchesAnyChar(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher35.makeParenthesis(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher30.matchesAnyChar(rEString48);
        st1920.automaton.RegExpMatcher regExpMatcher51 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString52 = null;
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher51.repeatZeroOrMore(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher51.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString57 = null;
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.repeatZeroOrMore(rEString57);
        st1920.automaton.RegExpMatcher regExpMatcher59 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString60 = null;
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher59.repeatZeroOrMore(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher59.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher64 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString65 = null;
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher64.repeatZeroOrMore(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher64.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher59.matchesAnyChar(rEString68);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher56.makeParenthesis(rEString69);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher51.matchesAnyChar(rEString69);
        st1920.automaton.RegExpMatcher regExpMatcher72 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher72.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher51.repeatOneOrMore(rEString74);
        st1920.automaton.RegExpMatcher regExpMatcher76 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher76.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString79 = null;
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher76.repeatZeroOrMore(rEString79);
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher30.eitherPattern(rEString74, rEString79);
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher30.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher14.matchesAnyChar(rEString82);
        st1920.automaton.RegExpMatcher regExpMatcher84 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString85 = null;
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher84.repeatZeroOrMore(rEString85);
        st1920.automaton.RegExpMatcher.REString rEString87 = regExpMatcher84.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString90 = regExpMatcher84.makeConcatenation("hi!", "hi!");
        st1920.automaton.RegExpMatcher.REString rEString92 = regExpMatcher84.matchesString("[^hi!]hi!hi!");
        st1920.automaton.RegExpMatcher.REString rEString93 = regExpMatcher0.bothPatterns(rEString83, rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
    }

    @Test
    public void test140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test140");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString6 = regExpMatcher0.makeConcatenation("hi!", "hi!");
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher0.matchesNoBracketChars("1");
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.matchesBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher17.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher12.matchesAnyChar(rEString21);
        st1920.automaton.RegExpMatcher regExpMatcher23 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher23.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher23.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString29 = null;
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.repeatZeroOrMore(rEString29);
        st1920.automaton.RegExpMatcher regExpMatcher31 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString32 = null;
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher31.repeatZeroOrMore(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher31.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher36 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString37 = null;
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher36.repeatZeroOrMore(rEString37);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher36.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher31.matchesAnyChar(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher28.makeParenthesis(rEString41);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher12.eitherPattern(rEString26, rEString42);
        st1920.automaton.RegExpMatcher regExpMatcher44 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString45 = null;
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher44.repeatZeroOrMore(rEString45);
        st1920.automaton.RegExpMatcher regExpMatcher47 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = null;
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher47.repeatZeroOrMore(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher47.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = null;
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.repeatZeroOrMore(rEString53);
        st1920.automaton.RegExpMatcher regExpMatcher55 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString56 = null;
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher55.repeatZeroOrMore(rEString56);
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher55.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher60 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString61 = null;
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher60.repeatZeroOrMore(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher60.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher55.matchesAnyChar(rEString64);
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher52.makeParenthesis(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher47.matchesAnyChar(rEString65);
        st1920.automaton.RegExpMatcher regExpMatcher68 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher68.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher47.repeatOneOrMore(rEString70);
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher44.matchesNOrMoreOccurences(rEString71, 100);
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher12.matchesAnyChar(rEString73);
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher12.matchesString("");
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher0.matchesNToMOccurences(rEString76, (int) (short) -1, (int) (short) 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
    }

    @Test
    public void test141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test141");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher5.makeParenthesis(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher0.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher21.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher29.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher34 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = null;
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher34.repeatZeroOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher34.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher29.matchesAnyChar(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher26.makeParenthesis(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher21.matchesAnyChar(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher42 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher42.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher21.repeatOneOrMore(rEString44);
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher0.eitherPattern(rEString44, rEString49);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = null;
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.repeatZeroOrMore(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher52.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher52.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher57 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = null;
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher57.repeatZeroOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher57.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher62 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString63 = null;
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher62.repeatZeroOrMore(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher62.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher57.matchesAnyChar(rEString66);
        java.lang.String str68 = rEString66.getString();
        st1920.automaton.RegExpMatcher regExpMatcher69 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString70 = null;
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher69.repeatZeroOrMore(rEString70);
        st1920.automaton.RegExpMatcher regExpMatcher72 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString73 = null;
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher72.repeatZeroOrMore(rEString73);
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher72.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher77 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString78 = null;
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher77.repeatZeroOrMore(rEString78);
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher77.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher72.matchesAnyChar(rEString81);
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher69.makeParenthesis(rEString82);
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher52.bothPatterns(rEString66, rEString83);
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher0.makeParenthesis(rEString84);
        st1920.automaton.RegExpMatcher.REString rEString87 = regExpMatcher0.matchesBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString88 = regExpMatcher0.makeNumreg();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str68 + "' != '" + "[^hi!]" + "'", str68.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
    }

    @Test
    public void test142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test142");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher35.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher40 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString41 = null;
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher40.repeatZeroOrMore(rEString41);
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher48 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher48.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher48.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher43.matchesAnyChar(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher40.makeParenthesis(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher35.matchesAnyChar(rEString53);
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher35.repeatOneOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher32.matchesNOrMoreOccurences(rEString59, 100);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher0.matchesAnyChar(rEString61);
        st1920.automaton.RegExpMatcher regExpMatcher63 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString64 = null;
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher63.repeatZeroOrMore(rEString64);
        st1920.automaton.RegExpMatcher regExpMatcher66 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString67 = null;
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher66.repeatZeroOrMore(rEString67);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher66.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher71 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString72 = null;
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher71.repeatZeroOrMore(rEString72);
        st1920.automaton.RegExpMatcher regExpMatcher74 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString75 = null;
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher74.repeatZeroOrMore(rEString75);
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher74.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher79 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString80 = null;
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher79.repeatZeroOrMore(rEString80);
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher79.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher74.matchesAnyChar(rEString83);
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher71.makeParenthesis(rEString84);
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher66.matchesAnyChar(rEString84);
        st1920.automaton.RegExpMatcher regExpMatcher87 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString89 = regExpMatcher87.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString90 = regExpMatcher66.repeatOneOrMore(rEString89);
        st1920.automaton.RegExpMatcher.REString rEString92 = regExpMatcher63.matchesNOrMoreOccurences(rEString90, 100);
        java.lang.String str93 = rEString92.getString();
        st1920.automaton.RegExpMatcher.REString rEString95 = regExpMatcher0.matchesNOccurences(rEString92, 100);
        st1920.automaton.RegExpMatcher.REString rEString97 = regExpMatcher0.matchesString("");
        st1920.automaton.RegExpMatcher.REString rEString98 = regExpMatcher0.makeAlphareg();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
    }

    @Test
    public void test143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test143");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher3.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher0.repeatOneOrMore(rEString7);
        java.lang.Class<?> wildcardClass9 = regExpMatcher0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test144");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher.MatchString matchString8 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher9.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher15 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher15.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher18 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString19 = null;
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher18.repeatZeroOrMore(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher18.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher15.matchesAnyChar(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher15.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher9.repeatOneOrMore(rEString24);
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher9.matchesBracketChars("1");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher9.matchesNumBetweenNandM((int) (byte) -1, (int) (byte) -1);
        st1920.automaton.RegExpMatcher regExpMatcher31 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString32 = null;
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher31.repeatZeroOrMore(rEString32);
        st1920.automaton.RegExpMatcher regExpMatcher34 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = null;
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher34.repeatZeroOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher34.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher39 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString40 = null;
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher39.repeatZeroOrMore(rEString40);
        st1920.automaton.RegExpMatcher regExpMatcher42 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString43 = null;
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher42.repeatZeroOrMore(rEString43);
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher42.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher47 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = null;
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher47.repeatZeroOrMore(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher47.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher42.matchesAnyChar(rEString51);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher39.makeParenthesis(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher34.matchesAnyChar(rEString52);
        st1920.automaton.RegExpMatcher regExpMatcher55 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher55.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher34.repeatOneOrMore(rEString57);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher31.matchesNOrMoreOccurences(rEString58, 100);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher31.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher31.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher0.bothPatterns(rEString30, rEString63);
        java.lang.Class<?> wildcardClass65 = regExpMatcher0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test145");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher20.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher17.makeParenthesis(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher12.matchesAnyChar(rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher12.repeatOneOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher0.matchesNToMOccurences(rEString36, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher0.matchesBracketChars("[^hi!]hi!hi!");
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher0.matchesNoChar();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
    }

    @Test
    public void test146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test146");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher.MatchString matchString8 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher9.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher15 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher15.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher18 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString19 = null;
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher18.repeatZeroOrMore(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher18.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher15.matchesAnyChar(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher15.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher9.repeatOneOrMore(rEString24);
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher9.matchesBracketChars("1");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher9.matchesNumBetweenNandM((int) (byte) -1, (int) (byte) -1);
        st1920.automaton.RegExpMatcher regExpMatcher31 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString32 = null;
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher31.repeatZeroOrMore(rEString32);
        st1920.automaton.RegExpMatcher regExpMatcher34 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = null;
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher34.repeatZeroOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher34.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher39 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString40 = null;
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher39.repeatZeroOrMore(rEString40);
        st1920.automaton.RegExpMatcher regExpMatcher42 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString43 = null;
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher42.repeatZeroOrMore(rEString43);
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher42.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher47 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = null;
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher47.repeatZeroOrMore(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher47.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher42.matchesAnyChar(rEString51);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher39.makeParenthesis(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher34.matchesAnyChar(rEString52);
        st1920.automaton.RegExpMatcher regExpMatcher55 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher55.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher34.repeatOneOrMore(rEString57);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher31.matchesNOrMoreOccurences(rEString58, 100);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher31.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher31.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher0.bothPatterns(rEString30, rEString63);
        java.lang.String str65 = rEString64.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
    }

    @Test
    public void test147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test147");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString6 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher regExpMatcher7 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString8 = null;
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher7.repeatZeroOrMore(rEString8);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher7.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher7.matchesAnyChar(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher0.repeatOneOrMore(rEString16);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher regExpMatcher30 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString31 = null;
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher30.repeatZeroOrMore(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher30.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher35.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher30.matchesAnyChar(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher30.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString44 = regExpMatcher30.makeConcatenation("hi!", "hi!");
        st1920.automaton.RegExpMatcher regExpMatcher45 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString46 = null;
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher45.repeatZeroOrMore(rEString46);
        st1920.automaton.RegExpMatcher regExpMatcher48 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher48.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString51 = null;
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher48.repeatZeroOrMore(rEString51);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher45.repeatOneOrMore(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher30.repeatOneOrMore(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher0.bothPatterns(rEString28, rEString53);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher0.matchesAnyString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
    }

    @Test
    public void test148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test148");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher5.makeParenthesis(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher0.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher0.repeatOneOrMore(rEString23);
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher25.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher30 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString31 = null;
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher30.repeatZeroOrMore(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher30.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher38.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher38.matchesAnyChar(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher35.makeParenthesis(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher30.matchesAnyChar(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher25.matchesAnyChar(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher25.matchesBracketChars("[^hi!]hi!hi!");
        st1920.automaton.RegExpMatcher regExpMatcher54 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString55 = null;
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher54.repeatZeroOrMore(rEString55);
        st1920.automaton.RegExpMatcher regExpMatcher57 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = null;
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher57.repeatZeroOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher57.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher62 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString63 = null;
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher62.repeatZeroOrMore(rEString63);
        st1920.automaton.RegExpMatcher regExpMatcher65 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString66 = null;
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher65.repeatZeroOrMore(rEString66);
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher65.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher70 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString71 = null;
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher70.repeatZeroOrMore(rEString71);
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher70.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher65.matchesAnyChar(rEString74);
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher62.makeParenthesis(rEString75);
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher57.matchesAnyChar(rEString75);
        st1920.automaton.RegExpMatcher regExpMatcher78 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher78.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher57.repeatOneOrMore(rEString80);
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher54.matchesNOrMoreOccurences(rEString81, 100);
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher0.bothPatterns(rEString53, rEString83);
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher0.matchesNoBracketChars("[^hi!]");
        java.lang.String str87 = rEString86.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str87 + "' != '" + "[^[^hi!]]" + "'", str87.equals("[^[^hi!]]"));
    }

    @Test
    public void test149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test149");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.MatchString matchString4 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher5.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString15 = null;
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.repeatZeroOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher14.matchesAnyChar(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher11.makeParenthesis(rEString24);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher5.matchesAnyChar(rEString24);
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher5.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher0.matchesAnyChar(rEString27);
        java.lang.String str29 = rEString28.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
    }

    @Test
    public void test150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test150");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString15 = null;
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.repeatZeroOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher9.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher6.makeParenthesis(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesAnyChar(rEString19);
        st1920.automaton.RegExpMatcher.MatchString matchString22 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher0.matchesBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher26.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher31 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString32 = null;
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher31.repeatZeroOrMore(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher31.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher26.matchesAnyChar(rEString35);
        st1920.automaton.RegExpMatcher.MatchString matchString39 = regExpMatcher26.makeConcatenation("hi!hi!", "[^hi!]");
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher26.matchesBracketChars("hi!");
        st1920.automaton.RegExpMatcher.MatchString matchString44 = regExpMatcher26.makeConcatenation("1", "hi!");
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher26.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher0.matchesAnyChar(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
    }

    @Test
    public void test151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test151");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher6.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher6.matchesAnyChar(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher3.makeParenthesis(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher0.matchesNOrMoreOccurences(rEString16, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher22.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher27 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString28 = null;
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher27.repeatZeroOrMore(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher27.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher22.matchesAnyChar(rEString31);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher33.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher41 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = null;
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher41.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher41.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString47 = null;
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.repeatZeroOrMore(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher41.matchesAnyChar(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher38.makeParenthesis(rEString51);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher22.eitherPattern(rEString36, rEString52);
        st1920.automaton.RegExpMatcher regExpMatcher54 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString55 = null;
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher54.repeatZeroOrMore(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher54.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher59 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString60 = null;
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher59.repeatZeroOrMore(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher59.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher54.matchesAnyChar(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher54.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher22.makeParenthesis(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher0.repeatZeroOrMore(rEString65);
        st1920.automaton.RegExpMatcher.MatchString matchString68 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher0.matchesAnyString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
    }

    @Test
    public void test152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test152");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher35.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher40 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString41 = null;
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher40.repeatZeroOrMore(rEString41);
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher48 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher48.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher48.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher43.matchesAnyChar(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher40.makeParenthesis(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher35.matchesAnyChar(rEString53);
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher35.repeatOneOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher32.matchesNOrMoreOccurences(rEString59, 100);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher0.matchesAnyChar(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher0.matchesString("");
        st1920.automaton.RegExpMatcher regExpMatcher65 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString66 = null;
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher65.repeatZeroOrMore(rEString66);
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher65.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher65.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher70 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString71 = null;
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher70.repeatZeroOrMore(rEString71);
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher70.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher75 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString76 = null;
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher75.repeatZeroOrMore(rEString76);
        st1920.automaton.RegExpMatcher regExpMatcher78 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString79 = null;
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher78.repeatZeroOrMore(rEString79);
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher78.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher83 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString84 = null;
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher83.repeatZeroOrMore(rEString84);
        st1920.automaton.RegExpMatcher.REString rEString87 = regExpMatcher83.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString88 = regExpMatcher78.matchesAnyChar(rEString87);
        st1920.automaton.RegExpMatcher.REString rEString89 = regExpMatcher75.makeParenthesis(rEString88);
        st1920.automaton.RegExpMatcher.REString rEString90 = regExpMatcher70.matchesAnyChar(rEString88);
        st1920.automaton.RegExpMatcher.REString rEString91 = regExpMatcher65.matchesAnyChar(rEString90);
        st1920.automaton.RegExpMatcher.REString rEString94 = regExpMatcher65.matchesNumBetweenNandM((int) (byte) -1, (int) (short) 0);
        st1920.automaton.RegExpMatcher.REString rEString95 = regExpMatcher0.repeatOneOrMore(rEString94);
        st1920.automaton.RegExpMatcher.REString rEString96 = regExpMatcher0.matchesAnyString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
    }

    @Test
    public void test153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test153");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString5 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.MatchString matchString8 = regExpMatcher0.makeConcatenation("@", "[^hi!]hi!hi!");
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher regExpMatcher15 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString16 = null;
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher15.repeatZeroOrMore(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher15.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher15.matchesAnyChar(rEString24);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher12.makeParenthesis(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher9.matchesNOrMoreOccurences(rEString25, (int) (byte) -1);
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher32.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher37 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString38 = null;
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher37.repeatZeroOrMore(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher37.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher32.matchesAnyChar(rEString41);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher29.makeParenthesis(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher9.matchesNOrMoreOccurences(rEString43, (int) '4');
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher0.matchesNOrMoreOccurences(rEString45, (int) (byte) 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
    }

    @Test
    public void test154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test154");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher8.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher0.excludePattern(rEString11);
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher18 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString19 = null;
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher18.repeatZeroOrMore(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher18.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher13.matchesAnyChar(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher13.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher30 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString31 = null;
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher30.repeatZeroOrMore(rEString31);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = null;
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher33.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher38.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher33.matchesAnyChar(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher30.makeParenthesis(rEString43);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher25.matchesAnyChar(rEString43);
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher25.repeatOneOrMore(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher13.matchesNToMOccurences(rEString49, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher13.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher13.matchesBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString57 = null;
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.repeatZeroOrMore(rEString57);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher56.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher61 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString62 = null;
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher61.repeatZeroOrMore(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher61.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher56.matchesAnyChar(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher56.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher56.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher56.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher0.bothPatterns(rEString55, rEString69);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString72 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.MatchString matchString73 = regExpMatcher0.makeNum();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString73);
    }

    @Test
    public void test155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test155");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher8.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher0.excludePattern(rEString11);
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher16.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher29.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher24.matchesAnyChar(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher21.makeParenthesis(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher16.matchesAnyChar(rEString34);
        st1920.automaton.RegExpMatcher regExpMatcher37 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher37.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher16.repeatOneOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher13.matchesNOrMoreOccurences(rEString40, 100);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher0.matchesNOccurences(rEString42, 0);
        st1920.automaton.RegExpMatcher regExpMatcher45 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString46 = null;
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher45.repeatZeroOrMore(rEString46);
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher45.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher45.matchesBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = null;
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.repeatZeroOrMore(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher52.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher52.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher57 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = null;
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher57.repeatZeroOrMore(rEString58);
        st1920.automaton.RegExpMatcher regExpMatcher60 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher60.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString63 = null;
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher60.repeatZeroOrMore(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher57.repeatOneOrMore(rEString64);
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher45.eitherPattern(rEString56, rEString64);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher0.matchesAnyChar(rEString56);
        st1920.automaton.RegExpMatcher.MatchString matchString70 = regExpMatcher0.makeConcatenation("hi!hi!", "1");
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher0.matchesNoChar();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
    }

    @Test
    public void test156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test156");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher10 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString11 = null;
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher10.repeatZeroOrMore(rEString11);
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher10.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher5.matchesAnyChar(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher5.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher17.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher30 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString31 = null;
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher30.repeatZeroOrMore(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher30.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher25.matchesAnyChar(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher22.makeParenthesis(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher17.matchesAnyChar(rEString35);
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher17.repeatOneOrMore(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher5.matchesNToMOccurences(rEString41, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher5.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher5.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher5.matchesNumBetweenNandM(1, (int) (short) -1);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher0.makeParenthesis(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher54 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString55 = null;
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher54.repeatZeroOrMore(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher54.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher54.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher60 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString61 = null;
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher60.repeatZeroOrMore(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher60.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher60.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString66 = regExpMatcher60.makeNum();
        st1920.automaton.RegExpMatcher regExpMatcher67 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString68 = null;
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher67.repeatZeroOrMore(rEString68);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher67.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher72 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString73 = null;
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher72.repeatZeroOrMore(rEString73);
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher72.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher67.matchesAnyChar(rEString76);
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher60.repeatOneOrMore(rEString76);
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher54.matchesNOccurences(rEString78, (int) (short) 10);
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher0.matchesAnyChar(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
    }

    @Test
    public void test157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test157");
        st1920.automaton.RegExpMatcher.MatchString matchString1 = new st1920.automaton.RegExpMatcher.MatchString("@");
        java.lang.String str2 = matchString1.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "@" + "'", str2.equals("@"));
    }

    @Test
    public void test158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test158");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher6.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher6.matchesAnyChar(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher3.makeParenthesis(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher0.matchesNOrMoreOccurences(rEString16, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher.MatchString matchString23 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher24.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher32.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher24.excludePattern(rEString35);
        st1920.automaton.RegExpMatcher regExpMatcher37 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString38 = null;
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher37.repeatZeroOrMore(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher37.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher42 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString43 = null;
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher42.repeatZeroOrMore(rEString43);
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher42.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher37.matchesAnyChar(rEString46);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher37.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher49 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString50 = null;
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher49.repeatZeroOrMore(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher49.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher54 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString55 = null;
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher54.repeatZeroOrMore(rEString55);
        st1920.automaton.RegExpMatcher regExpMatcher57 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = null;
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher57.repeatZeroOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher57.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher62 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString63 = null;
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher62.repeatZeroOrMore(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher62.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher57.matchesAnyChar(rEString66);
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher54.makeParenthesis(rEString67);
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher49.matchesAnyChar(rEString67);
        st1920.automaton.RegExpMatcher regExpMatcher70 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher70.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher49.repeatOneOrMore(rEString72);
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher37.matchesNToMOccurences(rEString73, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher37.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher37.matchesBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher80 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString81 = null;
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher80.repeatZeroOrMore(rEString81);
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher80.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher85 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString86 = null;
        st1920.automaton.RegExpMatcher.REString rEString87 = regExpMatcher85.repeatZeroOrMore(rEString86);
        st1920.automaton.RegExpMatcher.REString rEString89 = regExpMatcher85.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString90 = regExpMatcher80.matchesAnyChar(rEString89);
        st1920.automaton.RegExpMatcher.REString rEString91 = regExpMatcher80.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString92 = regExpMatcher80.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString93 = regExpMatcher80.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString94 = regExpMatcher24.bothPatterns(rEString79, rEString93);
        java.lang.String str95 = rEString94.getString();
        boolean boolean96 = st1920.automaton.RegExpMatcher.matches(matchString23, rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test159");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.MatchString matchString13 = regExpMatcher0.makeConcatenation("hi!hi!", "[^hi!]");
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher0.makeNumreg();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
    }

    @Test
    public void test160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test160");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher0.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher37 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString38 = null;
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher37.repeatZeroOrMore(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher37.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher37.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString43 = regExpMatcher37.makeNum();
        st1920.automaton.RegExpMatcher regExpMatcher44 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString45 = null;
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher44.repeatZeroOrMore(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher44.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher49 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString50 = null;
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher49.repeatZeroOrMore(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher49.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher44.matchesAnyChar(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher37.repeatOneOrMore(rEString53);
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString57 = null;
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.repeatZeroOrMore(rEString57);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher56.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher61 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString62 = null;
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher61.repeatZeroOrMore(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher61.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher56.matchesAnyChar(rEString65);
        st1920.automaton.RegExpMatcher regExpMatcher67 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString68 = null;
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher67.repeatZeroOrMore(rEString68);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher67.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher72 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString73 = null;
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher72.repeatZeroOrMore(rEString73);
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher72.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher67.matchesAnyChar(rEString76);
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher67.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString81 = regExpMatcher67.makeConcatenation("hi!", "hi!");
        st1920.automaton.RegExpMatcher regExpMatcher82 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString83 = null;
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher82.repeatZeroOrMore(rEString83);
        st1920.automaton.RegExpMatcher regExpMatcher85 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString87 = regExpMatcher85.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString88 = null;
        st1920.automaton.RegExpMatcher.REString rEString89 = regExpMatcher85.repeatZeroOrMore(rEString88);
        st1920.automaton.RegExpMatcher.REString rEString90 = regExpMatcher82.repeatOneOrMore(rEString89);
        st1920.automaton.RegExpMatcher.REString rEString91 = regExpMatcher67.repeatOneOrMore(rEString90);
        st1920.automaton.RegExpMatcher.REString rEString92 = regExpMatcher37.bothPatterns(rEString65, rEString90);
        st1920.automaton.RegExpMatcher.REString rEString93 = regExpMatcher0.repeatZeroOrMore(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
    }

    @Test
    public void test161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test161");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher20.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher17.makeParenthesis(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher12.matchesAnyChar(rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher12.repeatOneOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher0.matchesNToMOccurences(rEString36, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.MatchString matchString41 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher0.matchesNumBetweenNandM((int) (short) -1, 0);
        st1920.automaton.RegExpMatcher.MatchString matchString45 = regExpMatcher0.makeAlpha();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
    }

    @Test
    public void test162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test162");
        st1920.automaton.RegExpMatcher.MatchString matchString1 = new st1920.automaton.RegExpMatcher.MatchString("null*");
    }

    @Test
    public void test163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test163");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher6.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher6.matchesAnyChar(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher3.makeParenthesis(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher0.matchesNOrMoreOccurences(rEString16, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher22.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher27 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString28 = null;
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher27.repeatZeroOrMore(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher27.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher22.matchesAnyChar(rEString31);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher33.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher41 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = null;
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher41.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher41.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString47 = null;
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.repeatZeroOrMore(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher41.matchesAnyChar(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher38.makeParenthesis(rEString51);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher22.eitherPattern(rEString36, rEString52);
        st1920.automaton.RegExpMatcher regExpMatcher54 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString55 = null;
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher54.repeatZeroOrMore(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher54.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher59 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString60 = null;
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher59.repeatZeroOrMore(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher59.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher54.matchesAnyChar(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher54.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher22.makeParenthesis(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher0.repeatZeroOrMore(rEString65);
        st1920.automaton.RegExpMatcher.MatchString matchString68 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.MatchString matchString69 = regExpMatcher0.makeNum();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString69);
    }

    @Test
    public void test164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test164");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher5.makeParenthesis(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher0.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher23 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString24 = null;
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher23.repeatZeroOrMore(rEString24);
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher23.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString29 = null;
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.repeatZeroOrMore(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher28.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher23.matchesAnyChar(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher23.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher35.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher35.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString47 = null;
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.repeatZeroOrMore(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher43.matchesAnyChar(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher35.repeatZeroOrMore(rEString51);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher35.matchesNumBetweenNandM(0, (int) ' ');
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString57 = null;
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.repeatZeroOrMore(rEString57);
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher56.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher56.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher61 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString62 = null;
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher61.repeatZeroOrMore(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher61.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher66 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString67 = null;
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher66.repeatZeroOrMore(rEString67);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher66.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher61.matchesAnyChar(rEString70);
        java.lang.String str72 = rEString70.getString();
        st1920.automaton.RegExpMatcher regExpMatcher73 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString74 = null;
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher73.repeatZeroOrMore(rEString74);
        st1920.automaton.RegExpMatcher regExpMatcher76 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString77 = null;
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher76.repeatZeroOrMore(rEString77);
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher76.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher81 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString82 = null;
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher81.repeatZeroOrMore(rEString82);
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher81.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher76.matchesAnyChar(rEString85);
        st1920.automaton.RegExpMatcher.REString rEString87 = regExpMatcher73.makeParenthesis(rEString86);
        st1920.automaton.RegExpMatcher.REString rEString88 = regExpMatcher56.bothPatterns(rEString70, rEString87);
        st1920.automaton.RegExpMatcher.REString rEString89 = regExpMatcher35.repeatZeroOrMore(rEString70);
        st1920.automaton.RegExpMatcher.REString rEString90 = regExpMatcher23.makeParenthesis(rEString70);
        st1920.automaton.RegExpMatcher.REString rEString91 = regExpMatcher23.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString92 = regExpMatcher0.repeatOneOrMore(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str72 + "' != '" + "[^hi!]" + "'", str72.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
    }

    @Test
    public void test165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test165");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString15 = null;
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.repeatZeroOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher9.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher6.makeParenthesis(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesAnyChar(rEString19);
        st1920.automaton.RegExpMatcher.MatchString matchString22 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher0.makeAlphareg();
        java.lang.String str24 = rEString23.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "a" + "'", str24.equals("a"));
    }

    @Test
    public void test166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test166");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher6.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher6.matchesAnyChar(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher3.makeParenthesis(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher0.matchesNOrMoreOccurences(rEString16, (int) (byte) -1);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher regExpMatcher23 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString24 = null;
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher23.repeatZeroOrMore(rEString24);
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher23.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString29 = null;
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.repeatZeroOrMore(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher28.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher23.matchesAnyChar(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher20.makeParenthesis(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher0.matchesNOrMoreOccurences(rEString34, (int) '4');
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher0.matchesAnyString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
    }

    @Test
    public void test167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test167");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher0.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher.MatchString matchString36 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher regExpMatcher37 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString38 = null;
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher37.repeatZeroOrMore(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher37.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher42 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString43 = null;
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher42.repeatZeroOrMore(rEString43);
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher42.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher37.matchesAnyChar(rEString46);
        st1920.automaton.RegExpMatcher regExpMatcher48 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher48.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString51 = null;
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher48.repeatZeroOrMore(rEString51);
        st1920.automaton.RegExpMatcher regExpMatcher53 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString54 = null;
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher53.repeatZeroOrMore(rEString54);
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString57 = null;
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.repeatZeroOrMore(rEString57);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher56.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher61 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString62 = null;
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher61.repeatZeroOrMore(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher61.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher56.matchesAnyChar(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher53.makeParenthesis(rEString66);
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher37.eitherPattern(rEString51, rEString67);
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher0.repeatOneOrMore(rEString68);
        java.lang.String str70 = rEString69.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
    }

    @Test
    public void test168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test168");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher3.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher3.matchesAnyChar(rEString12);
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher22.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher27 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString28 = null;
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher27.repeatZeroOrMore(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher27.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher22.matchesAnyChar(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher19.makeParenthesis(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher3.eitherPattern(rEString17, rEString33);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher0.repeatOneOrMore(rEString17);
        java.lang.String str36 = rEString35.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "null+" + "'", str36.equals("null+"));
    }

    @Test
    public void test169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test169");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher3.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher3.matchesAnyChar(rEString12);
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher22.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher27 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString28 = null;
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher27.repeatZeroOrMore(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher27.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher22.matchesAnyChar(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher19.makeParenthesis(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher3.eitherPattern(rEString17, rEString33);
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher38.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString47 = null;
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.repeatZeroOrMore(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher51 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString52 = null;
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher51.repeatZeroOrMore(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher51.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher46.matchesAnyChar(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher43.makeParenthesis(rEString56);
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher38.matchesAnyChar(rEString56);
        st1920.automaton.RegExpMatcher regExpMatcher59 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher59.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher38.repeatOneOrMore(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher35.matchesNOrMoreOccurences(rEString62, 100);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher3.matchesAnyChar(rEString64);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher0.matchesNOccurences(rEString65, (int) '#');
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher0.matchesString("[^hi!]");
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher0.makeAlphareg();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
    }

    @Test
    public void test170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test170");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher5.makeParenthesis(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher0.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher0.repeatOneOrMore(rEString23);
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString29 = null;
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.repeatZeroOrMore(rEString29);
        st1920.automaton.RegExpMatcher regExpMatcher31 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString32 = null;
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher31.repeatZeroOrMore(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher31.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher36 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString37 = null;
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher36.repeatZeroOrMore(rEString37);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher36.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher31.matchesAnyChar(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher28.makeParenthesis(rEString41);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher25.matchesNOrMoreOccurences(rEString41, (int) (byte) -1);
        st1920.automaton.RegExpMatcher regExpMatcher45 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString46 = null;
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher45.repeatZeroOrMore(rEString46);
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher45.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher45.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher0.eitherPattern(rEString44, rEString50);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = null;
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.repeatZeroOrMore(rEString53);
        st1920.automaton.RegExpMatcher regExpMatcher55 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString56 = null;
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher55.repeatZeroOrMore(rEString56);
        st1920.automaton.RegExpMatcher regExpMatcher58 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString59 = null;
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher58.repeatZeroOrMore(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher58.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher63 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString64 = null;
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher63.repeatZeroOrMore(rEString64);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher63.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher58.matchesAnyChar(rEString67);
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher55.makeParenthesis(rEString68);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher52.matchesNOrMoreOccurences(rEString68, (int) (byte) -1);
        st1920.automaton.RegExpMatcher regExpMatcher72 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString73 = null;
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher72.repeatZeroOrMore(rEString73);
        st1920.automaton.RegExpMatcher regExpMatcher75 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher75.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString78 = null;
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher75.repeatZeroOrMore(rEString78);
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher72.repeatOneOrMore(rEString79);
        java.lang.String str81 = rEString80.getString();
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher0.followPattern(rEString68, rEString80);
        st1920.automaton.RegExpMatcher.MatchString matchString85 = regExpMatcher0.makeConcatenation("", "#");
        st1920.automaton.RegExpMatcher.MatchString matchString86 = regExpMatcher0.makeAlpha();
        java.lang.String str87 = matchString86.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str87 + "' != '" + "a" + "'", str87.equals("a"));
    }

    @Test
    public void test171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test171");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher32.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher37 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString38 = null;
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher37.repeatZeroOrMore(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher37.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher32.matchesAnyChar(rEString41);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher32.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher44 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString45 = null;
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher44.repeatZeroOrMore(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher44.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher49 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString50 = null;
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher49.repeatZeroOrMore(rEString50);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = null;
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.repeatZeroOrMore(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher52.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher57 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = null;
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher57.repeatZeroOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher57.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher52.matchesAnyChar(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher49.makeParenthesis(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher44.matchesAnyChar(rEString62);
        st1920.automaton.RegExpMatcher regExpMatcher65 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher65.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher44.repeatOneOrMore(rEString67);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher32.matchesNToMOccurences(rEString68, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher32.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher32.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher0.matchesNOccurences(rEString74, (int) '#');
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.MatchString matchString78 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher.MatchString matchString79 = regExpMatcher0.makeAlpha();
        java.lang.String str80 = matchString79.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str80 + "' != '" + "a" + "'", str80.equals("a"));
    }

    @Test
    public void test172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test172");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString6 = regExpMatcher0.matchesBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher7 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString8 = null;
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher7.repeatZeroOrMore(rEString8);
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher7.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher7.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher regExpMatcher15 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher15.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher15.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher12.repeatOneOrMore(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.eitherPattern(rEString11, rEString19);
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher0.excludePattern(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher0.matchesNoChar();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
    }

    @Test
    public void test173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test173");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString15 = null;
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.repeatZeroOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher9.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher6.makeParenthesis(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesAnyChar(rEString19);
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher22.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher22.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher31 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString32 = null;
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher31.repeatZeroOrMore(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher31.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher28.matchesAnyChar(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher28.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher22.repeatOneOrMore(rEString37);
        st1920.automaton.RegExpMatcher regExpMatcher39 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString40 = null;
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher39.repeatZeroOrMore(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher39.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher48 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher48.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher regExpMatcher51 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString52 = null;
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher51.repeatZeroOrMore(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher51.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString57 = null;
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.repeatZeroOrMore(rEString57);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher56.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher51.matchesAnyChar(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher48.makeParenthesis(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher43.matchesAnyChar(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher39.repeatZeroOrOne(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher0.followPattern(rEString38, rEString64);
        java.lang.String str66 = rEString65.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
    }

    @Test
    public void test174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test174");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher0.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher.MatchString matchString36 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher regExpMatcher37 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString38 = null;
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher37.repeatZeroOrMore(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher37.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher42 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString43 = null;
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher42.repeatZeroOrMore(rEString43);
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher42.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher37.matchesAnyChar(rEString46);
        st1920.automaton.RegExpMatcher regExpMatcher48 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher48.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString51 = null;
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher48.repeatZeroOrMore(rEString51);
        st1920.automaton.RegExpMatcher regExpMatcher53 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString54 = null;
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher53.repeatZeroOrMore(rEString54);
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString57 = null;
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.repeatZeroOrMore(rEString57);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher56.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher61 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString62 = null;
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher61.repeatZeroOrMore(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher61.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher56.matchesAnyChar(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher53.makeParenthesis(rEString66);
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher37.eitherPattern(rEString51, rEString67);
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher0.repeatOneOrMore(rEString68);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher0.matchesNumBetweenNandM((int) (byte) 100, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher0.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.MatchString matchString75 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.MatchString matchString76 = regExpMatcher0.makeNum();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString76);
    }

    @Test
    public void test175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test175");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher10 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString11 = null;
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher10.repeatZeroOrMore(rEString11);
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher10.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher5.matchesAnyChar(rEString14);
        java.lang.String str16 = rEString14.getString();
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher20.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher17.makeParenthesis(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher0.bothPatterns(rEString14, rEString31);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher0.matchesNumBetweenNandM((int) (short) 0, (int) ' ');
        st1920.automaton.RegExpMatcher.REString rEString37 = new st1920.automaton.RegExpMatcher.REString("");
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher0.excludePattern(rEString37);
        java.lang.String str39 = rEString37.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "[^hi!]" + "'", str16.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "" + "'", str39.equals(""));
    }

    @Test
    public void test176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test176");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher18 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString19 = null;
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher18.repeatZeroOrMore(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher18.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher13.matchesAnyChar(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher13.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher30 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString31 = null;
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher30.repeatZeroOrMore(rEString31);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = null;
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher33.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher38.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher33.matchesAnyChar(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher30.makeParenthesis(rEString43);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher25.matchesAnyChar(rEString43);
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher25.repeatOneOrMore(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher13.matchesNToMOccurences(rEString49, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher13.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher13.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher13.matchesNumBetweenNandM(1, (int) (short) -1);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher13.matchesString("");
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher13.matchesBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher13.matchesNumBetweenNandM((int) (short) 10, 1);
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher13.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher13.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher0.repeatOneOrMore(rEString67);
        st1920.automaton.RegExpMatcher regExpMatcher69 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString70 = null;
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher69.repeatZeroOrMore(rEString70);
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher69.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher69.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher75 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher75.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher78 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString79 = null;
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher78.repeatZeroOrMore(rEString79);
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher78.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher75.matchesAnyChar(rEString82);
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher75.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher69.repeatOneOrMore(rEString84);
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher69.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString87 = regExpMatcher0.repeatZeroOrOne(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
    }

    @Test
    public void test177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test177");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher5.makeParenthesis(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher0.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher0.matchesBracketChars("1");
        st1920.automaton.RegExpMatcher.REString rEString24 = new st1920.automaton.RegExpMatcher.REString("[^hi!]");
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher0.makeParenthesis(rEString24);
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher26.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher31 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString32 = null;
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher31.repeatZeroOrMore(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher31.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher26.matchesAnyChar(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher26.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher26.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString39 = regExpMatcher26.makeNum();
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher26.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher26.matchesNumBetweenNandM((int) (short) -1, 1);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher0.repeatOneOrMore(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
    }

    @Test
    public void test178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test178");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher10 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString11 = null;
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher10.repeatZeroOrMore(rEString11);
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher18 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString19 = null;
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher18.repeatZeroOrMore(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher18.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher13.matchesAnyChar(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher10.makeParenthesis(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher5.matchesAnyChar(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher0.matchesAnyChar(rEString25);
        st1920.automaton.RegExpMatcher.MatchString matchString27 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString29 = null;
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.repeatZeroOrMore(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher28.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = null;
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher33.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher28.matchesAnyChar(rEString37);
        st1920.automaton.RegExpMatcher regExpMatcher39 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString40 = null;
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher39.repeatZeroOrMore(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher39.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher44 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString45 = null;
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher44.repeatZeroOrMore(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher44.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher39.matchesAnyChar(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher39.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher51 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString52 = null;
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher51.repeatZeroOrMore(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher51.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString57 = null;
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.repeatZeroOrMore(rEString57);
        st1920.automaton.RegExpMatcher regExpMatcher59 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString60 = null;
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher59.repeatZeroOrMore(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher59.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher64 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString65 = null;
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher64.repeatZeroOrMore(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher64.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher59.matchesAnyChar(rEString68);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher56.makeParenthesis(rEString69);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher51.matchesAnyChar(rEString69);
        st1920.automaton.RegExpMatcher regExpMatcher72 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher72.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher51.repeatOneOrMore(rEString74);
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher39.matchesNToMOccurences(rEString75, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher39.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher39.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher28.matchesNToMOccurences(rEString80, (int) (short) 1, (int) '4');
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher0.matchesNOrMoreOccurences(rEString83, 1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
    }

    @Test
    public void test179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test179");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString14 = regExpMatcher0.makeConcatenation("hi!", "hi!");
        st1920.automaton.RegExpMatcher regExpMatcher15 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString16 = null;
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher15.repeatZeroOrMore(rEString16);
        st1920.automaton.RegExpMatcher regExpMatcher18 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher18.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher18.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher15.repeatOneOrMore(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher0.repeatOneOrMore(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher0.matchesString("[^hi!]hi!hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
    }

    @Test
    public void test180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test180");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher20.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher17.makeParenthesis(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher12.matchesAnyChar(rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher12.repeatOneOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher0.matchesNToMOccurences(rEString36, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher0.matchesBracketChars("[^hi!]hi!hi!");
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher0.matchesString("hi!hi!");
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher0.matchesNumBetweenNandM((-1), (int) (byte) 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
    }

    @Test
    public void test181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test181");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesString("[^hi!]");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher8.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString15 = null;
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.repeatZeroOrMore(rEString15);
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher17.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher22.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher17.matchesAnyChar(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher14.makeParenthesis(rEString27);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher8.matchesAnyChar(rEString27);
        st1920.automaton.RegExpMatcher regExpMatcher30 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString31 = null;
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher30.repeatZeroOrMore(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher30.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher30.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher36 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher36.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher39 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString40 = null;
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher39.repeatZeroOrMore(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher39.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher36.matchesAnyChar(rEString43);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher36.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher30.repeatOneOrMore(rEString45);
        st1920.automaton.RegExpMatcher regExpMatcher47 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = null;
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher47.repeatZeroOrMore(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher47.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher51 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString52 = null;
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher51.repeatZeroOrMore(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher51.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString57 = null;
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.repeatZeroOrMore(rEString57);
        st1920.automaton.RegExpMatcher regExpMatcher59 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString60 = null;
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher59.repeatZeroOrMore(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher59.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher64 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString65 = null;
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher64.repeatZeroOrMore(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher64.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher59.matchesAnyChar(rEString68);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher56.makeParenthesis(rEString69);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher51.matchesAnyChar(rEString69);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher47.repeatZeroOrOne(rEString69);
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher8.followPattern(rEString46, rEString72);
        st1920.automaton.RegExpMatcher.MatchString matchString76 = regExpMatcher8.makeConcatenation("", "1");
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher8.matchesString("a");
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher8.matchesString("#");
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher0.matchesNOrMoreOccurences(rEString80, 10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
    }

    @Test
    public void test182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test182");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher6.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher6.matchesAnyChar(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher3.makeParenthesis(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher0.matchesNOrMoreOccurences(rEString16, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher22.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher27 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString28 = null;
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher27.repeatZeroOrMore(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher27.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher22.matchesAnyChar(rEString31);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher33.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher41 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = null;
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher41.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher41.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString47 = null;
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.repeatZeroOrMore(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher41.matchesAnyChar(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher38.makeParenthesis(rEString51);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher22.eitherPattern(rEString36, rEString52);
        st1920.automaton.RegExpMatcher regExpMatcher54 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString55 = null;
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher54.repeatZeroOrMore(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher54.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher59 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString60 = null;
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher59.repeatZeroOrMore(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher59.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher54.matchesAnyChar(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher54.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher22.makeParenthesis(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher0.repeatZeroOrMore(rEString65);
        st1920.automaton.RegExpMatcher.MatchString matchString68 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher regExpMatcher69 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString70 = null;
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher69.repeatZeroOrMore(rEString70);
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher69.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher69.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher75 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString76 = null;
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher75.repeatZeroOrMore(rEString76);
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher75.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher75.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString81 = regExpMatcher75.makeNum();
        st1920.automaton.RegExpMatcher regExpMatcher82 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString83 = null;
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher82.repeatZeroOrMore(rEString83);
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher82.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher87 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString88 = null;
        st1920.automaton.RegExpMatcher.REString rEString89 = regExpMatcher87.repeatZeroOrMore(rEString88);
        st1920.automaton.RegExpMatcher.REString rEString91 = regExpMatcher87.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString92 = regExpMatcher82.matchesAnyChar(rEString91);
        st1920.automaton.RegExpMatcher.REString rEString93 = regExpMatcher75.repeatOneOrMore(rEString91);
        st1920.automaton.RegExpMatcher.REString rEString95 = regExpMatcher69.matchesNOccurences(rEString93, (int) (short) 10);
        boolean boolean96 = st1920.automaton.RegExpMatcher.matches(matchString68, rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test183");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher3.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher3.matchesAnyChar(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher0.makeParenthesis(rEString13);
        st1920.automaton.RegExpMatcher regExpMatcher15 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString16 = null;
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher15.repeatZeroOrMore(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher15.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher regExpMatcher23 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString24 = null;
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher23.repeatZeroOrMore(rEString24);
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher23.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString29 = null;
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.repeatZeroOrMore(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher28.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher23.matchesAnyChar(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher20.makeParenthesis(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher15.matchesAnyChar(rEString33);
        st1920.automaton.RegExpMatcher regExpMatcher36 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString37 = null;
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher36.repeatZeroOrMore(rEString37);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher36.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher41 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = null;
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher41.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher41.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher36.matchesAnyChar(rEString45);
        st1920.automaton.RegExpMatcher regExpMatcher47 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher47.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString50 = null;
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher47.repeatZeroOrMore(rEString50);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = null;
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.repeatZeroOrMore(rEString53);
        st1920.automaton.RegExpMatcher regExpMatcher55 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString56 = null;
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher55.repeatZeroOrMore(rEString56);
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher55.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher60 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString61 = null;
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher60.repeatZeroOrMore(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher60.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher55.matchesAnyChar(rEString64);
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher52.makeParenthesis(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher36.eitherPattern(rEString50, rEString66);
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher0.eitherPattern(rEString33, rEString67);
        st1920.automaton.RegExpMatcher regExpMatcher69 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString70 = null;
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher69.repeatZeroOrMore(rEString70);
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher69.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher69.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher regExpMatcher77 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString78 = null;
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher77.repeatZeroOrMore(rEString78);
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher77.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher69.excludePattern(rEString80);
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher69.matchesNumBetweenNandM((int) (short) 0, (int) (short) 1);
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher0.matchesAnyChar(rEString84);
        st1920.automaton.RegExpMatcher.REString rEString87 = new st1920.automaton.RegExpMatcher.REString("hi!");
        st1920.automaton.RegExpMatcher.REString rEString89 = regExpMatcher0.matchesNOccurences(rEString87, (int) '#');
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
    }

    @Test
    public void test184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test184");
        st1920.automaton.RegExpMatcher.MatchString matchString1 = new st1920.automaton.RegExpMatcher.MatchString("hi!hi!");
        st1920.automaton.RegExpMatcher regExpMatcher2 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString3 = null;
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher2.repeatZeroOrMore(rEString3);
        st1920.automaton.RegExpMatcher.REString rEString6 = regExpMatcher2.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher7 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString8 = null;
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher7.repeatZeroOrMore(rEString8);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher7.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher2.matchesAnyChar(rEString11);
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString16 = null;
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.repeatZeroOrMore(rEString16);
        st1920.automaton.RegExpMatcher regExpMatcher18 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString19 = null;
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher18.repeatZeroOrMore(rEString19);
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher21.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher26.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher21.matchesAnyChar(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher18.makeParenthesis(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher2.eitherPattern(rEString16, rEString32);
        st1920.automaton.RegExpMatcher regExpMatcher34 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher34.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher2.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher2.matchesAnyString();
        boolean boolean39 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test185");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesString("[^hi!]");
        st1920.automaton.RegExpMatcher.MatchString matchString8 = regExpMatcher0.makeNum();
        java.lang.String str9 = matchString8.getString();
        st1920.automaton.RegExpMatcher regExpMatcher10 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString11 = null;
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher10.repeatZeroOrMore(rEString11);
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher10.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher15 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString16 = null;
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher15.repeatZeroOrMore(rEString16);
        st1920.automaton.RegExpMatcher regExpMatcher18 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString19 = null;
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher18.repeatZeroOrMore(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher18.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher23 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString24 = null;
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher23.repeatZeroOrMore(rEString24);
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher23.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher18.matchesAnyChar(rEString27);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher15.makeParenthesis(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher10.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher regExpMatcher31 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString32 = null;
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher31.repeatZeroOrMore(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher31.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher36 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString37 = null;
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher36.repeatZeroOrMore(rEString37);
        st1920.automaton.RegExpMatcher regExpMatcher39 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString40 = null;
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher39.repeatZeroOrMore(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher39.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher44 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString45 = null;
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher44.repeatZeroOrMore(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher44.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher39.matchesAnyChar(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher36.makeParenthesis(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher31.matchesAnyChar(rEString49);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher31.repeatOneOrMore(rEString54);
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString59 = null;
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher56.repeatZeroOrMore(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher10.eitherPattern(rEString54, rEString59);
        st1920.automaton.RegExpMatcher regExpMatcher62 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher62.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher65 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString66 = null;
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher65.repeatZeroOrMore(rEString66);
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher65.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher62.matchesAnyChar(rEString69);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher62.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher72 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString73 = null;
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher72.repeatZeroOrMore(rEString73);
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher72.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher72.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher10.eitherPattern(rEString71, rEString79);
        st1920.automaton.RegExpMatcher regExpMatcher81 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString82 = null;
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher81.repeatZeroOrMore(rEString82);
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher81.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString87 = regExpMatcher81.makeConcatenation("hi!", "hi!");
        st1920.automaton.RegExpMatcher.REString rEString88 = regExpMatcher81.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString90 = regExpMatcher81.matchesNoBracketChars("1");
        st1920.automaton.RegExpMatcher.REString rEString93 = regExpMatcher10.matchesNToMOccurences(rEString90, 10, (int) (short) 100);
        boolean boolean94 = st1920.automaton.RegExpMatcher.matches(matchString8, rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "1" + "'", str9.equals("1"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test186");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString13 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher0.matchesNumBetweenNandM((int) (short) -1, 1);
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher0.repeatOneOrMore(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
    }

    @Test
    public void test187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test187");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher5.makeParenthesis(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher0.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher0.repeatOneOrMore(rEString23);
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString29 = null;
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.repeatZeroOrMore(rEString29);
        st1920.automaton.RegExpMatcher regExpMatcher31 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString32 = null;
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher31.repeatZeroOrMore(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher31.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher36 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString37 = null;
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher36.repeatZeroOrMore(rEString37);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher36.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher31.matchesAnyChar(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher28.makeParenthesis(rEString41);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher25.matchesNOrMoreOccurences(rEString41, (int) (byte) -1);
        st1920.automaton.RegExpMatcher regExpMatcher45 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString46 = null;
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher45.repeatZeroOrMore(rEString46);
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher45.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher45.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher0.eitherPattern(rEString44, rEString50);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = null;
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.repeatZeroOrMore(rEString53);
        st1920.automaton.RegExpMatcher regExpMatcher55 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString56 = null;
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher55.repeatZeroOrMore(rEString56);
        st1920.automaton.RegExpMatcher regExpMatcher58 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString59 = null;
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher58.repeatZeroOrMore(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher58.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher63 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString64 = null;
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher63.repeatZeroOrMore(rEString64);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher63.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher58.matchesAnyChar(rEString67);
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher55.makeParenthesis(rEString68);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher52.matchesNOrMoreOccurences(rEString68, (int) (byte) -1);
        st1920.automaton.RegExpMatcher regExpMatcher72 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString73 = null;
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher72.repeatZeroOrMore(rEString73);
        st1920.automaton.RegExpMatcher regExpMatcher75 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher75.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString78 = null;
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher75.repeatZeroOrMore(rEString78);
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher72.repeatOneOrMore(rEString79);
        java.lang.String str81 = rEString80.getString();
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher0.followPattern(rEString68, rEString80);
        java.lang.Class<?> wildcardClass83 = regExpMatcher0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test188");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher3.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher16.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher11.matchesAnyChar(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher8.makeParenthesis(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher3.matchesAnyChar(rEString21);
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher3.repeatOneOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher0.matchesNOrMoreOccurences(rEString27, 100);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.matchesNoBracketChars("[^hi!]");
        st1920.automaton.RegExpMatcher.MatchString matchString32 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher0.matchesString("[^hi!]");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
    }

    @Test
    public void test189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test189");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.MatchString matchString4 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher10 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString11 = null;
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher10.repeatZeroOrMore(rEString11);
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher10.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher5.matchesAnyChar(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString19 = null;
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher16.repeatZeroOrMore(rEString19);
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher29.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher24.matchesAnyChar(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher21.makeParenthesis(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher5.eitherPattern(rEString19, rEString35);
        st1920.automaton.RegExpMatcher.MatchString matchString39 = regExpMatcher5.makeConcatenation("", "");
        st1920.automaton.RegExpMatcher.MatchString matchString40 = regExpMatcher5.makeAlpha();
        st1920.automaton.RegExpMatcher regExpMatcher41 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = null;
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher41.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher41.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString47 = null;
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.repeatZeroOrMore(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher41.matchesAnyChar(rEString50);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString55 = null;
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher52.repeatZeroOrMore(rEString55);
        st1920.automaton.RegExpMatcher regExpMatcher57 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = null;
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher57.repeatZeroOrMore(rEString58);
        st1920.automaton.RegExpMatcher regExpMatcher60 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString61 = null;
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher60.repeatZeroOrMore(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher60.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher65 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString66 = null;
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher65.repeatZeroOrMore(rEString66);
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher65.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher60.matchesAnyChar(rEString69);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher57.makeParenthesis(rEString70);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher41.eitherPattern(rEString55, rEString71);
        st1920.automaton.RegExpMatcher regExpMatcher73 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString74 = null;
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher73.repeatZeroOrMore(rEString74);
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher73.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher78 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString79 = null;
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher78.repeatZeroOrMore(rEString79);
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher78.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher73.matchesAnyChar(rEString82);
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher73.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher41.makeParenthesis(rEString84);
        boolean boolean86 = st1920.automaton.RegExpMatcher.matches(matchString40, rEString85);
        st1920.automaton.RegExpMatcher.REString rEString87 = regExpMatcher0.excludePattern(rEString85);
        java.lang.Class<?> wildcardClass88 = rEString85.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test190");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.makeAlphareg();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
    }

    @Test
    public void test191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test191");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString15 = null;
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.repeatZeroOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher9.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher6.makeParenthesis(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesAnyChar(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher0.matchesAnyString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
    }

    @Test
    public void test192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test192");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher5.makeParenthesis(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher0.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher21.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher29.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher34 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = null;
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher34.repeatZeroOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher34.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher29.matchesAnyChar(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher26.makeParenthesis(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher21.matchesAnyChar(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher42 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher42.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher21.repeatOneOrMore(rEString44);
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher0.eitherPattern(rEString44, rEString49);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher55 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString56 = null;
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher55.repeatZeroOrMore(rEString56);
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher55.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher52.matchesAnyChar(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher52.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher62 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString63 = null;
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher62.repeatZeroOrMore(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher62.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher62.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher0.eitherPattern(rEString61, rEString69);
        st1920.automaton.RegExpMatcher.MatchString matchString71 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher.MatchString matchString72 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher0.matchesString("[^hi!]");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
    }

    @Test
    public void test193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test193");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher3.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher3.matchesAnyChar(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher0.makeParenthesis(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher16.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher16.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher21.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher26.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher21.matchesAnyChar(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher21.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = null;
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher33.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher41 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = null;
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher41.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher41.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString47 = null;
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.repeatZeroOrMore(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher41.matchesAnyChar(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher38.makeParenthesis(rEString51);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher33.matchesAnyChar(rEString51);
        st1920.automaton.RegExpMatcher regExpMatcher54 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher54.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher33.repeatOneOrMore(rEString56);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher21.matchesNToMOccurences(rEString57, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher21.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher21.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher21.matchesNumBetweenNandM(1, (int) (short) -1);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher16.makeParenthesis(rEString66);
        st1920.automaton.RegExpMatcher.REString rEString69 = new st1920.automaton.RegExpMatcher.REString("[^hi!]");
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher16.excludePattern(rEString69);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher0.repeatZeroOrMore(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
    }

    @Test
    public void test194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test194");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString14 = regExpMatcher0.makeConcatenation("hi!", "hi!");
        st1920.automaton.RegExpMatcher regExpMatcher15 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString16 = null;
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher15.repeatZeroOrMore(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher15.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher15.matchesAnyChar(rEString24);
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString29 = null;
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher26.repeatZeroOrMore(rEString29);
        st1920.automaton.RegExpMatcher regExpMatcher31 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString32 = null;
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher31.repeatZeroOrMore(rEString32);
        st1920.automaton.RegExpMatcher regExpMatcher34 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = null;
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher34.repeatZeroOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher34.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher39 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString40 = null;
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher39.repeatZeroOrMore(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher39.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher34.matchesAnyChar(rEString43);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher31.makeParenthesis(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher15.eitherPattern(rEString29, rEString45);
        st1920.automaton.RegExpMatcher regExpMatcher47 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher47.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher15.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher0.matchesAnyChar(rEString49);
        java.lang.String str52 = rEString49.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str52 + "' != '" + "[^]" + "'", str52.equals("[^]"));
    }

    @Test
    public void test195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test195");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher11.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString17 = regExpMatcher11.makeNum();
        st1920.automaton.RegExpMatcher regExpMatcher18 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString19 = null;
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher18.repeatZeroOrMore(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher18.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher23 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString24 = null;
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher23.repeatZeroOrMore(rEString24);
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher23.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher18.matchesAnyChar(rEString27);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher11.repeatOneOrMore(rEString27);
        st1920.automaton.RegExpMatcher regExpMatcher30 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString31 = null;
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher30.repeatZeroOrMore(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher30.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher30.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher11.repeatZeroOrOne(rEString35);
        st1920.automaton.RegExpMatcher regExpMatcher37 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString38 = null;
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher37.repeatZeroOrMore(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher37.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher37.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher11.excludePattern(rEString41);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher0.matchesNOrMoreOccurences(rEString42, 100);
        st1920.automaton.RegExpMatcher regExpMatcher45 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString46 = null;
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher45.repeatZeroOrMore(rEString46);
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher45.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher45.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher regExpMatcher53 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString54 = null;
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher53.repeatZeroOrMore(rEString54);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher53.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher45.excludePattern(rEString56);
        st1920.automaton.RegExpMatcher regExpMatcher58 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString59 = null;
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher58.repeatZeroOrMore(rEString59);
        st1920.automaton.RegExpMatcher regExpMatcher61 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString62 = null;
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher61.repeatZeroOrMore(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher61.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher66 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString67 = null;
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher66.repeatZeroOrMore(rEString67);
        st1920.automaton.RegExpMatcher regExpMatcher69 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString70 = null;
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher69.repeatZeroOrMore(rEString70);
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher69.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher74 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString75 = null;
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher74.repeatZeroOrMore(rEString75);
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher74.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher69.matchesAnyChar(rEString78);
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher66.makeParenthesis(rEString79);
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher61.matchesAnyChar(rEString79);
        st1920.automaton.RegExpMatcher regExpMatcher82 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher82.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher61.repeatOneOrMore(rEString84);
        st1920.automaton.RegExpMatcher.REString rEString87 = regExpMatcher58.matchesNOrMoreOccurences(rEString85, 100);
        st1920.automaton.RegExpMatcher.REString rEString89 = regExpMatcher45.matchesNOccurences(rEString87, 0);
        st1920.automaton.RegExpMatcher.REString rEString90 = regExpMatcher0.repeatZeroOrOne(rEString89);
        st1920.automaton.RegExpMatcher.MatchString matchString93 = regExpMatcher0.makeConcatenation("1", "[^[^hi!]]");
        st1920.automaton.RegExpMatcher.REString rEString96 = regExpMatcher0.matchesNumBetweenNandM((int) 'a', 10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
    }

    @Test
    public void test196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test196");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString6 = regExpMatcher0.matchesBracketChars("1");
        st1920.automaton.RegExpMatcher regExpMatcher7 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString8 = null;
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher7.repeatZeroOrMore(rEString8);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher7.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher7.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher regExpMatcher15 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString16 = null;
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher15.repeatZeroOrMore(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher15.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher7.excludePattern(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher20.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher29.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher34 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = null;
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher34.repeatZeroOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher34.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher29.matchesAnyChar(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher26.makeParenthesis(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher20.matchesAnyChar(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher20.matchesString("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher44 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString45 = null;
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher44.repeatZeroOrMore(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher44.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher44.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher49 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString50 = null;
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher49.repeatZeroOrMore(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher49.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher54 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString55 = null;
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher54.repeatZeroOrMore(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher54.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher49.matchesAnyChar(rEString58);
        java.lang.String str60 = rEString58.getString();
        st1920.automaton.RegExpMatcher regExpMatcher61 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString62 = null;
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher61.repeatZeroOrMore(rEString62);
        st1920.automaton.RegExpMatcher regExpMatcher64 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString65 = null;
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher64.repeatZeroOrMore(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher64.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher69 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString70 = null;
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher69.repeatZeroOrMore(rEString70);
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher69.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher64.matchesAnyChar(rEString73);
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher61.makeParenthesis(rEString74);
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher44.bothPatterns(rEString58, rEString75);
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher44.matchesNumBetweenNandM((int) (short) 0, (int) ' ');
        st1920.automaton.RegExpMatcher regExpMatcher80 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString81 = null;
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher80.repeatZeroOrMore(rEString81);
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher80.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher80.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString88 = regExpMatcher80.makeConcatenation("", "1");
        st1920.automaton.RegExpMatcher.REString rEString90 = regExpMatcher80.matchesBracketChars("1");
        st1920.automaton.RegExpMatcher.REString rEString91 = regExpMatcher20.followPattern(rEString79, rEString90);
        st1920.automaton.RegExpMatcher.REString rEString92 = regExpMatcher7.repeatZeroOrOne(rEString91);
        st1920.automaton.RegExpMatcher.REString rEString93 = regExpMatcher0.makeParenthesis(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str60 + "' != '" + "[^hi!]" + "'", str60.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
    }

    @Test
    public void test197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test197");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher4 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString5 = null;
        st1920.automaton.RegExpMatcher.REString rEString6 = regExpMatcher4.repeatZeroOrMore(rEString5);
        st1920.automaton.RegExpMatcher regExpMatcher7 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString8 = null;
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher7.repeatZeroOrMore(rEString8);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher7.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher regExpMatcher15 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString16 = null;
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher15.repeatZeroOrMore(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher15.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher15.matchesAnyChar(rEString24);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher12.makeParenthesis(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher7.matchesAnyChar(rEString25);
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher7.repeatOneOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher4.matchesNOrMoreOccurences(rEString31, 100);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher4.matchesNoBracketChars("[^hi!]");
        st1920.automaton.RegExpMatcher regExpMatcher36 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString37 = null;
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher36.repeatZeroOrMore(rEString37);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher36.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher36.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher41 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = null;
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher41.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher41.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString47 = null;
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.repeatZeroOrMore(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher41.matchesAnyChar(rEString50);
        java.lang.String str52 = rEString50.getString();
        st1920.automaton.RegExpMatcher regExpMatcher53 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString54 = null;
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher53.repeatZeroOrMore(rEString54);
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString57 = null;
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.repeatZeroOrMore(rEString57);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher56.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher61 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString62 = null;
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher61.repeatZeroOrMore(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher61.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher56.matchesAnyChar(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher53.makeParenthesis(rEString66);
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher36.bothPatterns(rEString50, rEString67);
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher0.eitherPattern(rEString35, rEString68);
        st1920.automaton.RegExpMatcher regExpMatcher70 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString71 = null;
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher70.repeatZeroOrMore(rEString71);
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher70.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher70.matchesBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher77 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString78 = null;
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher77.repeatZeroOrMore(rEString78);
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher77.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher77.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher82 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString83 = null;
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher82.repeatZeroOrMore(rEString83);
        st1920.automaton.RegExpMatcher regExpMatcher85 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString87 = regExpMatcher85.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString88 = null;
        st1920.automaton.RegExpMatcher.REString rEString89 = regExpMatcher85.repeatZeroOrMore(rEString88);
        st1920.automaton.RegExpMatcher.REString rEString90 = regExpMatcher82.repeatOneOrMore(rEString89);
        st1920.automaton.RegExpMatcher.REString rEString91 = regExpMatcher70.eitherPattern(rEString81, rEString89);
        st1920.automaton.RegExpMatcher.REString rEString94 = regExpMatcher0.matchesNToMOccurences(rEString81, 0, (int) '#');
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str52 + "' != '" + "[^hi!]" + "'", str52.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
    }

    @Test
    public void test198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test198");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.MatchString matchString13 = regExpMatcher0.makeConcatenation("hi!hi!", "[^hi!]");
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString15 = null;
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.repeatZeroOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher14.matchesAnyChar(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher14.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher26.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher31 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString32 = null;
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher31.repeatZeroOrMore(rEString32);
        st1920.automaton.RegExpMatcher regExpMatcher34 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = null;
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher34.repeatZeroOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher34.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher39 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString40 = null;
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher39.repeatZeroOrMore(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher39.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher34.matchesAnyChar(rEString43);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher31.makeParenthesis(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher26.matchesAnyChar(rEString44);
        st1920.automaton.RegExpMatcher regExpMatcher47 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher47.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher26.repeatOneOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher14.matchesNToMOccurences(rEString50, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher14.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher14.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher0.makeParenthesis(rEString56);
        st1920.automaton.RegExpMatcher.MatchString matchString58 = regExpMatcher0.makeNum();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
    }

    @Test
    public void test199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test199");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher0.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher0.makeParenthesis(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
    }

    @Test
    public void test200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test200");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString6 = regExpMatcher0.matchesBracketChars("1");
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher0.repeatOneOrMore(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
    }

    @Test
    public void test201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test201");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher20.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher17.makeParenthesis(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher12.matchesAnyChar(rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher12.repeatOneOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher0.matchesNToMOccurences(rEString36, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher41 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = null;
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher41.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher41.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString47 = null;
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.repeatZeroOrMore(rEString47);
        st1920.automaton.RegExpMatcher regExpMatcher49 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString50 = null;
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher49.repeatZeroOrMore(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher49.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher54 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString55 = null;
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher54.repeatZeroOrMore(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher54.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher49.matchesAnyChar(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher46.makeParenthesis(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher41.matchesAnyChar(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher41.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher41.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher0.matchesNToMOccurences(rEString64, 0, (int) 'a');
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher0.matchesBracketChars("null+");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
    }

    @Test
    public void test202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test202");
        st1920.automaton.RegExpMatcher.REString rEString1 = new st1920.automaton.RegExpMatcher.REString("null+");
    }

    @Test
    public void test203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test203");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher3.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher16.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher11.matchesAnyChar(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher8.makeParenthesis(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher3.matchesAnyChar(rEString21);
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher3.repeatOneOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher0.matchesNOrMoreOccurences(rEString27, 100);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.matchesNoBracketChars("[^hi!]");
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher0.matchesString("null*");
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher0.matchesNoBracketChars("a");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
    }

    @Test
    public void test204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test204");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher10 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString11 = null;
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher10.repeatZeroOrMore(rEString11);
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher18 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString19 = null;
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher18.repeatZeroOrMore(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher18.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher13.matchesAnyChar(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher10.makeParenthesis(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher5.matchesAnyChar(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher0.matchesAnyChar(rEString25);
        st1920.automaton.RegExpMatcher regExpMatcher27 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString28 = null;
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher27.repeatZeroOrMore(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher27.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher27.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString33 = regExpMatcher27.makeNum();
        st1920.automaton.RegExpMatcher regExpMatcher34 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = null;
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher34.repeatZeroOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher34.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher39 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString40 = null;
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher39.repeatZeroOrMore(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher39.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher34.matchesAnyChar(rEString43);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher27.repeatOneOrMore(rEString43);
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString47 = null;
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.repeatZeroOrMore(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher46.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher27.repeatZeroOrOne(rEString51);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher0.repeatOneOrMore(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
    }

    @Test
    public void test205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test205");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher20.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher17.makeParenthesis(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher12.matchesAnyChar(rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher12.repeatOneOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher0.matchesNToMOccurences(rEString36, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher0.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher0.matchesNumBetweenNandM(1, (int) (short) -1);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher0.matchesString("");
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher0.matchesBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher0.matchesNumBetweenNandM((int) (short) 10, 1);
        st1920.automaton.RegExpMatcher.MatchString matchString53 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher55 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString56 = null;
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher55.repeatZeroOrMore(rEString56);
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher55.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher55.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher55.matchesString("[^hi!]");
        st1920.automaton.RegExpMatcher regExpMatcher63 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString64 = null;
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher63.repeatZeroOrMore(rEString64);
        st1920.automaton.RegExpMatcher regExpMatcher66 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString67 = null;
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher66.repeatZeroOrMore(rEString67);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher66.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher71 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString72 = null;
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher71.repeatZeroOrMore(rEString72);
        st1920.automaton.RegExpMatcher regExpMatcher74 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString75 = null;
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher74.repeatZeroOrMore(rEString75);
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher74.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher79 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString80 = null;
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher79.repeatZeroOrMore(rEString80);
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher79.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher74.matchesAnyChar(rEString83);
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher71.makeParenthesis(rEString84);
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher66.matchesAnyChar(rEString84);
        st1920.automaton.RegExpMatcher regExpMatcher87 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString89 = regExpMatcher87.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString90 = regExpMatcher66.repeatOneOrMore(rEString89);
        st1920.automaton.RegExpMatcher.REString rEString92 = regExpMatcher63.matchesNOrMoreOccurences(rEString90, 100);
        st1920.automaton.RegExpMatcher.REString rEString93 = regExpMatcher55.makeParenthesis(rEString90);
        st1920.automaton.RegExpMatcher.REString rEString94 = regExpMatcher0.excludePattern(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
    }

    @Test
    public void test206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test206");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.MatchString matchString7 = regExpMatcher0.makeConcatenation("[^hi!]", "");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher regExpMatcher27 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString28 = null;
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher27.repeatZeroOrMore(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher27.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher32.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher27.matchesAnyChar(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher24.makeParenthesis(rEString37);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher8.eitherPattern(rEString22, rEString38);
        st1920.automaton.RegExpMatcher regExpMatcher40 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher40.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher8.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher8.matchesBracketChars("1");
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher0.matchesAnyChar(rEString45);
        st1920.automaton.RegExpMatcher regExpMatcher47 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString49 = new st1920.automaton.RegExpMatcher.REString("");
        st1920.automaton.RegExpMatcher regExpMatcher50 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher50.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher50.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher47.bothPatterns(rEString49, rEString53);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher0.excludePattern(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
    }

    @Test
    public void test207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test207");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher10 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString11 = null;
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher10.repeatZeroOrMore(rEString11);
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher10.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher5.matchesAnyChar(rEString14);
        java.lang.String str16 = rEString14.getString();
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher20.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher17.makeParenthesis(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher0.bothPatterns(rEString14, rEString31);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher0.matchesNumBetweenNandM((int) (short) 0, (int) ' ');
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher0.makeAlphareg();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "[^hi!]" + "'", str16.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
    }

    @Test
    public void test208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test208");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher32.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher37 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString38 = null;
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher37.repeatZeroOrMore(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher37.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher32.matchesAnyChar(rEString41);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher32.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher44 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString45 = null;
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher44.repeatZeroOrMore(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher44.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher49 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString50 = null;
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher49.repeatZeroOrMore(rEString50);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = null;
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.repeatZeroOrMore(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher52.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher57 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = null;
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher57.repeatZeroOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher57.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher52.matchesAnyChar(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher49.makeParenthesis(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher44.matchesAnyChar(rEString62);
        st1920.automaton.RegExpMatcher regExpMatcher65 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher65.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher44.repeatOneOrMore(rEString67);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher32.matchesNToMOccurences(rEString68, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher32.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher32.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher0.matchesNOccurences(rEString74, (int) '#');
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher0.matchesString("[^hi!]hi!hi!");
        st1920.automaton.RegExpMatcher.MatchString matchString82 = regExpMatcher0.makeConcatenation("[^hi!]", "hi!hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString82);
    }

    @Test
    public void test209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test209");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher3.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher16.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher11.matchesAnyChar(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher8.makeParenthesis(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher3.matchesAnyChar(rEString21);
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher3.repeatOneOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher0.matchesNOrMoreOccurences(rEString27, 100);
        st1920.automaton.RegExpMatcher.MatchString matchString30 = regExpMatcher0.makeAlpha();
        java.lang.String str31 = matchString30.getString();
        java.lang.String str32 = matchString30.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "a" + "'", str31.equals("a"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "a" + "'", str32.equals("a"));
    }

    @Test
    public void test210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test210");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher0.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher.MatchString matchString36 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher0.matchesBracketChars("[^hi!]");
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher40 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString41 = null;
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher40.repeatZeroOrMore(rEString41);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher40.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher45 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString46 = null;
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher45.repeatZeroOrMore(rEString46);
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher45.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher40.matchesAnyChar(rEString49);
        st1920.automaton.RegExpMatcher regExpMatcher51 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher51.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString54 = null;
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher51.repeatZeroOrMore(rEString54);
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString57 = null;
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.repeatZeroOrMore(rEString57);
        st1920.automaton.RegExpMatcher regExpMatcher59 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString60 = null;
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher59.repeatZeroOrMore(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher59.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher64 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString65 = null;
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher64.repeatZeroOrMore(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher64.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher59.matchesAnyChar(rEString68);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher56.makeParenthesis(rEString69);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher40.eitherPattern(rEString54, rEString70);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher0.excludePattern(rEString71);
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher0.matchesAnyString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
    }

    @Test
    public void test211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test211");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher8.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher0.excludePattern(rEString11);
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher18 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString19 = null;
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher18.repeatZeroOrMore(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher18.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher13.matchesAnyChar(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher13.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher30 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString31 = null;
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher30.repeatZeroOrMore(rEString31);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = null;
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher33.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher38.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher33.matchesAnyChar(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher30.makeParenthesis(rEString43);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher25.matchesAnyChar(rEString43);
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher25.repeatOneOrMore(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher13.matchesNToMOccurences(rEString49, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher13.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher13.matchesBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString57 = null;
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.repeatZeroOrMore(rEString57);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher56.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher61 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString62 = null;
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher61.repeatZeroOrMore(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher61.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher56.matchesAnyChar(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher56.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher56.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher56.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher0.bothPatterns(rEString55, rEString69);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher0.matchesNoBracketChars("a");
        st1920.automaton.RegExpMatcher.REString rEString76 = new st1920.automaton.RegExpMatcher.REString("hi!");
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher0.excludePattern(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
    }

    @Test
    public void test212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test212");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher11.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString19 = regExpMatcher11.makeConcatenation("", "1");
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher11.matchesBracketChars("1");
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher0.excludePattern(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
    }

    @Test
    public void test213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test213");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher10 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString11 = null;
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher10.repeatZeroOrMore(rEString11);
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher10.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher5.matchesAnyChar(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher5.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher17.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher30 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString31 = null;
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher30.repeatZeroOrMore(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher30.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher25.matchesAnyChar(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher22.makeParenthesis(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher17.matchesAnyChar(rEString35);
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher17.repeatOneOrMore(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher5.matchesNToMOccurences(rEString41, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher5.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher5.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher5.matchesNumBetweenNandM(1, (int) (short) -1);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher0.makeParenthesis(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher54 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString55 = null;
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher54.repeatZeroOrMore(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher54.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher59 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString60 = null;
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher59.repeatZeroOrMore(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher59.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher54.matchesAnyChar(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher0.repeatOneOrMore(rEString64);
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher0.matchesNumBetweenNandM((int) (short) 10, (int) '4');
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
    }

    @Test
    public void test214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test214");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher3.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher3.matchesAnyChar(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher0.makeParenthesis(rEString13);
        java.lang.Class<?> wildcardClass15 = rEString13.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test215");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher20.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher17.makeParenthesis(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher12.matchesAnyChar(rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher12.repeatOneOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher0.matchesNToMOccurences(rEString36, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher0.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher0.matchesNumBetweenNandM(1, (int) (short) -1);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher0.matchesString("");
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher0.matchesBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher0.matchesNumBetweenNandM((int) (short) 10, 1);
        java.lang.String str53 = rEString52.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "<10-1>" + "'", str53.equals("<10-1>"));
    }

    @Test
    public void test216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test216");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString13 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher15 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString16 = null;
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher15.repeatZeroOrMore(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher15.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher15.matchesAnyChar(rEString24);
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString29 = null;
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher26.repeatZeroOrMore(rEString29);
        st1920.automaton.RegExpMatcher regExpMatcher31 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString32 = null;
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher31.repeatZeroOrMore(rEString32);
        st1920.automaton.RegExpMatcher regExpMatcher34 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = null;
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher34.repeatZeroOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher34.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher39 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString40 = null;
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher39.repeatZeroOrMore(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher39.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher34.matchesAnyChar(rEString43);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher31.makeParenthesis(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher15.eitherPattern(rEString29, rEString45);
        st1920.automaton.RegExpMatcher regExpMatcher47 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = null;
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher47.repeatZeroOrMore(rEString48);
        st1920.automaton.RegExpMatcher regExpMatcher50 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString51 = null;
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher50.repeatZeroOrMore(rEString51);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher50.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher55 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString56 = null;
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher55.repeatZeroOrMore(rEString56);
        st1920.automaton.RegExpMatcher regExpMatcher58 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString59 = null;
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher58.repeatZeroOrMore(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher58.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher63 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString64 = null;
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher63.repeatZeroOrMore(rEString64);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher63.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher58.matchesAnyChar(rEString67);
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher55.makeParenthesis(rEString68);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher50.matchesAnyChar(rEString68);
        st1920.automaton.RegExpMatcher regExpMatcher71 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher71.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher50.repeatOneOrMore(rEString73);
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher47.matchesNOrMoreOccurences(rEString74, 100);
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher15.matchesAnyChar(rEString76);
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher0.repeatZeroOrMore(rEString77);
        java.lang.Class<?> wildcardClass79 = rEString78.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test217");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher10 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString11 = null;
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher10.repeatZeroOrMore(rEString11);
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher10.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher5.matchesAnyChar(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher5.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher17.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher30 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString31 = null;
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher30.repeatZeroOrMore(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher30.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher25.matchesAnyChar(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher22.makeParenthesis(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher17.matchesAnyChar(rEString35);
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher17.repeatOneOrMore(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher5.matchesNToMOccurences(rEString41, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher5.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher5.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher5.matchesNumBetweenNandM(1, (int) (short) -1);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher0.makeParenthesis(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.MatchString matchString55 = regExpMatcher0.makeConcatenation("", "1");
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher0.matchesBracketChars("a");
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher0.matchesNumBetweenNandM(100, (int) (byte) 1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
    }

    @Test
    public void test218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test218");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesNoBracketChars("[^hi!]");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
    }

    @Test
    public void test219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test219");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher8.matchesNoChar();
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher20.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher20.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString34 = regExpMatcher20.makeConcatenation("hi!", "hi!");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher20.matchesBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher20.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher8.repeatOneOrMore(rEString37);
        st1920.automaton.RegExpMatcher regExpMatcher39 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString40 = null;
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher39.repeatZeroOrMore(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher39.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher48 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher48.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher48.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher43.matchesAnyChar(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher43.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher55 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString56 = null;
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher55.repeatZeroOrMore(rEString56);
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher55.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher60 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString61 = null;
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher60.repeatZeroOrMore(rEString61);
        st1920.automaton.RegExpMatcher regExpMatcher63 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString64 = null;
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher63.repeatZeroOrMore(rEString64);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher63.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher68 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString69 = null;
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher68.repeatZeroOrMore(rEString69);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher68.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher63.matchesAnyChar(rEString72);
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher60.makeParenthesis(rEString73);
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher55.matchesAnyChar(rEString73);
        st1920.automaton.RegExpMatcher regExpMatcher76 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher76.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher55.repeatOneOrMore(rEString78);
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher43.matchesNToMOccurences(rEString79, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher43.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher43.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString88 = regExpMatcher39.matchesNToMOccurences(rEString85, (int) (byte) 10, (int) ' ');
        st1920.automaton.RegExpMatcher.REString rEString89 = regExpMatcher8.matchesAnyChar(rEString88);
        st1920.automaton.RegExpMatcher.REString rEString91 = regExpMatcher0.matchesNOccurences(rEString88, (int) 'a');
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
    }

    @Test
    public void test220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test220");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher0.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher0.makeAlphareg();
        java.lang.Class<?> wildcardClass38 = regExpMatcher0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test221");
        st1920.automaton.RegExpMatcher.REString rEString1 = new st1920.automaton.RegExpMatcher.REString("[^]");
    }

    @Test
    public void test222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test222");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString13 = regExpMatcher0.makeNum();
        java.lang.String str14 = matchString13.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "1" + "'", str14.equals("1"));
    }

    @Test
    public void test223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test223");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString3 = null;
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.repeatZeroOrMore(rEString3);
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher10 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString11 = null;
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher10.repeatZeroOrMore(rEString11);
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher18 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString19 = null;
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher18.repeatZeroOrMore(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher18.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher13.matchesAnyChar(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher10.makeParenthesis(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher5.matchesAnyChar(rEString23);
        st1920.automaton.RegExpMatcher.MatchString matchString28 = regExpMatcher5.makeConcatenation("hi!", "#");
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher29.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString35 = regExpMatcher29.makeConcatenation("hi!", "hi!");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher29.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher29.matchesNoBracketChars("1");
        boolean boolean39 = st1920.automaton.RegExpMatcher.matches(matchString28, rEString38);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher0.makeParenthesis(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
    }

    @Test
    public void test224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test224");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString15 = null;
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.repeatZeroOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher9.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher6.makeParenthesis(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesAnyChar(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher0.matchesString("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher29.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher24.matchesAnyChar(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher24.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher24.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher0.repeatOneOrMore(rEString36);
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher41 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = null;
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher41.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher41.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString47 = null;
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.repeatZeroOrMore(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher41.matchesAnyChar(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher38.makeParenthesis(rEString51);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher38.matchesNoChar();
        st1920.automaton.RegExpMatcher regExpMatcher54 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString55 = null;
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher54.repeatZeroOrMore(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher54.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher54.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher60 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher60.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher63 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString64 = null;
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher63.repeatZeroOrMore(rEString64);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher63.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher60.matchesAnyChar(rEString67);
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher60.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher54.repeatOneOrMore(rEString69);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher54.matchesBracketChars("1");
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher54.matchesNumBetweenNandM((int) (byte) -1, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher54.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher38.excludePattern(rEString76);
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher0.repeatOneOrMore(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
    }

    @Test
    public void test225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test225");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher6.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher6.matchesAnyChar(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher3.makeParenthesis(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher0.matchesNOrMoreOccurences(rEString16, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher22.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher27 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString28 = null;
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher27.repeatZeroOrMore(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher27.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher22.matchesAnyChar(rEString31);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher33.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher41 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = null;
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher41.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher41.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString47 = null;
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.repeatZeroOrMore(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher41.matchesAnyChar(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher38.makeParenthesis(rEString51);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher22.eitherPattern(rEString36, rEString52);
        st1920.automaton.RegExpMatcher regExpMatcher54 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString55 = null;
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher54.repeatZeroOrMore(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher54.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher59 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString60 = null;
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher59.repeatZeroOrMore(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher59.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher54.matchesAnyChar(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher54.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher22.makeParenthesis(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher0.repeatZeroOrMore(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher0.matchesBracketChars("[^hi!]");
        st1920.automaton.RegExpMatcher regExpMatcher70 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString71 = null;
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher70.repeatZeroOrMore(rEString71);
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher70.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher75 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString76 = null;
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher75.repeatZeroOrMore(rEString76);
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher75.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher70.matchesAnyChar(rEString79);
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher70.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher0.makeParenthesis(rEString81);
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher0.makeNumreg();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
    }

    @Test
    public void test226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test226");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString6 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher regExpMatcher7 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString8 = null;
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher7.repeatZeroOrMore(rEString8);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher7.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher7.matchesAnyChar(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher0.repeatOneOrMore(rEString16);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher19.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher0.repeatZeroOrOne(rEString24);
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher26.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher26.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.excludePattern(rEString30);
        st1920.automaton.RegExpMatcher.MatchString matchString32 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.MatchString matchString35 = regExpMatcher0.makeConcatenation("@", "");
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher0.matchesNumBetweenNandM((int) (byte) 100, (int) (short) 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
    }

    @Test
    public void test227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test227");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString15 = null;
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.repeatZeroOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher9.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher6.makeParenthesis(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesAnyChar(rEString19);
        st1920.automaton.RegExpMatcher.MatchString matchString22 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher0.matchesNoChar();
        java.lang.Class<?> wildcardClass24 = regExpMatcher0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test228");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher3.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher3.matchesAnyChar(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher0.makeParenthesis(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher0.matchesString("#");
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher17.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher17.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher25.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher17.excludePattern(rEString28);
        st1920.automaton.RegExpMatcher regExpMatcher30 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString31 = null;
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher30.repeatZeroOrMore(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher30.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher35.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher30.matchesAnyChar(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher30.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher42 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString43 = null;
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher42.repeatZeroOrMore(rEString43);
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher42.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher47 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = null;
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher47.repeatZeroOrMore(rEString48);
        st1920.automaton.RegExpMatcher regExpMatcher50 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString51 = null;
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher50.repeatZeroOrMore(rEString51);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher50.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher55 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString56 = null;
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher55.repeatZeroOrMore(rEString56);
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher55.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher50.matchesAnyChar(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher47.makeParenthesis(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher42.matchesAnyChar(rEString60);
        st1920.automaton.RegExpMatcher regExpMatcher63 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher63.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher42.repeatOneOrMore(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher30.matchesNToMOccurences(rEString66, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher30.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher30.matchesBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher73 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString74 = null;
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher73.repeatZeroOrMore(rEString74);
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher73.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher78 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString79 = null;
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher78.repeatZeroOrMore(rEString79);
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher78.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher73.matchesAnyChar(rEString82);
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher73.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher73.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher73.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString87 = regExpMatcher17.bothPatterns(rEString72, rEString86);
        st1920.automaton.RegExpMatcher.REString rEString89 = regExpMatcher0.matchesNOccurences(rEString87, (int) (short) 0);
        st1920.automaton.RegExpMatcher.REString rEString90 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString93 = regExpMatcher0.matchesNumBetweenNandM(100, (int) '4');
        st1920.automaton.RegExpMatcher.REString rEString95 = regExpMatcher0.matchesBracketChars("[^]");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
    }

    @Test
    public void test229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test229");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher5.makeParenthesis(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher0.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher0.repeatOneOrMore(rEString23);
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString29 = null;
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.repeatZeroOrMore(rEString29);
        st1920.automaton.RegExpMatcher regExpMatcher31 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString32 = null;
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher31.repeatZeroOrMore(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher31.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher36 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString37 = null;
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher36.repeatZeroOrMore(rEString37);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher36.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher31.matchesAnyChar(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher28.makeParenthesis(rEString41);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher25.matchesNOrMoreOccurences(rEString41, (int) (byte) -1);
        st1920.automaton.RegExpMatcher regExpMatcher45 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString46 = null;
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher45.repeatZeroOrMore(rEString46);
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher45.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher45.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher0.eitherPattern(rEString44, rEString50);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = null;
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.repeatZeroOrMore(rEString53);
        st1920.automaton.RegExpMatcher regExpMatcher55 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString56 = null;
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher55.repeatZeroOrMore(rEString56);
        st1920.automaton.RegExpMatcher regExpMatcher58 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString59 = null;
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher58.repeatZeroOrMore(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher58.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher63 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString64 = null;
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher63.repeatZeroOrMore(rEString64);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher63.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher58.matchesAnyChar(rEString67);
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher55.makeParenthesis(rEString68);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher52.matchesNOrMoreOccurences(rEString68, (int) (byte) -1);
        st1920.automaton.RegExpMatcher regExpMatcher72 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString73 = null;
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher72.repeatZeroOrMore(rEString73);
        st1920.automaton.RegExpMatcher regExpMatcher75 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher75.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString78 = null;
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher75.repeatZeroOrMore(rEString78);
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher72.repeatOneOrMore(rEString79);
        java.lang.String str81 = rEString80.getString();
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher0.followPattern(rEString68, rEString80);
        st1920.automaton.RegExpMatcher.MatchString matchString85 = regExpMatcher0.makeConcatenation("", "#");
        st1920.automaton.RegExpMatcher.REString rEString87 = regExpMatcher0.matchesBracketChars("null+");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
    }

    @Test
    public void test230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test230");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesBracketChars("a");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher8.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher8.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher17.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString23 = regExpMatcher17.makeConcatenation("hi!", "hi!");
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher17.matchesString("[^hi!]hi!hi!");
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher17.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher0.bothPatterns(rEString16, rEString26);
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString29 = null;
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.repeatZeroOrMore(rEString29);
        st1920.automaton.RegExpMatcher regExpMatcher31 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString32 = null;
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher31.repeatZeroOrMore(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher31.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher36 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString37 = null;
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher36.repeatZeroOrMore(rEString37);
        st1920.automaton.RegExpMatcher regExpMatcher39 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString40 = null;
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher39.repeatZeroOrMore(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher39.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher44 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString45 = null;
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher44.repeatZeroOrMore(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher44.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher39.matchesAnyChar(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher36.makeParenthesis(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher31.matchesAnyChar(rEString49);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher31.repeatOneOrMore(rEString54);
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher28.matchesNOrMoreOccurences(rEString55, 100);
        java.lang.String str58 = rEString57.getString();
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher0.matchesNOccurences(rEString57, (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
    }

    @Test
    public void test231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test231");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString7 = regExpMatcher0.makeConcatenation("[^hi!]", "hi!hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesNumBetweenNandM((-1), 0);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher11.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher15 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString16 = null;
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher15.repeatZeroOrMore(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher15.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher regExpMatcher23 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString24 = null;
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher23.repeatZeroOrMore(rEString24);
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher23.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString29 = null;
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.repeatZeroOrMore(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher28.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher23.matchesAnyChar(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher20.makeParenthesis(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher15.matchesAnyChar(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher11.repeatZeroOrOne(rEString33);
        st1920.automaton.RegExpMatcher regExpMatcher37 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString38 = null;
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher37.repeatZeroOrMore(rEString38);
        st1920.automaton.RegExpMatcher regExpMatcher40 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString41 = null;
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher40.repeatZeroOrMore(rEString41);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher40.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher45 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString46 = null;
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher45.repeatZeroOrMore(rEString46);
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher45.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher40.matchesAnyChar(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher37.makeParenthesis(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher37.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher0.followPattern(rEString36, rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
    }

    @Test
    public void test232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test232");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher10 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString11 = null;
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher10.repeatZeroOrMore(rEString11);
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher10.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher5.matchesAnyChar(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher5.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher17.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher30 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString31 = null;
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher30.repeatZeroOrMore(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher30.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher25.matchesAnyChar(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher22.makeParenthesis(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher17.matchesAnyChar(rEString35);
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher17.repeatOneOrMore(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher5.matchesNToMOccurences(rEString41, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher5.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher5.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher5.matchesNumBetweenNandM(1, (int) (short) -1);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher0.makeParenthesis(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString53 = new st1920.automaton.RegExpMatcher.REString("[^hi!]");
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher0.excludePattern(rEString53);
        st1920.automaton.RegExpMatcher.MatchString matchString55 = regExpMatcher0.makeNum();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
    }

    @Test
    public void test233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test233");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher3.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher0.repeatOneOrMore(rEString7);
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher9.matchesAnyChar(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher0.repeatOneOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher19.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher23 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString24 = null;
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher23.repeatZeroOrMore(rEString24);
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher23.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher23.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher32.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher37 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString38 = null;
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher37.repeatZeroOrMore(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher37.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher32.matchesAnyChar(rEString41);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher29.makeParenthesis(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher23.matchesAnyChar(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher23.matchesNoChar();
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString47 = null;
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.repeatZeroOrMore(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher46.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher51 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString52 = null;
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher51.repeatZeroOrMore(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher51.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString57 = null;
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.repeatZeroOrMore(rEString57);
        st1920.automaton.RegExpMatcher regExpMatcher59 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString60 = null;
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher59.repeatZeroOrMore(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher59.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher64 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString65 = null;
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher64.repeatZeroOrMore(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher64.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher59.matchesAnyChar(rEString68);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher56.makeParenthesis(rEString69);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher51.matchesAnyChar(rEString69);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher46.matchesAnyChar(rEString71);
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher23.repeatZeroOrOne(rEString72);
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher0.eitherPattern(rEString22, rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
    }

    @Test
    public void test234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test234");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString6 = regExpMatcher0.makeConcatenation("hi!", "hi!");
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher0.matchesNoBracketChars("1");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher11.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher19.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher11.excludePattern(rEString22);
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher regExpMatcher27 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString28 = null;
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher27.repeatZeroOrMore(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher27.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher35.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher40 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString41 = null;
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher40.repeatZeroOrMore(rEString41);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher40.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher35.matchesAnyChar(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher32.makeParenthesis(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher27.matchesAnyChar(rEString45);
        st1920.automaton.RegExpMatcher regExpMatcher48 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher48.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher27.repeatOneOrMore(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher24.matchesNOrMoreOccurences(rEString51, 100);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher11.matchesNOccurences(rEString53, 0);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher0.repeatZeroOrOne(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
    }

    @Test
    public void test235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test235");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.MatchString matchString13 = regExpMatcher0.makeConcatenation("hi!hi!", "[^hi!]");
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString15 = null;
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.repeatZeroOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher14.matchesAnyChar(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher14.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher26.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher31 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString32 = null;
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher31.repeatZeroOrMore(rEString32);
        st1920.automaton.RegExpMatcher regExpMatcher34 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = null;
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher34.repeatZeroOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher34.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher39 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString40 = null;
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher39.repeatZeroOrMore(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher39.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher34.matchesAnyChar(rEString43);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher31.makeParenthesis(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher26.matchesAnyChar(rEString44);
        st1920.automaton.RegExpMatcher regExpMatcher47 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher47.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher26.repeatOneOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher14.matchesNToMOccurences(rEString50, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher14.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher14.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher0.makeParenthesis(rEString56);
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher0.matchesBracketChars("[^hi!]hi!hi!");
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher regExpMatcher62 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString63 = null;
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher62.repeatZeroOrMore(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher62.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher67 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString68 = null;
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher67.repeatZeroOrMore(rEString68);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher67.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher62.matchesAnyChar(rEString71);
        st1920.automaton.RegExpMatcher regExpMatcher73 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher73.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString76 = null;
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher73.repeatZeroOrMore(rEString76);
        st1920.automaton.RegExpMatcher regExpMatcher78 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString79 = null;
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher78.repeatZeroOrMore(rEString79);
        st1920.automaton.RegExpMatcher regExpMatcher81 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString82 = null;
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher81.repeatZeroOrMore(rEString82);
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher81.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher86 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString87 = null;
        st1920.automaton.RegExpMatcher.REString rEString88 = regExpMatcher86.repeatZeroOrMore(rEString87);
        st1920.automaton.RegExpMatcher.REString rEString90 = regExpMatcher86.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString91 = regExpMatcher81.matchesAnyChar(rEString90);
        st1920.automaton.RegExpMatcher.REString rEString92 = regExpMatcher78.makeParenthesis(rEString91);
        st1920.automaton.RegExpMatcher.REString rEString93 = regExpMatcher62.eitherPattern(rEString76, rEString92);
        st1920.automaton.RegExpMatcher.REString rEString94 = regExpMatcher0.excludePattern(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
    }

    @Test
    public void test236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test236");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString8 = regExpMatcher0.makeConcatenation("", "1");
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher9.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString15 = regExpMatcher9.makeNum();
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher16.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher21.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher16.matchesAnyChar(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher9.repeatOneOrMore(rEString25);
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString29 = null;
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.repeatZeroOrMore(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher28.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher28.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher9.repeatZeroOrOne(rEString33);
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher35.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher35.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher9.excludePattern(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher0.matchesNToMOccurences(rEString40, 10, 1);
        st1920.automaton.RegExpMatcher.MatchString matchString46 = regExpMatcher0.makeConcatenation("[^hi!]hi!hi!", "hi!");
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher0.matchesAnyString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
    }

    @Test
    public void test237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test237");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher20.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher17.makeParenthesis(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher12.matchesAnyChar(rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher12.repeatOneOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher0.matchesNToMOccurences(rEString36, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher0.matchesBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher0.makeAlphareg();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
    }

    @Test
    public void test238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test238");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher3.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher3.matchesAnyChar(rEString12);
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher22.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher27 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString28 = null;
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher27.repeatZeroOrMore(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher27.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher22.matchesAnyChar(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher19.makeParenthesis(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher3.eitherPattern(rEString17, rEString33);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher0.repeatOneOrMore(rEString17);
        st1920.automaton.RegExpMatcher.MatchString matchString38 = regExpMatcher0.makeConcatenation("hi!", "");
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher regExpMatcher40 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString41 = null;
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher40.repeatZeroOrMore(rEString41);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher40.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher45 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString46 = null;
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher45.repeatZeroOrMore(rEString46);
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher45.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher40.matchesAnyChar(rEString49);
        st1920.automaton.RegExpMatcher regExpMatcher51 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher51.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString54 = null;
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher51.repeatZeroOrMore(rEString54);
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString57 = null;
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.repeatZeroOrMore(rEString57);
        st1920.automaton.RegExpMatcher regExpMatcher59 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString60 = null;
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher59.repeatZeroOrMore(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher59.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher64 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString65 = null;
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher64.repeatZeroOrMore(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher64.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher59.matchesAnyChar(rEString68);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher56.makeParenthesis(rEString69);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher40.eitherPattern(rEString54, rEString70);
        st1920.automaton.RegExpMatcher.MatchString matchString74 = regExpMatcher40.makeConcatenation("", "");
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher40.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher40.matchesString("hi!");
        st1920.automaton.RegExpMatcher.MatchString matchString81 = regExpMatcher40.makeConcatenation("[^hi!]hi!hi!", "hi!hi!");
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher40.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher0.matchesNToMOccurences(rEString82, (int) (byte) 10, (int) (short) -1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
    }

    @Test
    public void test239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test239");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher6.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher6.matchesAnyChar(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher3.makeParenthesis(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher0.matchesNOrMoreOccurences(rEString16, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.MatchString matchString23 = regExpMatcher0.makeConcatenation("[^hi!]hi!hi!", "<10-1>");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher regExpMatcher27 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString28 = null;
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher27.repeatZeroOrMore(rEString28);
        st1920.automaton.RegExpMatcher regExpMatcher30 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString31 = null;
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher30.repeatZeroOrMore(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher30.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher35.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher30.matchesAnyChar(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher27.makeParenthesis(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher24.matchesNOrMoreOccurences(rEString40, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher0.repeatZeroOrOne(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
    }

    @Test
    public void test240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test240");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString6 = regExpMatcher0.makeConcatenation("hi!", "hi!");
        st1920.automaton.RegExpMatcher.MatchString matchString7 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.REString rEString8 = null;
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString15 = null;
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.repeatZeroOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher9.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher9.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher21.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher29.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher34 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = null;
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher34.repeatZeroOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher34.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher29.matchesAnyChar(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher26.makeParenthesis(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher21.matchesAnyChar(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher42 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher42.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher21.repeatOneOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher9.matchesNToMOccurences(rEString45, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher9.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher9.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher9.matchesNumBetweenNandM(1, (int) (short) -1);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher9.matchesString("");
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher0.followPattern(rEString8, rEString56);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher0.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher.MatchString matchString63 = regExpMatcher0.makeConcatenation("[^hi!]hi!hi!", "hi!hi!");
        java.lang.Class<?> wildcardClass64 = regExpMatcher0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test241");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher regExpMatcher1 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString2 = null;
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher1.repeatZeroOrMore(rEString2);
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher1.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher1.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher0.makeParenthesis(rEString8);
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher11.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher15 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString16 = null;
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher15.repeatZeroOrMore(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher15.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher15.matchesAnyChar(rEString24);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher15.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher27 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString28 = null;
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher27.repeatZeroOrMore(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher27.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher35.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher40 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString41 = null;
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher40.repeatZeroOrMore(rEString41);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher40.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher35.matchesAnyChar(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher32.makeParenthesis(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher27.matchesAnyChar(rEString45);
        st1920.automaton.RegExpMatcher regExpMatcher48 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher48.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher27.repeatOneOrMore(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher15.matchesNToMOccurences(rEString51, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher15.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher15.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher11.matchesNToMOccurences(rEString57, (int) (byte) 10, (int) ' ');
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher11.makeAlphareg();
        st1920.automaton.RegExpMatcher.MatchString matchString62 = regExpMatcher11.makeNum();
        st1920.automaton.RegExpMatcher.MatchString matchString65 = regExpMatcher11.makeConcatenation("hi!", "");
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher11.matchesString("[^hi!]");
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher11.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher0.repeatOneOrMore(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
    }

    @Test
    public void test242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test242");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher4 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString5 = null;
        st1920.automaton.RegExpMatcher.REString rEString6 = regExpMatcher4.repeatZeroOrMore(rEString5);
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher4.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher4.matchesAnyChar(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher4.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher16.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher29.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher24.matchesAnyChar(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher21.makeParenthesis(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher16.matchesAnyChar(rEString34);
        st1920.automaton.RegExpMatcher regExpMatcher37 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher37.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher16.repeatOneOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher4.matchesNToMOccurences(rEString40, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher4.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher4.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher0.matchesNToMOccurences(rEString46, (int) (byte) 10, (int) ' ');
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.MatchString matchString51 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.MatchString matchString54 = regExpMatcher0.makeConcatenation("hi!", "");
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher0.matchesString("[^hi!]");
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher0.matchesString("[^]");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
    }

    @Test
    public void test243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test243");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString15 = null;
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.repeatZeroOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher9.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher6.makeParenthesis(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesAnyChar(rEString19);
        st1920.automaton.RegExpMatcher.MatchString matchString22 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher0.matchesString("1");
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher0.makeNumreg();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
    }

    @Test
    public void test244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test244");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher17.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher12.matchesAnyChar(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher12.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString26 = regExpMatcher12.makeConcatenation("hi!", "hi!");
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher12.matchesBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher12.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher0.repeatOneOrMore(rEString29);
        st1920.automaton.RegExpMatcher regExpMatcher31 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString32 = null;
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher31.repeatZeroOrMore(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher31.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher36 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString37 = null;
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher36.repeatZeroOrMore(rEString37);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher36.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher31.matchesAnyChar(rEString40);
        st1920.automaton.RegExpMatcher regExpMatcher42 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher42.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString45 = null;
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher42.repeatZeroOrMore(rEString45);
        st1920.automaton.RegExpMatcher regExpMatcher47 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = null;
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher47.repeatZeroOrMore(rEString48);
        st1920.automaton.RegExpMatcher regExpMatcher50 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString51 = null;
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher50.repeatZeroOrMore(rEString51);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher50.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher55 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString56 = null;
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher55.repeatZeroOrMore(rEString56);
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher55.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher50.matchesAnyChar(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher47.makeParenthesis(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher31.eitherPattern(rEString45, rEString61);
        st1920.automaton.RegExpMatcher regExpMatcher63 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher63.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher31.repeatZeroOrMore(rEString65);
        st1920.automaton.RegExpMatcher.MatchString matchString67 = regExpMatcher31.makeAlpha();
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher31.matchesBracketChars("[^hi!]");
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher31.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher0.matchesNToMOccurences(rEString70, 100, (int) (short) 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
    }

    @Test
    public void test245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test245");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher0.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher.MatchString matchString36 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher0.matchesBracketChars("[^hi!]");
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher40 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString41 = null;
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher40.repeatZeroOrMore(rEString41);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher40.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher45 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString46 = null;
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher45.repeatZeroOrMore(rEString46);
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher45.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher40.matchesAnyChar(rEString49);
        st1920.automaton.RegExpMatcher regExpMatcher51 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher51.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString54 = null;
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher51.repeatZeroOrMore(rEString54);
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString57 = null;
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.repeatZeroOrMore(rEString57);
        st1920.automaton.RegExpMatcher regExpMatcher59 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString60 = null;
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher59.repeatZeroOrMore(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher59.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher64 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString65 = null;
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher64.repeatZeroOrMore(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher64.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher59.matchesAnyChar(rEString68);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher56.makeParenthesis(rEString69);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher40.eitherPattern(rEString54, rEString70);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher0.excludePattern(rEString71);
        java.lang.Class<?> wildcardClass73 = regExpMatcher0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test246");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString6 = regExpMatcher0.matchesBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher7 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString8 = null;
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher7.repeatZeroOrMore(rEString8);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher7.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher7.matchesAnyChar(rEString16);
        st1920.automaton.RegExpMatcher regExpMatcher18 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher18.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher18.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher regExpMatcher23 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString24 = null;
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher23.repeatZeroOrMore(rEString24);
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher26.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher31 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString32 = null;
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher31.repeatZeroOrMore(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher31.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher26.matchesAnyChar(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher23.makeParenthesis(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher7.eitherPattern(rEString21, rEString37);
        st1920.automaton.RegExpMatcher.MatchString matchString41 = regExpMatcher7.makeConcatenation("", "");
        st1920.automaton.RegExpMatcher.MatchString matchString42 = regExpMatcher7.makeAlpha();
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher7.matchesNumBetweenNandM((int) (short) 1, (int) (short) 1);
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher7.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher0.excludePattern(rEString46);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher0.makeNumreg();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
    }

    @Test
    public void test247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test247");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesString("[^hi!]hi!hi!");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher8.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString29 = null;
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.repeatZeroOrMore(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher28.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = null;
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher33.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher28.matchesAnyChar(rEString37);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher25.makeParenthesis(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher20.matchesAnyChar(rEString38);
        st1920.automaton.RegExpMatcher regExpMatcher41 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher41.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher20.repeatOneOrMore(rEString43);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher8.matchesNToMOccurences(rEString44, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher8.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher8.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher8.matchesString("hi!");
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher0.matchesNToMOccurences(rEString51, (int) (byte) 10, (int) (short) -1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
    }

    @Test
    public void test248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test248");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher4 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString5 = null;
        st1920.automaton.RegExpMatcher.REString rEString6 = regExpMatcher4.repeatZeroOrMore(rEString5);
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher4.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher4.matchesAnyChar(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher4.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher16.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher29.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher24.matchesAnyChar(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher21.makeParenthesis(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher16.matchesAnyChar(rEString34);
        st1920.automaton.RegExpMatcher regExpMatcher37 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher37.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher16.repeatOneOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher4.matchesNToMOccurences(rEString40, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher4.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher4.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher0.matchesNToMOccurences(rEString46, (int) (byte) 10, (int) ' ');
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher0.makeAlphareg();
        java.lang.String str51 = rEString50.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "a" + "'", str51.equals("a"));
    }

    @Test
    public void test249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test249");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher0.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher.MatchString matchString36 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher regExpMatcher37 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString38 = null;
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher37.repeatZeroOrMore(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher37.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher42 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString43 = null;
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher42.repeatZeroOrMore(rEString43);
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher42.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher37.matchesAnyChar(rEString46);
        st1920.automaton.RegExpMatcher regExpMatcher48 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher48.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString51 = null;
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher48.repeatZeroOrMore(rEString51);
        st1920.automaton.RegExpMatcher regExpMatcher53 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString54 = null;
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher53.repeatZeroOrMore(rEString54);
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString57 = null;
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.repeatZeroOrMore(rEString57);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher56.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher61 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString62 = null;
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher61.repeatZeroOrMore(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher61.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher56.matchesAnyChar(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher53.makeParenthesis(rEString66);
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher37.eitherPattern(rEString51, rEString67);
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher0.repeatOneOrMore(rEString68);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher0.matchesNumBetweenNandM((int) (byte) 100, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher0.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.MatchString matchString77 = regExpMatcher0.makeConcatenation("hi!hi!", "null*");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString77);
    }

    @Test
    public void test250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test250");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString6 = regExpMatcher0.makeConcatenation("hi!", "hi!");
        st1920.automaton.RegExpMatcher.MatchString matchString7 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher regExpMatcher27 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString28 = null;
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher27.repeatZeroOrMore(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher27.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher32.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher27.matchesAnyChar(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher24.makeParenthesis(rEString37);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher8.eitherPattern(rEString22, rEString38);
        st1920.automaton.RegExpMatcher regExpMatcher40 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher40.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher8.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher0.makeParenthesis(rEString43);
        st1920.automaton.RegExpMatcher regExpMatcher45 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString46 = null;
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher45.repeatZeroOrMore(rEString46);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher45.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher45.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString50 = regExpMatcher45.makeNum();
        st1920.automaton.RegExpMatcher.MatchString matchString53 = regExpMatcher45.makeConcatenation("@", "[^hi!]hi!hi!");
        st1920.automaton.RegExpMatcher regExpMatcher54 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString55 = null;
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher54.repeatZeroOrMore(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher54.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher54.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString60 = regExpMatcher54.makeNum();
        st1920.automaton.RegExpMatcher regExpMatcher61 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString62 = null;
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher61.repeatZeroOrMore(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher61.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher66 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString67 = null;
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher66.repeatZeroOrMore(rEString67);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher66.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher61.matchesAnyChar(rEString70);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher54.repeatOneOrMore(rEString70);
        st1920.automaton.RegExpMatcher regExpMatcher73 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString74 = null;
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher73.repeatZeroOrMore(rEString74);
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher73.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher73.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher54.repeatZeroOrOne(rEString78);
        st1920.automaton.RegExpMatcher regExpMatcher80 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString81 = null;
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher80.repeatZeroOrMore(rEString81);
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher80.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher80.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher54.excludePattern(rEString84);
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher45.repeatOneOrMore(rEString85);
        st1920.automaton.RegExpMatcher.REString rEString87 = regExpMatcher0.matchesAnyChar(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
    }

    @Test
    public void test251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test251");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher3.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher3.matchesAnyChar(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher0.makeParenthesis(rEString13);
        st1920.automaton.RegExpMatcher regExpMatcher15 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString16 = null;
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher15.repeatZeroOrMore(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher15.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher regExpMatcher23 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString24 = null;
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher23.repeatZeroOrMore(rEString24);
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher23.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString29 = null;
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.repeatZeroOrMore(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher28.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher23.matchesAnyChar(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher20.makeParenthesis(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher15.matchesAnyChar(rEString33);
        st1920.automaton.RegExpMatcher regExpMatcher36 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString37 = null;
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher36.repeatZeroOrMore(rEString37);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher36.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher41 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = null;
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher41.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher41.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher36.matchesAnyChar(rEString45);
        st1920.automaton.RegExpMatcher regExpMatcher47 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher47.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString50 = null;
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher47.repeatZeroOrMore(rEString50);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = null;
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.repeatZeroOrMore(rEString53);
        st1920.automaton.RegExpMatcher regExpMatcher55 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString56 = null;
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher55.repeatZeroOrMore(rEString56);
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher55.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher60 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString61 = null;
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher60.repeatZeroOrMore(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher60.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher55.matchesAnyChar(rEString64);
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher52.makeParenthesis(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher36.eitherPattern(rEString50, rEString66);
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher0.eitherPattern(rEString33, rEString67);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher0.matchesBracketChars("[^[^hi!]]");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
    }

    @Test
    public void test252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test252");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher20.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher17.makeParenthesis(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher12.matchesAnyChar(rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher12.repeatOneOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher0.matchesNToMOccurences(rEString36, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher0.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher0.matchesNumBetweenNandM(1, (int) (short) -1);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher0.matchesString("");
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher0.matchesBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher0.matchesNumBetweenNandM((int) (short) 10, 1);
        st1920.automaton.RegExpMatcher.MatchString matchString53 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher0.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString57 = null;
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.repeatZeroOrMore(rEString57);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher56.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher56.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher62 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher62.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher65 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString66 = null;
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher65.repeatZeroOrMore(rEString66);
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher65.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher62.matchesAnyChar(rEString69);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher62.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher56.repeatOneOrMore(rEString71);
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher56.matchesBracketChars("1");
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher56.matchesNumBetweenNandM((int) (byte) -1, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher56.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher0.excludePattern(rEString78);
        st1920.automaton.RegExpMatcher.MatchString matchString80 = regExpMatcher0.makeNum();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString80);
    }

    @Test
    public void test253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test253");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher0.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher.MatchString matchString36 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher0.matchesBracketChars("[^hi!]");
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher40 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString41 = null;
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher40.repeatZeroOrMore(rEString41);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher40.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher45 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString46 = null;
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher45.repeatZeroOrMore(rEString46);
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher45.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher40.matchesAnyChar(rEString49);
        st1920.automaton.RegExpMatcher regExpMatcher51 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher51.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString54 = null;
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher51.repeatZeroOrMore(rEString54);
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString57 = null;
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.repeatZeroOrMore(rEString57);
        st1920.automaton.RegExpMatcher regExpMatcher59 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString60 = null;
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher59.repeatZeroOrMore(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher59.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher64 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString65 = null;
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher64.repeatZeroOrMore(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher64.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher59.matchesAnyChar(rEString68);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher56.makeParenthesis(rEString69);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher40.eitherPattern(rEString54, rEString70);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher0.excludePattern(rEString71);
        java.lang.String str73 = rEString72.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
    }

    @Test
    public void test254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test254");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher5.makeParenthesis(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher0.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher21.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher29.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher34 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = null;
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher34.repeatZeroOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher34.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher29.matchesAnyChar(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher26.makeParenthesis(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher21.matchesAnyChar(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher42 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher42.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher21.repeatOneOrMore(rEString44);
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher0.eitherPattern(rEString44, rEString49);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher55 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString56 = null;
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher55.repeatZeroOrMore(rEString56);
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher55.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher52.matchesAnyChar(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher52.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher62 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString63 = null;
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher62.repeatZeroOrMore(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher62.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher62.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher0.eitherPattern(rEString61, rEString69);
        st1920.automaton.RegExpMatcher regExpMatcher71 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString72 = null;
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher71.repeatZeroOrMore(rEString72);
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher71.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString77 = regExpMatcher71.makeConcatenation("hi!", "hi!");
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher71.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher71.matchesNoBracketChars("1");
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher0.matchesNToMOccurences(rEString80, 10, (int) (short) 100);
        java.lang.String str84 = rEString80.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str84 + "' != '" + "[^1]" + "'", str84.equals("[^1]"));
    }

    @Test
    public void test255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test255");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher35.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher40 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString41 = null;
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher40.repeatZeroOrMore(rEString41);
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher48 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher48.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher48.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher43.matchesAnyChar(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher40.makeParenthesis(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher35.matchesAnyChar(rEString53);
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher35.repeatOneOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher32.matchesNOrMoreOccurences(rEString59, 100);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher0.matchesAnyChar(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher0.matchesString("");
        st1920.automaton.RegExpMatcher regExpMatcher65 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher65.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher68 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString69 = null;
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher68.repeatZeroOrMore(rEString69);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher68.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher65.matchesAnyChar(rEString72);
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher0.repeatOneOrMore(rEString72);
        st1920.automaton.RegExpMatcher.MatchString matchString77 = regExpMatcher0.makeConcatenation("", "a");
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString81 = regExpMatcher0.makeConcatenation("1", "null*");
        st1920.automaton.RegExpMatcher regExpMatcher82 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString83 = null;
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher82.repeatZeroOrMore(rEString83);
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher82.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString88 = regExpMatcher82.makeConcatenation("hi!", "hi!");
        st1920.automaton.RegExpMatcher.REString rEString90 = regExpMatcher82.matchesString("[^hi!]hi!hi!");
        st1920.automaton.RegExpMatcher.REString rEString91 = regExpMatcher82.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString92 = regExpMatcher0.matchesAnyChar(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
    }

    @Test
    public void test256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test256");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher6.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher6.matchesAnyChar(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher3.makeParenthesis(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher0.matchesNOrMoreOccurences(rEString16, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher22.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher27 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString28 = null;
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher27.repeatZeroOrMore(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher27.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher22.matchesAnyChar(rEString31);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher33.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher41 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = null;
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher41.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher41.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString47 = null;
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.repeatZeroOrMore(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher41.matchesAnyChar(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher38.makeParenthesis(rEString51);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher22.eitherPattern(rEString36, rEString52);
        st1920.automaton.RegExpMatcher regExpMatcher54 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString55 = null;
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher54.repeatZeroOrMore(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher54.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher59 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString60 = null;
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher59.repeatZeroOrMore(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher59.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher54.matchesAnyChar(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher54.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher22.makeParenthesis(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher0.repeatZeroOrMore(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher0.matchesNoChar();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
    }

    @Test
    public void test257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test257");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString6 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher regExpMatcher7 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString8 = null;
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher7.repeatZeroOrMore(rEString8);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher7.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher7.matchesAnyChar(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher0.repeatOneOrMore(rEString16);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher30 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString31 = null;
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher30.repeatZeroOrMore(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher30.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher25.matchesAnyChar(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher22.makeParenthesis(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher19.matchesNOrMoreOccurences(rEString35, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher0.matchesNOccurences(rEString35, (int) (short) 1);
        st1920.automaton.RegExpMatcher regExpMatcher41 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = null;
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher41.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher41.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher41.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher regExpMatcher49 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher49.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = null;
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.repeatZeroOrMore(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher52.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher49.matchesAnyChar(rEString56);
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher41.repeatZeroOrMore(rEString57);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher0.matchesNToMOccurences(rEString57, (int) (short) 100, (int) (byte) 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
    }

    @Test
    public void test258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test258");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher10 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString11 = null;
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher10.repeatZeroOrMore(rEString11);
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher10.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher5.matchesAnyChar(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher5.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher17.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher30 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString31 = null;
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher30.repeatZeroOrMore(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher30.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher25.matchesAnyChar(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher22.makeParenthesis(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher17.matchesAnyChar(rEString35);
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher17.repeatOneOrMore(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher5.matchesNToMOccurences(rEString41, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher5.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher5.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher5.matchesNumBetweenNandM(1, (int) (short) -1);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher0.makeParenthesis(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.MatchString matchString55 = regExpMatcher0.makeConcatenation("", "1");
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = new st1920.automaton.RegExpMatcher.REString("");
        st1920.automaton.RegExpMatcher regExpMatcher59 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher59.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher59.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher56.bothPatterns(rEString58, rEString62);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher0.repeatZeroOrMore(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher0.matchesBracketChars("[^hi!]hi!hi!");
        st1920.automaton.RegExpMatcher.MatchString matchString69 = regExpMatcher0.makeConcatenation("", "");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString69);
    }

    @Test
    public void test259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test259");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher35.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher40 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString41 = null;
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher40.repeatZeroOrMore(rEString41);
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher48 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher48.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher48.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher43.matchesAnyChar(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher40.makeParenthesis(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher35.matchesAnyChar(rEString53);
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher35.repeatOneOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher32.matchesNOrMoreOccurences(rEString59, 100);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher0.matchesAnyChar(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher0.matchesString("");
        st1920.automaton.RegExpMatcher regExpMatcher65 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher65.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher68 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString69 = null;
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher68.repeatZeroOrMore(rEString69);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher68.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher65.matchesAnyChar(rEString72);
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher0.repeatOneOrMore(rEString72);
        st1920.automaton.RegExpMatcher.MatchString matchString77 = regExpMatcher0.makeConcatenation("", "a");
        java.lang.Class<?> wildcardClass78 = regExpMatcher0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test260");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesBracketChars("a");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher11.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher11.repeatOneOrMore(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher8.matchesNOrMoreOccurences(rEString35, 100);
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher38.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString47 = null;
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.repeatZeroOrMore(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher51 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString52 = null;
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher51.repeatZeroOrMore(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher51.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher46.matchesAnyChar(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher43.makeParenthesis(rEString56);
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher38.matchesAnyChar(rEString56);
        st1920.automaton.RegExpMatcher regExpMatcher59 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString60 = null;
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher59.repeatZeroOrMore(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher59.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher64 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString65 = null;
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher64.repeatZeroOrMore(rEString65);
        st1920.automaton.RegExpMatcher regExpMatcher67 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString68 = null;
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher67.repeatZeroOrMore(rEString68);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher67.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher72 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString73 = null;
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher72.repeatZeroOrMore(rEString73);
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher72.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher67.matchesAnyChar(rEString76);
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher64.makeParenthesis(rEString77);
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher59.matchesAnyChar(rEString77);
        st1920.automaton.RegExpMatcher regExpMatcher80 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher80.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher59.repeatOneOrMore(rEString82);
        st1920.automaton.RegExpMatcher regExpMatcher84 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher84.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString87 = null;
        st1920.automaton.RegExpMatcher.REString rEString88 = regExpMatcher84.repeatZeroOrMore(rEString87);
        st1920.automaton.RegExpMatcher.REString rEString89 = regExpMatcher38.eitherPattern(rEString82, rEString87);
        st1920.automaton.RegExpMatcher.REString rEString90 = regExpMatcher8.repeatOneOrMore(rEString87);
        st1920.automaton.RegExpMatcher.REString rEString91 = regExpMatcher8.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString92 = regExpMatcher0.makeParenthesis(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
    }

    @Test
    public void test261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test261");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher6.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher6.matchesAnyChar(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher3.makeParenthesis(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher0.matchesNOrMoreOccurences(rEString16, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher22.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher27 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString28 = null;
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher27.repeatZeroOrMore(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher27.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher22.matchesAnyChar(rEString31);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher33.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher41 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = null;
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher41.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher41.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString47 = null;
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.repeatZeroOrMore(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher41.matchesAnyChar(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher38.makeParenthesis(rEString51);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher22.eitherPattern(rEString36, rEString52);
        st1920.automaton.RegExpMatcher regExpMatcher54 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString55 = null;
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher54.repeatZeroOrMore(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher54.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher59 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString60 = null;
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher59.repeatZeroOrMore(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher59.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher54.matchesAnyChar(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher54.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher22.makeParenthesis(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher0.repeatZeroOrMore(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher0.matchesBracketChars("[^hi!]");
        st1920.automaton.RegExpMatcher regExpMatcher70 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString71 = null;
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher70.repeatZeroOrMore(rEString71);
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher70.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher75 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString76 = null;
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher75.repeatZeroOrMore(rEString76);
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher75.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher70.matchesAnyChar(rEString79);
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher70.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher0.makeParenthesis(rEString81);
        st1920.automaton.RegExpMatcher.MatchString matchString83 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher0.makeNumreg();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
    }

    @Test
    public void test262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test262");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher.MatchString matchString8 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString15 = null;
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.repeatZeroOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher9.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString29 = null;
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.repeatZeroOrMore(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher28.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = null;
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher33.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher28.matchesAnyChar(rEString37);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher25.makeParenthesis(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher9.eitherPattern(rEString23, rEString39);
        st1920.automaton.RegExpMatcher.MatchString matchString43 = regExpMatcher9.makeConcatenation("", "");
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher9.matchesString("hi!");
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher0.matchesNOrMoreOccurences(rEString47, (int) (byte) 1);
        st1920.automaton.RegExpMatcher.MatchString matchString50 = regExpMatcher0.makeNum();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
    }

    @Test
    public void test263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test263");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString5 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.MatchString matchString8 = regExpMatcher0.makeConcatenation("@", "[^hi!]hi!hi!");
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher9.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher18 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString19 = null;
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher18.repeatZeroOrMore(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher18.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher13.matchesAnyChar(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher13.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher30 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString31 = null;
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher30.repeatZeroOrMore(rEString31);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = null;
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher33.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher38.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher33.matchesAnyChar(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher30.makeParenthesis(rEString43);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher25.matchesAnyChar(rEString43);
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher25.repeatOneOrMore(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher13.matchesNToMOccurences(rEString49, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher13.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher13.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher9.matchesNToMOccurences(rEString55, (int) (byte) 10, (int) ' ');
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher9.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher60 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString61 = null;
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher60.repeatZeroOrMore(rEString61);
        st1920.automaton.RegExpMatcher regExpMatcher63 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString64 = null;
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher63.repeatZeroOrMore(rEString64);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher63.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher68 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString69 = null;
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher68.repeatZeroOrMore(rEString69);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher68.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher63.matchesAnyChar(rEString72);
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher60.makeParenthesis(rEString73);
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher60.matchesString("#");
        st1920.automaton.RegExpMatcher regExpMatcher77 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString78 = null;
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher77.repeatZeroOrMore(rEString78);
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher77.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher9.bothPatterns(rEString76, rEString80);
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher9.matchesString("@");
        st1920.automaton.RegExpMatcher.REString rEString85 = new st1920.automaton.RegExpMatcher.REString("");
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher9.matchesAnyChar(rEString85);
        st1920.automaton.RegExpMatcher.REString rEString87 = regExpMatcher0.matchesAnyChar(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
    }

    @Test
    public void test264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test264");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher6.matchesAnyChar(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher6.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher0.repeatOneOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher0.matchesBracketChars("1");
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher0.matchesNoBracketChars("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
    }

    @Test
    public void test265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test265");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher3.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher16.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher11.matchesAnyChar(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher8.makeParenthesis(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher3.matchesAnyChar(rEString21);
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher3.repeatOneOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher0.matchesNOrMoreOccurences(rEString27, 100);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.matchesNoBracketChars("[^hi!]");
        st1920.automaton.RegExpMatcher.MatchString matchString32 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = null;
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher regExpMatcher36 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString37 = null;
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher36.repeatZeroOrMore(rEString37);
        st1920.automaton.RegExpMatcher regExpMatcher39 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString40 = null;
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher39.repeatZeroOrMore(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher39.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher44 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString45 = null;
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher44.repeatZeroOrMore(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher44.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher39.matchesAnyChar(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher36.makeParenthesis(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher33.matchesNOrMoreOccurences(rEString49, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher33.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher33.matchesNoChar();
        boolean boolean56 = st1920.automaton.RegExpMatcher.matches(matchString32, rEString55);
        st1920.automaton.RegExpMatcher regExpMatcher57 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = null;
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher57.repeatZeroOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher57.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher57.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString63 = regExpMatcher57.makeNum();
        st1920.automaton.RegExpMatcher regExpMatcher64 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString65 = null;
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher64.repeatZeroOrMore(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher64.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher69 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString70 = null;
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher69.repeatZeroOrMore(rEString70);
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher69.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher64.matchesAnyChar(rEString73);
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher57.repeatOneOrMore(rEString73);
        st1920.automaton.RegExpMatcher regExpMatcher76 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString77 = null;
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher76.repeatZeroOrMore(rEString77);
        st1920.automaton.RegExpMatcher regExpMatcher79 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString80 = null;
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher79.repeatZeroOrMore(rEString80);
        st1920.automaton.RegExpMatcher regExpMatcher82 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString83 = null;
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher82.repeatZeroOrMore(rEString83);
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher82.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher87 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString88 = null;
        st1920.automaton.RegExpMatcher.REString rEString89 = regExpMatcher87.repeatZeroOrMore(rEString88);
        st1920.automaton.RegExpMatcher.REString rEString91 = regExpMatcher87.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString92 = regExpMatcher82.matchesAnyChar(rEString91);
        st1920.automaton.RegExpMatcher.REString rEString93 = regExpMatcher79.makeParenthesis(rEString92);
        st1920.automaton.RegExpMatcher.REString rEString95 = regExpMatcher76.matchesNOrMoreOccurences(rEString92, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString97 = regExpMatcher57.matchesNOccurences(rEString92, (int) (short) 1);
        boolean boolean98 = st1920.automaton.RegExpMatcher.matches(matchString32, rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test266");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher18 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString19 = null;
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher18.repeatZeroOrMore(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher18.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher13.matchesAnyChar(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher13.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher30 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString31 = null;
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher30.repeatZeroOrMore(rEString31);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = null;
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher33.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher38.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher33.matchesAnyChar(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher30.makeParenthesis(rEString43);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher25.matchesAnyChar(rEString43);
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher25.repeatOneOrMore(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher13.matchesNToMOccurences(rEString49, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher13.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher13.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher13.matchesNumBetweenNandM(1, (int) (short) -1);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher13.matchesString("");
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher13.matchesBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher13.matchesNumBetweenNandM((int) (short) 10, 1);
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher13.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher13.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher0.repeatOneOrMore(rEString67);
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher0.matchesAnyString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
    }

    @Test
    public void test267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test267");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString13 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.MatchString matchString14 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher.MatchString matchString16 = regExpMatcher0.makeAlpha();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
    }

    @Test
    public void test268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test268");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesString("[^hi!]hi!hi!");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher8.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher20.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher31 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString32 = null;
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher31.repeatZeroOrMore(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher31.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher28.matchesAnyChar(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher20.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher20.matchesNumBetweenNandM(0, (int) ' ');
        st1920.automaton.RegExpMatcher regExpMatcher41 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = null;
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher41.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher41.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher41.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString47 = null;
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.repeatZeroOrMore(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher51 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString52 = null;
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher51.repeatZeroOrMore(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher51.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher46.matchesAnyChar(rEString55);
        java.lang.String str57 = rEString55.getString();
        st1920.automaton.RegExpMatcher regExpMatcher58 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString59 = null;
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher58.repeatZeroOrMore(rEString59);
        st1920.automaton.RegExpMatcher regExpMatcher61 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString62 = null;
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher61.repeatZeroOrMore(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher61.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher66 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString67 = null;
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher66.repeatZeroOrMore(rEString67);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher66.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher61.matchesAnyChar(rEString70);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher58.makeParenthesis(rEString71);
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher41.bothPatterns(rEString55, rEString72);
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher20.repeatZeroOrMore(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher8.makeParenthesis(rEString55);
        st1920.automaton.RegExpMatcher regExpMatcher76 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString77 = null;
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher76.repeatZeroOrMore(rEString77);
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher76.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher81 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString82 = null;
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher81.repeatZeroOrMore(rEString82);
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher81.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher76.matchesAnyChar(rEString85);
        java.lang.String str87 = rEString85.getString();
        st1920.automaton.RegExpMatcher.REString rEString89 = regExpMatcher8.matchesNOccurences(rEString85, 10);
        st1920.automaton.RegExpMatcher.REString rEString90 = regExpMatcher8.matchesAnyString();
        java.lang.String str91 = rEString90.getString();
        st1920.automaton.RegExpMatcher.REString rEString92 = regExpMatcher0.excludePattern(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str57 + "' != '" + "[^hi!]" + "'", str57.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str87 + "' != '" + "[^hi!]" + "'", str87.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str91 + "' != '" + "@" + "'", str91.equals("@"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
    }

    @Test
    public void test269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test269");
        st1920.automaton.RegExpMatcher.MatchString matchString1 = new st1920.automaton.RegExpMatcher.MatchString("[^hi!]hi!hi!");
        st1920.automaton.RegExpMatcher regExpMatcher2 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString3 = null;
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher2.repeatZeroOrMore(rEString3);
        st1920.automaton.RegExpMatcher.REString rEString6 = regExpMatcher2.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher7 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString8 = null;
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher7.repeatZeroOrMore(rEString8);
        st1920.automaton.RegExpMatcher regExpMatcher10 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString11 = null;
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher10.repeatZeroOrMore(rEString11);
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher10.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher15 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString16 = null;
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher15.repeatZeroOrMore(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher15.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher10.matchesAnyChar(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher7.makeParenthesis(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher2.matchesAnyChar(rEString20);
        st1920.automaton.RegExpMatcher regExpMatcher23 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher23.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher2.repeatOneOrMore(rEString25);
        st1920.automaton.RegExpMatcher regExpMatcher27 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString28 = null;
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher27.repeatZeroOrMore(rEString28);
        st1920.automaton.RegExpMatcher regExpMatcher30 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString31 = null;
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher30.repeatZeroOrMore(rEString31);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = null;
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher33.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher38.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher33.matchesAnyChar(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher30.makeParenthesis(rEString43);
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher27.matchesNOrMoreOccurences(rEString43, (int) (byte) -1);
        st1920.automaton.RegExpMatcher regExpMatcher47 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = null;
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher47.repeatZeroOrMore(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher47.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher47.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher2.eitherPattern(rEString46, rEString52);
        st1920.automaton.RegExpMatcher regExpMatcher54 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString55 = null;
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher54.repeatZeroOrMore(rEString55);
        st1920.automaton.RegExpMatcher regExpMatcher57 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = null;
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher57.repeatZeroOrMore(rEString58);
        st1920.automaton.RegExpMatcher regExpMatcher60 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString61 = null;
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher60.repeatZeroOrMore(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher60.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher65 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString66 = null;
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher65.repeatZeroOrMore(rEString66);
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher65.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher60.matchesAnyChar(rEString69);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher57.makeParenthesis(rEString70);
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher54.matchesNOrMoreOccurences(rEString70, (int) (byte) -1);
        st1920.automaton.RegExpMatcher regExpMatcher74 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString75 = null;
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher74.repeatZeroOrMore(rEString75);
        st1920.automaton.RegExpMatcher regExpMatcher77 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher77.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString80 = null;
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher77.repeatZeroOrMore(rEString80);
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher74.repeatOneOrMore(rEString81);
        java.lang.String str83 = rEString82.getString();
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher2.followPattern(rEString70, rEString82);
        st1920.automaton.RegExpMatcher.REString rEString87 = regExpMatcher2.matchesNumBetweenNandM((int) (short) -1, (int) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean88 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: interval syntax error at position 7");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
    }

    @Test
    public void test270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test270");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher10 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString11 = null;
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher10.repeatZeroOrMore(rEString11);
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher10.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher5.matchesAnyChar(rEString14);
        java.lang.String str16 = rEString14.getString();
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher20.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher17.makeParenthesis(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher0.bothPatterns(rEString14, rEString31);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher0.matchesNumBetweenNandM((int) (short) 0, (int) ' ');
        st1920.automaton.RegExpMatcher.MatchString matchString36 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher0.matchesBracketChars("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "[^hi!]" + "'", str16.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
    }

    @Test
    public void test271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test271");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher8.matchesAnyChar(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher0.repeatZeroOrMore(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher0.matchesNoBracketChars("null*");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
    }

    @Test
    public void test272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test272");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString6 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher regExpMatcher7 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString8 = null;
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher7.repeatZeroOrMore(rEString8);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher7.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher7.matchesAnyChar(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher0.repeatOneOrMore(rEString16);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher19.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher0.repeatZeroOrOne(rEString24);
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher0.matchesString("hi!hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher0.matchesNumBetweenNandM((int) (short) 100, 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
    }

    @Test
    public void test273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test273");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString6 = regExpMatcher0.makeConcatenation("hi!", "hi!");
        java.lang.String str7 = matchString6.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "hi!hi!" + "'", str7.equals("hi!hi!"));
    }

    @Test
    public void test274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test274");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher20.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher17.makeParenthesis(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher12.matchesAnyChar(rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher12.repeatOneOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher0.matchesNToMOccurences(rEString36, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.MatchString matchString41 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher0.makeNumreg();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
    }

    @Test
    public void test275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test275");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher.MatchString matchString34 = regExpMatcher0.makeConcatenation("", "");
        st1920.automaton.RegExpMatcher.MatchString matchString35 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher0.matchesNumBetweenNandM((int) (short) 1, (int) (short) 1);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString40 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher0.matchesAnyString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
    }

    @Test
    public void test276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test276");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher5.makeParenthesis(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher0.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher21.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher29.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher34 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = null;
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher34.repeatZeroOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher34.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher29.matchesAnyChar(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher26.makeParenthesis(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher21.matchesAnyChar(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher42 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher42.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher21.repeatOneOrMore(rEString44);
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher0.eitherPattern(rEString44, rEString49);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher55 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString56 = null;
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher55.repeatZeroOrMore(rEString56);
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher55.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher52.matchesAnyChar(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher52.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher62 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString63 = null;
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher62.repeatZeroOrMore(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher62.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher62.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher0.eitherPattern(rEString61, rEString69);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher0.matchesNoBracketChars("null+");
        st1920.automaton.RegExpMatcher.MatchString matchString73 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher0.matchesNoChar();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
    }

    @Test
    public void test277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test277");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher32.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher37 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString38 = null;
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher37.repeatZeroOrMore(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher37.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher32.matchesAnyChar(rEString41);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher32.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher44 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString45 = null;
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher44.repeatZeroOrMore(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher44.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher49 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString50 = null;
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher49.repeatZeroOrMore(rEString50);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = null;
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.repeatZeroOrMore(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher52.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher57 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = null;
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher57.repeatZeroOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher57.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher52.matchesAnyChar(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher49.makeParenthesis(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher44.matchesAnyChar(rEString62);
        st1920.automaton.RegExpMatcher regExpMatcher65 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher65.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher44.repeatOneOrMore(rEString67);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher32.matchesNToMOccurences(rEString68, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher32.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher32.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher0.matchesNOccurences(rEString74, (int) '#');
        st1920.automaton.RegExpMatcher regExpMatcher77 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString78 = null;
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher77.repeatZeroOrMore(rEString78);
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher77.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher77.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher77.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher0.repeatOneOrMore(rEString85);
        st1920.automaton.RegExpMatcher.REString rEString87 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString88 = regExpMatcher0.makeNumreg();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
    }

    @Test
    public void test278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test278");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher3.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher3.matchesAnyChar(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher0.makeParenthesis(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher16.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher29.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher24.matchesAnyChar(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher21.makeParenthesis(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher16.matchesAnyChar(rEString34);
        st1920.automaton.RegExpMatcher regExpMatcher37 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString38 = null;
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher37.repeatZeroOrMore(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher37.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher42 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString43 = null;
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher42.repeatZeroOrMore(rEString43);
        st1920.automaton.RegExpMatcher regExpMatcher45 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString46 = null;
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher45.repeatZeroOrMore(rEString46);
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher45.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher50 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString51 = null;
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher50.repeatZeroOrMore(rEString51);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher50.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher45.matchesAnyChar(rEString54);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher42.makeParenthesis(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher37.matchesAnyChar(rEString55);
        st1920.automaton.RegExpMatcher regExpMatcher58 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher58.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher37.repeatOneOrMore(rEString60);
        st1920.automaton.RegExpMatcher regExpMatcher62 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher62.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString65 = null;
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher62.repeatZeroOrMore(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher16.eitherPattern(rEString60, rEString65);
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher16.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher0.matchesAnyChar(rEString68);
        st1920.automaton.RegExpMatcher.MatchString matchString70 = regExpMatcher0.makeAlpha();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString70);
    }

    @Test
    public void test279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test279");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher20.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher17.makeParenthesis(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher12.matchesAnyChar(rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher12.repeatOneOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher0.matchesNToMOccurences(rEString36, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.MatchString matchString41 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher0.matchesNumBetweenNandM((int) (short) -1, 0);
        st1920.automaton.RegExpMatcher.MatchString matchString47 = regExpMatcher0.makeConcatenation("[^]", "[^[^hi!]]");
        st1920.automaton.RegExpMatcher.MatchString matchString50 = regExpMatcher0.makeConcatenation("#", "a");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
    }

    @Test
    public void test280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test280");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString15 = null;
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.repeatZeroOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher9.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher6.makeParenthesis(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesAnyChar(rEString19);
        st1920.automaton.RegExpMatcher.MatchString matchString22 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.MatchString matchString23 = regExpMatcher0.makeNum();
        java.lang.String str24 = matchString23.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "1" + "'", str24.equals("1"));
    }

    @Test
    public void test281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test281");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher0.matchesBracketChars("#");
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher16.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher16.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher22.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher22.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher16.repeatOneOrMore(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher16.matchesBracketChars("1");
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher16.matchesNumBetweenNandM((int) (byte) -1, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher0.matchesNOrMoreOccurences(rEString37, (int) (byte) 10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
    }

    @Test
    public void test282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test282");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher35.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher40 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString41 = null;
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher40.repeatZeroOrMore(rEString41);
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher48 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher48.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher48.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher43.matchesAnyChar(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher40.makeParenthesis(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher35.matchesAnyChar(rEString53);
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher35.repeatOneOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher32.matchesNOrMoreOccurences(rEString59, 100);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher0.matchesAnyChar(rEString61);
        st1920.automaton.RegExpMatcher regExpMatcher63 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString64 = null;
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher63.repeatZeroOrMore(rEString64);
        st1920.automaton.RegExpMatcher regExpMatcher66 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString67 = null;
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher66.repeatZeroOrMore(rEString67);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher66.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher71 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString72 = null;
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher71.repeatZeroOrMore(rEString72);
        st1920.automaton.RegExpMatcher regExpMatcher74 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString75 = null;
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher74.repeatZeroOrMore(rEString75);
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher74.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher79 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString80 = null;
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher79.repeatZeroOrMore(rEString80);
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher79.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher74.matchesAnyChar(rEString83);
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher71.makeParenthesis(rEString84);
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher66.matchesAnyChar(rEString84);
        st1920.automaton.RegExpMatcher regExpMatcher87 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString89 = regExpMatcher87.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString90 = regExpMatcher66.repeatOneOrMore(rEString89);
        st1920.automaton.RegExpMatcher.REString rEString92 = regExpMatcher63.matchesNOrMoreOccurences(rEString90, 100);
        java.lang.String str93 = rEString92.getString();
        st1920.automaton.RegExpMatcher.REString rEString95 = regExpMatcher0.matchesNOccurences(rEString92, 100);
        st1920.automaton.RegExpMatcher.MatchString matchString98 = regExpMatcher0.makeConcatenation("1", "[^hi!]");
        java.lang.String str99 = matchString98.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str99 + "' != '" + "1[^hi!]" + "'", str99.equals("1[^hi!]"));
    }

    @Test
    public void test283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test283");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher20.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher17.makeParenthesis(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher12.matchesAnyChar(rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher12.repeatOneOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher0.matchesNToMOccurences(rEString36, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher0.matchesBracketChars("");
        java.lang.String str43 = rEString42.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str43 + "' != '" + "[]" + "'", str43.equals("[]"));
    }

    @Test
    public void test284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test284");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher10 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString11 = null;
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher10.repeatZeroOrMore(rEString11);
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher10.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher5.matchesAnyChar(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher5.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher17.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher30 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString31 = null;
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher30.repeatZeroOrMore(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher30.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher25.matchesAnyChar(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher22.makeParenthesis(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher17.matchesAnyChar(rEString35);
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher17.repeatOneOrMore(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher5.matchesNToMOccurences(rEString41, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher5.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher5.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher5.matchesNumBetweenNandM(1, (int) (short) -1);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher0.makeParenthesis(rEString50);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = null;
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.repeatZeroOrMore(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher52.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher52.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher0.matchesNOrMoreOccurences(rEString59, (int) (short) -1);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher0.makeNumreg();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
    }

    @Test
    public void test285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test285");
        st1920.automaton.RegExpMatcher.REString rEString1 = new st1920.automaton.RegExpMatcher.REString("1[^hi!]");
    }

    @Test
    public void test286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test286");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString14 = regExpMatcher0.makeConcatenation("hi!", "hi!");
        st1920.automaton.RegExpMatcher regExpMatcher15 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString16 = null;
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher15.repeatZeroOrMore(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher15.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher15.matchesAnyChar(rEString24);
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString29 = null;
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher26.repeatZeroOrMore(rEString29);
        st1920.automaton.RegExpMatcher regExpMatcher31 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString32 = null;
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher31.repeatZeroOrMore(rEString32);
        st1920.automaton.RegExpMatcher regExpMatcher34 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = null;
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher34.repeatZeroOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher34.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher39 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString40 = null;
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher39.repeatZeroOrMore(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher39.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher34.matchesAnyChar(rEString43);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher31.makeParenthesis(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher15.eitherPattern(rEString29, rEString45);
        st1920.automaton.RegExpMatcher regExpMatcher47 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher47.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher15.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher0.matchesAnyChar(rEString49);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = null;
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.repeatZeroOrMore(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher52.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher57 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = null;
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher57.repeatZeroOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher57.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher52.matchesAnyChar(rEString61);
        st1920.automaton.RegExpMatcher regExpMatcher63 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher63.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString66 = null;
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher63.repeatZeroOrMore(rEString66);
        st1920.automaton.RegExpMatcher regExpMatcher68 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString69 = null;
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher68.repeatZeroOrMore(rEString69);
        st1920.automaton.RegExpMatcher regExpMatcher71 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString72 = null;
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher71.repeatZeroOrMore(rEString72);
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher71.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher76 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString77 = null;
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher76.repeatZeroOrMore(rEString77);
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher76.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher71.matchesAnyChar(rEString80);
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher68.makeParenthesis(rEString81);
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher52.eitherPattern(rEString66, rEString82);
        st1920.automaton.RegExpMatcher regExpMatcher84 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher84.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString87 = regExpMatcher52.repeatZeroOrMore(rEString86);
        st1920.automaton.RegExpMatcher.REString rEString88 = regExpMatcher52.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString89 = regExpMatcher52.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString90 = regExpMatcher52.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString92 = regExpMatcher0.matchesNOccurences(rEString90, 10);
        st1920.automaton.RegExpMatcher.REString rEString93 = regExpMatcher0.matchesNoChar();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
    }

    @Test
    public void test287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test287");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher32.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher37 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString38 = null;
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher37.repeatZeroOrMore(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher37.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher32.matchesAnyChar(rEString41);
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString46 = null;
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.repeatZeroOrMore(rEString46);
        st1920.automaton.RegExpMatcher regExpMatcher48 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher48.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher regExpMatcher51 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString52 = null;
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher51.repeatZeroOrMore(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher51.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString57 = null;
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.repeatZeroOrMore(rEString57);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher56.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher51.matchesAnyChar(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher48.makeParenthesis(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher32.eitherPattern(rEString46, rEString62);
        st1920.automaton.RegExpMatcher regExpMatcher64 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString65 = null;
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher64.repeatZeroOrMore(rEString65);
        st1920.automaton.RegExpMatcher regExpMatcher67 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString68 = null;
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher67.repeatZeroOrMore(rEString68);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher67.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher72 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString73 = null;
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher72.repeatZeroOrMore(rEString73);
        st1920.automaton.RegExpMatcher regExpMatcher75 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString76 = null;
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher75.repeatZeroOrMore(rEString76);
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher75.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher80 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString81 = null;
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher80.repeatZeroOrMore(rEString81);
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher80.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher75.matchesAnyChar(rEString84);
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher72.makeParenthesis(rEString85);
        st1920.automaton.RegExpMatcher.REString rEString87 = regExpMatcher67.matchesAnyChar(rEString85);
        st1920.automaton.RegExpMatcher regExpMatcher88 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString90 = regExpMatcher88.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString91 = regExpMatcher67.repeatOneOrMore(rEString90);
        st1920.automaton.RegExpMatcher.REString rEString93 = regExpMatcher64.matchesNOrMoreOccurences(rEString91, 100);
        st1920.automaton.RegExpMatcher.REString rEString94 = regExpMatcher32.matchesAnyChar(rEString93);
        st1920.automaton.RegExpMatcher.REString rEString95 = regExpMatcher0.matchesAnyChar(rEString94);
        st1920.automaton.RegExpMatcher.MatchString matchString98 = regExpMatcher0.makeConcatenation("hi!", "");
        java.lang.String str99 = matchString98.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str99 + "' != '" + "hi!" + "'", str99.equals("hi!"));
    }

    @Test
    public void test288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test288");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher10 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString11 = null;
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher10.repeatZeroOrMore(rEString11);
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher10.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher5.matchesAnyChar(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher5.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher17.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher30 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString31 = null;
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher30.repeatZeroOrMore(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher30.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher25.matchesAnyChar(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher22.makeParenthesis(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher17.matchesAnyChar(rEString35);
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher17.repeatOneOrMore(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher5.matchesNToMOccurences(rEString41, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher5.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher5.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher5.matchesNumBetweenNandM(1, (int) (short) -1);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher0.makeParenthesis(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.MatchString matchString55 = regExpMatcher0.makeConcatenation("", "1");
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = new st1920.automaton.RegExpMatcher.REString("");
        st1920.automaton.RegExpMatcher regExpMatcher59 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher59.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher59.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher56.bothPatterns(rEString58, rEString62);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher0.repeatZeroOrMore(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher0.matchesBracketChars("[^hi!]hi!hi!");
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher0.matchesBracketChars("null+");
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher0.matchesAnyString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
    }

    @Test
    public void test289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test289");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString6 = regExpMatcher0.makeConcatenation("hi!", "hi!");
        st1920.automaton.RegExpMatcher.MatchString matchString7 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher8.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString16 = regExpMatcher8.makeConcatenation("", "1");
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher17.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher17.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString23 = regExpMatcher17.makeNum();
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher29.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher24.matchesAnyChar(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher17.repeatOneOrMore(rEString33);
        st1920.automaton.RegExpMatcher regExpMatcher36 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString37 = null;
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher36.repeatZeroOrMore(rEString37);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher36.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher36.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher17.repeatZeroOrOne(rEString41);
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher43.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher17.excludePattern(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher8.matchesNToMOccurences(rEString48, 10, 1);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher0.matchesNToMOccurences(rEString51, (int) (byte) 100, (int) (byte) 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
    }

    @Test
    public void test290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test290");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher3.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher3.matchesAnyChar(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher0.makeParenthesis(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher16.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher16.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher22.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher22.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher16.repeatOneOrMore(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher16.matchesBracketChars("1");
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher16.matchesNumBetweenNandM((int) (byte) -1, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher16.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher0.excludePattern(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString40 = null;
        st1920.automaton.RegExpMatcher regExpMatcher41 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = null;
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher41.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher41.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher41.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher47 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = null;
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher47.repeatZeroOrMore(rEString48);
        st1920.automaton.RegExpMatcher regExpMatcher50 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString51 = null;
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher50.repeatZeroOrMore(rEString51);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher50.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher55 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString56 = null;
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher55.repeatZeroOrMore(rEString56);
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher55.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher50.matchesAnyChar(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher47.makeParenthesis(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher41.matchesAnyChar(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher41.matchesString("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher65 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString66 = null;
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher65.repeatZeroOrMore(rEString66);
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher65.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher70 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString71 = null;
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher70.repeatZeroOrMore(rEString71);
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher70.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher65.matchesAnyChar(rEString74);
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher65.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher65.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher41.repeatOneOrMore(rEString77);
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher0.bothPatterns(rEString40, rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
    }

    @Test
    public void test291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test291");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString6 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher regExpMatcher7 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString8 = null;
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher7.repeatZeroOrMore(rEString8);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher7.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher7.matchesAnyChar(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher0.repeatOneOrMore(rEString16);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher19.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher0.repeatZeroOrOne(rEString24);
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher26.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher26.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.excludePattern(rEString30);
        st1920.automaton.RegExpMatcher.MatchString matchString32 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher0.matchesString("null+");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
    }

    @Test
    public void test292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test292");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher6.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher6.matchesAnyChar(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher3.makeParenthesis(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher0.matchesNOrMoreOccurences(rEString16, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher regExpMatcher27 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString28 = null;
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher27.repeatZeroOrMore(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher27.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher27.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher26.makeParenthesis(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher0.matchesNOrMoreOccurences(rEString34, (int) (byte) 1);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher0.matchesNumBetweenNandM((int) (short) 10, (int) (byte) 0);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher0.matchesString("1");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
    }

    @Test
    public void test293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test293");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher6.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher6.matchesAnyChar(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher3.makeParenthesis(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher0.matchesNOrMoreOccurences(rEString16, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.MatchString matchString24 = regExpMatcher0.makeConcatenation("", "1");
        java.lang.String str25 = matchString24.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str25 + "' != '" + "1" + "'", str25.equals("1"));
    }

    @Test
    public void test294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test294");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher5.makeParenthesis(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher0.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher0.repeatOneOrMore(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher0.matchesString("1");
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher0.matchesBracketChars("#");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
    }

    @Test
    public void test295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test295");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher10 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString11 = null;
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher10.repeatZeroOrMore(rEString11);
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher10.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher5.matchesAnyChar(rEString14);
        java.lang.String str16 = rEString14.getString();
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher20.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher17.makeParenthesis(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher0.bothPatterns(rEString14, rEString31);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher0.matchesNumBetweenNandM((int) (short) 0, (int) ' ');
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher0.matchesBracketChars("[^hi!]hi!hi!");
        java.lang.String str38 = rEString37.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "[^hi!]" + "'", str16.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "[[^hi!]hi!hi!]" + "'", str38.equals("[[^hi!]hi!hi!]"));
    }

    @Test
    public void test296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test296");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher3.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher3.matchesAnyChar(rEString12);
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher22.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher27 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString28 = null;
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher27.repeatZeroOrMore(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher27.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher22.matchesAnyChar(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher19.makeParenthesis(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher3.eitherPattern(rEString17, rEString33);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher0.repeatOneOrMore(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher0.matchesBracketChars("#");
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher38.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher38.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher48 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher48.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher48.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher43.matchesAnyChar(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher43.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher55 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString56 = null;
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher55.repeatZeroOrMore(rEString56);
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher55.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher60 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString61 = null;
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher60.repeatZeroOrMore(rEString61);
        st1920.automaton.RegExpMatcher regExpMatcher63 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString64 = null;
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher63.repeatZeroOrMore(rEString64);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher63.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher68 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString69 = null;
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher68.repeatZeroOrMore(rEString69);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher68.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher63.matchesAnyChar(rEString72);
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher60.makeParenthesis(rEString73);
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher55.matchesAnyChar(rEString73);
        st1920.automaton.RegExpMatcher regExpMatcher76 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher76.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher55.repeatOneOrMore(rEString78);
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher43.matchesNToMOccurences(rEString79, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher43.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher43.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString88 = regExpMatcher43.matchesNumBetweenNandM(1, (int) (short) -1);
        st1920.automaton.RegExpMatcher.REString rEString89 = regExpMatcher38.makeParenthesis(rEString88);
        st1920.automaton.RegExpMatcher.REString rEString90 = regExpMatcher38.makeAlphareg();
        st1920.automaton.RegExpMatcher.MatchString matchString93 = regExpMatcher38.makeConcatenation("", "1");
        st1920.automaton.RegExpMatcher.REString rEString95 = regExpMatcher38.matchesBracketChars("a");
        st1920.automaton.RegExpMatcher.REString rEString97 = regExpMatcher38.matchesString("null+");
        st1920.automaton.RegExpMatcher.REString rEString98 = regExpMatcher0.repeatZeroOrMore(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
    }

    @Test
    public void test297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test297");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher5.makeParenthesis(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher0.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher21.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher29.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher34 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = null;
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher34.repeatZeroOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher34.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher29.matchesAnyChar(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher26.makeParenthesis(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher21.matchesAnyChar(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher42 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher42.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher21.repeatOneOrMore(rEString44);
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher0.eitherPattern(rEString44, rEString49);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher55 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString56 = null;
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher55.repeatZeroOrMore(rEString56);
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher55.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher52.matchesAnyChar(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher52.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher62 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString63 = null;
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher62.repeatZeroOrMore(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher62.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher62.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher0.eitherPattern(rEString61, rEString69);
        st1920.automaton.RegExpMatcher.MatchString matchString71 = regExpMatcher0.makeAlpha();
        java.lang.String str72 = matchString71.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str72 + "' != '" + "a" + "'", str72.equals("a"));
    }

    @Test
    public void test298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test298");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher10 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString11 = null;
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher10.repeatZeroOrMore(rEString11);
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher10.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher5.matchesAnyChar(rEString14);
        java.lang.String str16 = rEString14.getString();
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher20.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher17.makeParenthesis(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher0.bothPatterns(rEString14, rEString31);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher0.matchesNumBetweenNandM((int) (short) 0, (int) ' ');
        st1920.automaton.RegExpMatcher.REString rEString37 = new st1920.automaton.RegExpMatcher.REString("");
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher0.excludePattern(rEString37);
        st1920.automaton.RegExpMatcher.MatchString matchString41 = regExpMatcher0.makeConcatenation("hi!hi!", "a");
        st1920.automaton.RegExpMatcher.MatchString matchString44 = regExpMatcher0.makeConcatenation("a", "hi!");
        st1920.automaton.RegExpMatcher.MatchString matchString47 = regExpMatcher0.makeConcatenation("[^1]", "hi!hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "[^hi!]" + "'", str16.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
    }

    @Test
    public void test299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test299");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString15 = null;
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.repeatZeroOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher9.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher6.makeParenthesis(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesAnyChar(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher regExpMatcher23 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString24 = null;
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher23.repeatZeroOrMore(rEString24);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher23.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher23.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString29 = null;
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.repeatZeroOrMore(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher28.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = null;
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher regExpMatcher36 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString37 = null;
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher36.repeatZeroOrMore(rEString37);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher36.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher41 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = null;
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher41.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher41.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher36.matchesAnyChar(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher33.makeParenthesis(rEString46);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher28.matchesAnyChar(rEString46);
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher23.matchesAnyChar(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher0.repeatZeroOrOne(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher0.matchesAnyString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
    }

    @Test
    public void test300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test300");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString13 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.MatchString matchString14 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher0.matchesString("a");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
    }

    @Test
    public void test301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test301");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher5.makeParenthesis(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher0.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher0.matchesBracketChars("1");
        java.lang.Class<?> wildcardClass23 = rEString22.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test302");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher20.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher17.makeParenthesis(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher12.matchesAnyChar(rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher12.repeatOneOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher0.matchesNToMOccurences(rEString36, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher0.matchesString("hi!");
        st1920.automaton.RegExpMatcher.MatchString matchString44 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher regExpMatcher45 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString46 = null;
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher45.repeatZeroOrMore(rEString46);
        st1920.automaton.RegExpMatcher regExpMatcher48 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher48.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher48.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher53 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString54 = null;
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher53.repeatZeroOrMore(rEString54);
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher53.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher48.matchesAnyChar(rEString57);
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher45.makeParenthesis(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher0.makeParenthesis(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
    }

    @Test
    public void test303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test303");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher.MatchString matchString34 = regExpMatcher0.makeConcatenation("", "");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher0.matchesString("hi!");
        st1920.automaton.RegExpMatcher.MatchString matchString41 = regExpMatcher0.makeConcatenation("[^hi!]hi!hi!", "hi!hi!");
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher43.matchesBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher50 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString51 = null;
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher50.repeatZeroOrMore(rEString51);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher50.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher50.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher55 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString56 = null;
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher55.repeatZeroOrMore(rEString56);
        st1920.automaton.RegExpMatcher regExpMatcher58 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher58.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString61 = null;
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher58.repeatZeroOrMore(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher55.repeatOneOrMore(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher43.eitherPattern(rEString54, rEString62);
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher0.matchesNOccurences(rEString54, (int) ' ');
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
    }

    @Test
    public void test304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test304");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher20.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher17.makeParenthesis(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher12.matchesAnyChar(rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher12.repeatOneOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher0.matchesNToMOccurences(rEString36, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.MatchString matchString41 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher0.matchesNoChar();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
    }

    @Test
    public void test305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test305");
        st1920.automaton.RegExpMatcher.MatchString matchString1 = new st1920.automaton.RegExpMatcher.MatchString("1[^hi!]");
    }

    @Test
    public void test306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test306");
        st1920.automaton.RegExpMatcher.MatchString matchString1 = new st1920.automaton.RegExpMatcher.MatchString("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher2 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString3 = null;
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher2.repeatZeroOrMore(rEString3);
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher5.makeParenthesis(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher2.matchesNOrMoreOccurences(rEString18, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher2.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher2.matchesNoChar();
        boolean boolean25 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString24);
        java.lang.String str26 = matchString1.getString();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean28 = st1920.automaton.RegExpMatcher.matches(matchString1, rEString27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "hi!" + "'", str26.equals("hi!"));
    }

    @Test
    public void test307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test307");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher8.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher0.excludePattern(rEString11);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher0.matchesNumBetweenNandM((int) ' ', (int) ' ');
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher16.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString22 = regExpMatcher16.makeConcatenation("hi!", "hi!");
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher16.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher16.matchesNoBracketChars("1");
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher16.matchesBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher16.matchesBracketChars("@");
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher0.matchesNToMOccurences(rEString29, (int) ' ', (int) (short) 1);
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher regExpMatcher34 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = null;
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher34.repeatZeroOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher34.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher34.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher39 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString40 = null;
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher39.repeatZeroOrMore(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher39.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher44 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString45 = null;
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher44.repeatZeroOrMore(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher44.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher39.matchesAnyChar(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher39.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher51 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString52 = null;
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher51.repeatZeroOrMore(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher51.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString57 = null;
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.repeatZeroOrMore(rEString57);
        st1920.automaton.RegExpMatcher regExpMatcher59 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString60 = null;
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher59.repeatZeroOrMore(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher59.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher64 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString65 = null;
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher64.repeatZeroOrMore(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher64.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher59.matchesAnyChar(rEString68);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher56.makeParenthesis(rEString69);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher51.matchesAnyChar(rEString69);
        st1920.automaton.RegExpMatcher regExpMatcher72 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher72.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher51.repeatOneOrMore(rEString74);
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher39.matchesNToMOccurences(rEString75, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher39.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher39.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher39.matchesNumBetweenNandM(1, (int) (short) -1);
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher34.makeParenthesis(rEString84);
        st1920.automaton.RegExpMatcher.REString rEString87 = new st1920.automaton.RegExpMatcher.REString("[^hi!]");
        st1920.automaton.RegExpMatcher.REString rEString88 = regExpMatcher34.excludePattern(rEString87);
        st1920.automaton.RegExpMatcher.REString rEString89 = regExpMatcher0.eitherPattern(rEString33, rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
    }

    @Test
    public void test308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test308");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.MatchString matchString7 = regExpMatcher0.makeConcatenation("[^hi!]", "");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher regExpMatcher27 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString28 = null;
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher27.repeatZeroOrMore(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher27.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher32.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher27.matchesAnyChar(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher24.makeParenthesis(rEString37);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher8.eitherPattern(rEString22, rEString38);
        st1920.automaton.RegExpMatcher regExpMatcher40 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher40.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher8.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher8.matchesBracketChars("1");
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher0.matchesAnyChar(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher0.matchesAnyString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
    }

    @Test
    public void test309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test309");
        st1920.automaton.RegExpMatcher.MatchString matchString1 = new st1920.automaton.RegExpMatcher.MatchString("[^[^hi!]]");
    }

    @Test
    public void test310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test310");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher6.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher6.matchesAnyChar(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher3.makeParenthesis(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher0.matchesNOrMoreOccurences(rEString16, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.MatchString matchString23 = regExpMatcher0.makeConcatenation("[^hi!]hi!hi!", "<10-1>");
        st1920.automaton.RegExpMatcher.MatchString matchString24 = regExpMatcher0.makeNum();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
    }

    @Test
    public void test311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test311");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher5.makeParenthesis(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher0.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher0.matchesBracketChars("1");
        st1920.automaton.RegExpMatcher regExpMatcher23 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString24 = null;
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher23.repeatZeroOrMore(rEString24);
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher23.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString29 = null;
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.repeatZeroOrMore(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher28.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher23.matchesAnyChar(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher23.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher35.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher40 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString41 = null;
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher40.repeatZeroOrMore(rEString41);
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher48 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher48.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher48.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher43.matchesAnyChar(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher40.makeParenthesis(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher35.matchesAnyChar(rEString53);
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher35.repeatOneOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher23.matchesNToMOccurences(rEString59, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher23.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher23.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher23.matchesNumBetweenNandM(1, (int) (short) -1);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher23.matchesString("");
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher23.matchesBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher23.matchesNumBetweenNandM((int) (short) 10, 1);
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher23.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher77 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString78 = null;
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher77.repeatZeroOrMore(rEString78);
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher77.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher77.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher77.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher0.bothPatterns(rEString76, rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
    }

    @Test
    public void test312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test312");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString15 = null;
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.repeatZeroOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher9.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher6.makeParenthesis(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesAnyChar(rEString19);
        st1920.automaton.RegExpMatcher.MatchString matchString22 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher0.matchesString("1");
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher0.matchesString("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
    }

    @Test
    public void test313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test313");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher35.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher40 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString41 = null;
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher40.repeatZeroOrMore(rEString41);
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher48 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher48.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher48.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher43.matchesAnyChar(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher40.makeParenthesis(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher35.matchesAnyChar(rEString53);
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher35.repeatOneOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher32.matchesNOrMoreOccurences(rEString59, 100);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher0.matchesAnyChar(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher0.matchesString("");
        st1920.automaton.RegExpMatcher regExpMatcher65 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher65.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher68 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString69 = null;
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher68.repeatZeroOrMore(rEString69);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher68.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher65.matchesAnyChar(rEString72);
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher0.repeatOneOrMore(rEString72);
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher0.makeNumreg();
        java.lang.Class<?> wildcardClass76 = rEString75.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test314");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString15 = null;
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.repeatZeroOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher9.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher6.makeParenthesis(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesAnyChar(rEString19);
        st1920.automaton.RegExpMatcher.MatchString matchString22 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.MatchString matchString23 = regExpMatcher0.makeAlpha();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
    }

    @Test
    public void test315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test315");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString6 = regExpMatcher0.makeConcatenation("hi!", "hi!");
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher0.matchesString("[^hi!]hi!hi!");
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher10 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString11 = null;
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher10.repeatZeroOrMore(rEString11);
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher10.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher10.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher10.matchesBracketChars("a");
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher0.matchesNOccurences(rEString17, (int) (short) 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
    }

    @Test
    public void test316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test316");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher32.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher37 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString38 = null;
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher37.repeatZeroOrMore(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher37.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher32.matchesAnyChar(rEString41);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher32.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher44 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString45 = null;
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher44.repeatZeroOrMore(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher44.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher49 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString50 = null;
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher49.repeatZeroOrMore(rEString50);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = null;
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.repeatZeroOrMore(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher52.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher57 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = null;
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher57.repeatZeroOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher57.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher52.matchesAnyChar(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher49.makeParenthesis(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher44.matchesAnyChar(rEString62);
        st1920.automaton.RegExpMatcher regExpMatcher65 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher65.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher44.repeatOneOrMore(rEString67);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher32.matchesNToMOccurences(rEString68, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher32.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher32.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher0.matchesNOccurences(rEString74, (int) '#');
        st1920.automaton.RegExpMatcher regExpMatcher77 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString78 = null;
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher77.repeatZeroOrMore(rEString78);
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher77.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher77.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher77.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher0.repeatOneOrMore(rEString85);
        st1920.automaton.RegExpMatcher.MatchString matchString89 = regExpMatcher0.makeConcatenation("[^hi!]", "1");
        st1920.automaton.RegExpMatcher.REString rEString90 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString91 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString92 = regExpMatcher0.makeAlphareg();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
    }

    @Test
    public void test317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test317");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher6.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher6.matchesAnyChar(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher3.makeParenthesis(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher0.matchesNOrMoreOccurences(rEString16, (int) (byte) -1);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher regExpMatcher23 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString24 = null;
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher23.repeatZeroOrMore(rEString24);
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher23.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString29 = null;
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.repeatZeroOrMore(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher28.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher23.matchesAnyChar(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher20.makeParenthesis(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher0.matchesNOrMoreOccurences(rEString34, (int) '4');
        st1920.automaton.RegExpMatcher.MatchString matchString37 = regExpMatcher0.makeNum();
        java.lang.Class<?> wildcardClass38 = regExpMatcher0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test318");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher10 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString11 = null;
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher10.repeatZeroOrMore(rEString11);
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher18 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString19 = null;
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher18.repeatZeroOrMore(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher18.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher13.matchesAnyChar(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher10.makeParenthesis(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher5.matchesAnyChar(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher0.matchesAnyChar(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher0.matchesBracketChars("[^hi!]hi!hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher0.matchesBracketChars("1[^hi!]");
        st1920.automaton.RegExpMatcher.MatchString matchString31 = regExpMatcher0.makeAlpha();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
    }

    @Test
    public void test319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test319");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher32.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher32.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher41 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = null;
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher41.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher41.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher38.matchesAnyChar(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher38.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher32.repeatOneOrMore(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher0.matchesNToMOccurences(rEString47, (int) (short) -1, (int) (short) 10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
    }

    @Test
    public void test320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test320");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher3.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher0.matchesAnyChar(rEString7);
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString15 = null;
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.repeatZeroOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher9.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString29 = null;
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.repeatZeroOrMore(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher28.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = null;
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher33.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher28.matchesAnyChar(rEString37);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher25.makeParenthesis(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher9.eitherPattern(rEString23, rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher41 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = null;
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher41.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher regExpMatcher44 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString45 = null;
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher44.repeatZeroOrMore(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher44.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher49 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString50 = null;
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher49.repeatZeroOrMore(rEString50);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = null;
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.repeatZeroOrMore(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher52.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher57 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = null;
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher57.repeatZeroOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher57.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher52.matchesAnyChar(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher49.makeParenthesis(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher44.matchesAnyChar(rEString62);
        st1920.automaton.RegExpMatcher regExpMatcher65 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher65.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher44.repeatOneOrMore(rEString67);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher41.matchesNOrMoreOccurences(rEString68, 100);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher9.matchesAnyChar(rEString70);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher9.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher9.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher0.matchesNToMOccurences(rEString73, (int) (short) 10, 10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
    }

    @Test
    public void test321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test321");
        st1920.automaton.RegExpMatcher.MatchString matchString0 = null;
        st1920.automaton.RegExpMatcher regExpMatcher1 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString3 = new st1920.automaton.RegExpMatcher.REString("");
        st1920.automaton.RegExpMatcher regExpMatcher4 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = regExpMatcher4.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher4.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher1.bothPatterns(rEString3, rEString7);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher1.matchesNoChar();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = st1920.automaton.RegExpMatcher.matches(matchString0, rEString9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
    }

    @Test
    public void test322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test322");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher35.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher40 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString41 = null;
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher40.repeatZeroOrMore(rEString41);
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher48 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher48.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher48.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher43.matchesAnyChar(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher40.makeParenthesis(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher35.matchesAnyChar(rEString53);
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher35.repeatOneOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher32.matchesNOrMoreOccurences(rEString59, 100);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher0.matchesAnyChar(rEString61);
        st1920.automaton.RegExpMatcher regExpMatcher63 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString64 = null;
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher63.repeatZeroOrMore(rEString64);
        st1920.automaton.RegExpMatcher regExpMatcher66 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString67 = null;
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher66.repeatZeroOrMore(rEString67);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher66.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher71 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString72 = null;
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher71.repeatZeroOrMore(rEString72);
        st1920.automaton.RegExpMatcher regExpMatcher74 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString75 = null;
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher74.repeatZeroOrMore(rEString75);
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher74.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher79 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString80 = null;
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher79.repeatZeroOrMore(rEString80);
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher79.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher74.matchesAnyChar(rEString83);
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher71.makeParenthesis(rEString84);
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher66.matchesAnyChar(rEString84);
        st1920.automaton.RegExpMatcher regExpMatcher87 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString89 = regExpMatcher87.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString90 = regExpMatcher66.repeatOneOrMore(rEString89);
        st1920.automaton.RegExpMatcher.REString rEString92 = regExpMatcher63.matchesNOrMoreOccurences(rEString90, 100);
        java.lang.String str93 = rEString92.getString();
        st1920.automaton.RegExpMatcher.REString rEString95 = regExpMatcher0.matchesNOccurences(rEString92, 100);
        java.lang.Class<?> wildcardClass96 = rEString92.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test323");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher5.makeParenthesis(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher0.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher21.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher29.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher34 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = null;
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher34.repeatZeroOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher34.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher29.matchesAnyChar(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher26.makeParenthesis(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher21.matchesAnyChar(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher42 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher42.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher21.repeatOneOrMore(rEString44);
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher0.eitherPattern(rEString44, rEString49);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher55 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString56 = null;
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher55.repeatZeroOrMore(rEString56);
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher55.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher52.matchesAnyChar(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher52.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher62 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString63 = null;
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher62.repeatZeroOrMore(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher62.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher62.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher0.eitherPattern(rEString61, rEString69);
        st1920.automaton.RegExpMatcher.MatchString matchString71 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher.MatchString matchString72 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.MatchString matchString73 = regExpMatcher0.makeAlpha();
        java.lang.String str74 = matchString73.getString();
        java.lang.String str75 = matchString73.getString();
        java.lang.String str76 = matchString73.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str74 + "' != '" + "a" + "'", str74.equals("a"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str75 + "' != '" + "a" + "'", str75.equals("a"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "a" + "'", str76.equals("a"));
    }

    @Test
    public void test324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test324");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher8.matchesAnyChar(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher0.repeatZeroOrMore(rEString16);
        st1920.automaton.RegExpMatcher.MatchString matchString18 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher19.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher31 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString32 = null;
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher31.repeatZeroOrMore(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher31.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher36 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString37 = null;
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher36.repeatZeroOrMore(rEString37);
        st1920.automaton.RegExpMatcher regExpMatcher39 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString40 = null;
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher39.repeatZeroOrMore(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher39.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher44 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString45 = null;
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher44.repeatZeroOrMore(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher44.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher39.matchesAnyChar(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher36.makeParenthesis(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher31.matchesAnyChar(rEString49);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher31.repeatOneOrMore(rEString54);
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher19.matchesNToMOccurences(rEString55, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher19.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher19.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher0.matchesAnyChar(rEString61);
        java.lang.String str63 = rEString61.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str63 + "' != '" + "[^]" + "'", str63.equals("[^]"));
    }

    @Test
    public void test325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test325");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher10 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString11 = null;
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher10.repeatZeroOrMore(rEString11);
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher10.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher5.matchesAnyChar(rEString14);
        java.lang.String str16 = rEString14.getString();
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher20.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher17.makeParenthesis(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher0.bothPatterns(rEString14, rEString31);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher0.matchesNumBetweenNandM((int) (short) 0, (int) ' ');
        st1920.automaton.RegExpMatcher.REString rEString37 = new st1920.automaton.RegExpMatcher.REString("");
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher0.excludePattern(rEString37);
        st1920.automaton.RegExpMatcher.MatchString matchString41 = regExpMatcher0.makeConcatenation("hi!hi!", "a");
        st1920.automaton.RegExpMatcher.MatchString matchString44 = regExpMatcher0.makeConcatenation("a", "hi!");
        st1920.automaton.RegExpMatcher regExpMatcher45 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString46 = null;
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher45.repeatZeroOrMore(rEString46);
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher45.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher50 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString51 = null;
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher50.repeatZeroOrMore(rEString51);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher50.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher45.matchesAnyChar(rEString54);
        st1920.automaton.RegExpMatcher.MatchString matchString58 = regExpMatcher45.makeConcatenation("hi!hi!", "[^hi!]");
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher45.matchesBracketChars("hi!");
        st1920.automaton.RegExpMatcher.MatchString matchString63 = regExpMatcher45.makeConcatenation("1", "hi!");
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher45.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher45.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher66 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString67 = null;
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher66.repeatZeroOrMore(rEString67);
        st1920.automaton.RegExpMatcher regExpMatcher69 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString70 = null;
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher69.repeatZeroOrMore(rEString70);
        st1920.automaton.RegExpMatcher regExpMatcher72 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString73 = null;
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher72.repeatZeroOrMore(rEString73);
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher72.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher77 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString78 = null;
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher77.repeatZeroOrMore(rEString78);
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher77.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher72.matchesAnyChar(rEString81);
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher69.makeParenthesis(rEString82);
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher66.matchesNOrMoreOccurences(rEString82, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString87 = regExpMatcher66.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString88 = regExpMatcher0.followPattern(rEString65, rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "[^hi!]" + "'", str16.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
    }

    @Test
    public void test326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test326");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString5 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.MatchString matchString8 = regExpMatcher0.makeConcatenation("@", "[^hi!]hi!hi!");
        java.lang.Class<?> wildcardClass9 = regExpMatcher0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test327");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher10 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString11 = null;
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher10.repeatZeroOrMore(rEString11);
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher10.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher5.matchesAnyChar(rEString14);
        java.lang.String str16 = rEString14.getString();
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher20.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher17.makeParenthesis(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher0.bothPatterns(rEString14, rEString31);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher0.matchesNumBetweenNandM((int) (short) 0, (int) ' ');
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher0.matchesNumBetweenNandM((int) 'a', (int) (byte) 100);
        st1920.automaton.RegExpMatcher.MatchString matchString39 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher0.matchesBracketChars("[[^hi!]hi!hi!]");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "[^hi!]" + "'", str16.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
    }

    @Test
    public void test328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test328");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher12.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher23 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString24 = null;
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher23.repeatZeroOrMore(rEString24);
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher23.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher20.matchesAnyChar(rEString27);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher12.repeatZeroOrMore(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher12.matchesNumBetweenNandM(0, (int) ' ');
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = null;
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher33.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher33.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher38.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher38.matchesAnyChar(rEString47);
        java.lang.String str49 = rEString47.getString();
        st1920.automaton.RegExpMatcher regExpMatcher50 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString51 = null;
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher50.repeatZeroOrMore(rEString51);
        st1920.automaton.RegExpMatcher regExpMatcher53 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString54 = null;
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher53.repeatZeroOrMore(rEString54);
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher53.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher58 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString59 = null;
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher58.repeatZeroOrMore(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher58.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher53.matchesAnyChar(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher50.makeParenthesis(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher33.bothPatterns(rEString47, rEString64);
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher12.repeatZeroOrMore(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher0.makeParenthesis(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher0.matchesNoBracketChars("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "[^hi!]" + "'", str49.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
    }

    @Test
    public void test329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test329");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher20.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher17.makeParenthesis(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher12.matchesAnyChar(rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher12.repeatOneOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher0.matchesNToMOccurences(rEString36, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.MatchString matchString41 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher regExpMatcher42 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString43 = null;
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher42.repeatZeroOrMore(rEString43);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher42.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher42.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher47 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = null;
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher47.repeatZeroOrMore(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher47.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = null;
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.repeatZeroOrMore(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher52.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher47.matchesAnyChar(rEString56);
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher47.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher59 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString60 = null;
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher59.repeatZeroOrMore(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher59.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher64 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString65 = null;
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher64.repeatZeroOrMore(rEString65);
        st1920.automaton.RegExpMatcher regExpMatcher67 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString68 = null;
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher67.repeatZeroOrMore(rEString68);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher67.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher72 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString73 = null;
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher72.repeatZeroOrMore(rEString73);
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher72.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher67.matchesAnyChar(rEString76);
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher64.makeParenthesis(rEString77);
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher59.matchesAnyChar(rEString77);
        st1920.automaton.RegExpMatcher regExpMatcher80 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher80.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher59.repeatOneOrMore(rEString82);
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher47.matchesNToMOccurences(rEString83, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString87 = regExpMatcher47.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString89 = regExpMatcher47.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString92 = regExpMatcher47.matchesNumBetweenNandM(1, (int) (short) -1);
        st1920.automaton.RegExpMatcher.REString rEString93 = regExpMatcher42.makeParenthesis(rEString92);
        st1920.automaton.RegExpMatcher.REString rEString94 = regExpMatcher42.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString95 = regExpMatcher0.makeParenthesis(rEString94);
        st1920.automaton.RegExpMatcher.MatchString matchString96 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher.REString rEString98 = regExpMatcher0.matchesString("null+");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
    }

    @Test
    public void test330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test330");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesNoBracketChars("[^hi!]");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher16.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher21.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher16.matchesAnyChar(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher13.makeParenthesis(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher8.matchesAnyChar(rEString26);
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher8.repeatOneOrMore(rEString31);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = null;
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher regExpMatcher36 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString37 = null;
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher36.repeatZeroOrMore(rEString37);
        st1920.automaton.RegExpMatcher regExpMatcher39 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString40 = null;
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher39.repeatZeroOrMore(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher39.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher44 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString45 = null;
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher44.repeatZeroOrMore(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher44.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher39.matchesAnyChar(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher36.makeParenthesis(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher33.matchesNOrMoreOccurences(rEString49, (int) (byte) -1);
        st1920.automaton.RegExpMatcher regExpMatcher53 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString54 = null;
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher53.repeatZeroOrMore(rEString54);
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher53.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher53.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher8.eitherPattern(rEString52, rEString58);
        java.lang.String str60 = rEString52.getString();
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher0.repeatZeroOrOne(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
    }

    @Test
    public void test331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test331");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher8.matchesAnyChar(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher0.repeatZeroOrMore(rEString16);
        st1920.automaton.RegExpMatcher regExpMatcher18 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString19 = null;
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher18.repeatZeroOrMore(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher18.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher18.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher23 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString24 = null;
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher23.repeatZeroOrMore(rEString24);
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher23.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString29 = null;
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.repeatZeroOrMore(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher28.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher23.matchesAnyChar(rEString32);
        java.lang.String str34 = rEString32.getString();
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher38.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher38.matchesAnyChar(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher35.makeParenthesis(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher18.bothPatterns(rEString32, rEString49);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher18.matchesNumBetweenNandM((int) (short) 0, (int) ' ');
        st1920.automaton.RegExpMatcher.REString rEString55 = new st1920.automaton.RegExpMatcher.REString("");
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher18.excludePattern(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher0.repeatZeroOrOne(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString62 = regExpMatcher0.makeConcatenation("@", "null+");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "[^hi!]" + "'", str34.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
    }

    @Test
    public void test332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test332");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher4 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString5 = null;
        st1920.automaton.RegExpMatcher.REString rEString6 = regExpMatcher4.repeatZeroOrMore(rEString5);
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher4.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher4.matchesAnyChar(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher4.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher16.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher29.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher24.matchesAnyChar(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher21.makeParenthesis(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher16.matchesAnyChar(rEString34);
        st1920.automaton.RegExpMatcher regExpMatcher37 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher37.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher16.repeatOneOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher4.matchesNToMOccurences(rEString40, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher4.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher4.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher0.matchesNToMOccurences(rEString46, (int) (byte) 10, (int) ' ');
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher0.matchesAnyString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
    }

    @Test
    public void test333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test333");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher12.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher16.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher21.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher16.matchesAnyChar(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher16.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString29 = null;
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.repeatZeroOrMore(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher28.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = null;
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher regExpMatcher36 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString37 = null;
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher36.repeatZeroOrMore(rEString37);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher36.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher41 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = null;
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher41.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher41.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher36.matchesAnyChar(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher33.makeParenthesis(rEString46);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher28.matchesAnyChar(rEString46);
        st1920.automaton.RegExpMatcher regExpMatcher49 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher49.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher28.repeatOneOrMore(rEString51);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher16.matchesNToMOccurences(rEString52, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher16.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher16.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher12.matchesNToMOccurences(rEString58, (int) (byte) 10, (int) ' ');
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher12.makeAlphareg();
        st1920.automaton.RegExpMatcher.MatchString matchString63 = regExpMatcher12.makeNum();
        st1920.automaton.RegExpMatcher.MatchString matchString66 = regExpMatcher12.makeConcatenation("hi!", "");
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher12.matchesString("[^hi!]");
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher0.makeParenthesis(rEString68);
        st1920.automaton.RegExpMatcher regExpMatcher70 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString71 = null;
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher70.repeatZeroOrMore(rEString71);
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher70.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher70.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher76 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString77 = null;
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher76.repeatZeroOrMore(rEString77);
        st1920.automaton.RegExpMatcher regExpMatcher79 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString80 = null;
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher79.repeatZeroOrMore(rEString80);
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher79.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher84 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString85 = null;
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher84.repeatZeroOrMore(rEString85);
        st1920.automaton.RegExpMatcher.REString rEString88 = regExpMatcher84.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString89 = regExpMatcher79.matchesAnyChar(rEString88);
        st1920.automaton.RegExpMatcher.REString rEString90 = regExpMatcher76.makeParenthesis(rEString89);
        st1920.automaton.RegExpMatcher.REString rEString91 = regExpMatcher70.matchesAnyChar(rEString89);
        st1920.automaton.RegExpMatcher.MatchString matchString92 = regExpMatcher70.makeNum();
        st1920.automaton.RegExpMatcher.REString rEString93 = regExpMatcher70.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString94 = regExpMatcher0.repeatOneOrMore(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
    }

    @Test
    public void test334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test334");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString6 = regExpMatcher0.makeConcatenation("hi!", "hi!");
        st1920.automaton.RegExpMatcher.MatchString matchString7 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher regExpMatcher27 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString28 = null;
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher27.repeatZeroOrMore(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher27.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher32.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher27.matchesAnyChar(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher24.makeParenthesis(rEString37);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher8.eitherPattern(rEString22, rEString38);
        st1920.automaton.RegExpMatcher regExpMatcher40 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher40.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher8.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher0.makeParenthesis(rEString43);
        st1920.automaton.RegExpMatcher regExpMatcher45 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString46 = null;
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher45.repeatZeroOrMore(rEString46);
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher45.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher45.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher45.matchesString("[^hi!]");
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher45.matchesBracketChars("hi!hi!");
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher0.matchesNOccurences(rEString54, (int) (byte) -1);
        java.lang.Class<?> wildcardClass57 = regExpMatcher0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test335");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher32.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher37 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString38 = null;
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher37.repeatZeroOrMore(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher37.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher32.matchesAnyChar(rEString41);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher32.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher44 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString45 = null;
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher44.repeatZeroOrMore(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher44.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher49 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString50 = null;
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher49.repeatZeroOrMore(rEString50);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = null;
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.repeatZeroOrMore(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher52.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher57 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = null;
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher57.repeatZeroOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher57.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher52.matchesAnyChar(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher49.makeParenthesis(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher44.matchesAnyChar(rEString62);
        st1920.automaton.RegExpMatcher regExpMatcher65 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher65.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher44.repeatOneOrMore(rEString67);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher32.matchesNToMOccurences(rEString68, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher32.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher32.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher0.matchesNOccurences(rEString74, (int) '#');
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher0.matchesNoBracketChars("hi!hi!");
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher0.matchesNumBetweenNandM(1, (int) 'a');
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
    }

    @Test
    public void test336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test336");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher4 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString5 = null;
        st1920.automaton.RegExpMatcher.REString rEString6 = regExpMatcher4.repeatZeroOrMore(rEString5);
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher4.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher4.matchesAnyChar(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher4.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher16.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher29.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher24.matchesAnyChar(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher21.makeParenthesis(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher16.matchesAnyChar(rEString34);
        st1920.automaton.RegExpMatcher regExpMatcher37 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher37.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher16.repeatOneOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher4.matchesNToMOccurences(rEString40, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher4.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher4.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher0.matchesNToMOccurences(rEString46, (int) (byte) 10, (int) ' ');
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher51 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString52 = null;
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher51.repeatZeroOrMore(rEString52);
        st1920.automaton.RegExpMatcher regExpMatcher54 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString55 = null;
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher54.repeatZeroOrMore(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher54.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher59 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString60 = null;
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher59.repeatZeroOrMore(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher59.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher54.matchesAnyChar(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher51.makeParenthesis(rEString64);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher51.matchesString("#");
        st1920.automaton.RegExpMatcher regExpMatcher68 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString69 = null;
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher68.repeatZeroOrMore(rEString69);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher68.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher0.bothPatterns(rEString67, rEString71);
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher0.matchesBracketChars("@");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
    }

    @Test
    public void test337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test337");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher0.makeAlphareg();
        java.lang.String str9 = rEString8.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "a" + "'", str9.equals("a"));
    }

    @Test
    public void test338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test338");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher20.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher17.makeParenthesis(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher12.matchesAnyChar(rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher12.repeatOneOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher0.matchesNToMOccurences(rEString36, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher0.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher0.matchesNumBetweenNandM(1, (int) (short) -1);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher0.matchesString("");
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher0.matchesBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher0.matchesNumBetweenNandM((int) (short) 10, 1);
        st1920.automaton.RegExpMatcher.MatchString matchString53 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher0.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString57 = null;
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.repeatZeroOrMore(rEString57);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher56.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher56.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher62 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher62.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher65 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString66 = null;
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher65.repeatZeroOrMore(rEString66);
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher65.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher62.matchesAnyChar(rEString69);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher62.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher56.repeatOneOrMore(rEString71);
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher56.matchesBracketChars("1");
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher56.matchesNumBetweenNandM((int) (byte) -1, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher56.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher0.excludePattern(rEString78);
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher0.makeNumreg();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
    }

    @Test
    public void test339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test339");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString15 = null;
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.repeatZeroOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher9.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher6.makeParenthesis(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesAnyChar(rEString19);
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher22.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher22.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher31 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString32 = null;
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher31.repeatZeroOrMore(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher31.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher28.matchesAnyChar(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher28.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher22.repeatOneOrMore(rEString37);
        st1920.automaton.RegExpMatcher regExpMatcher39 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString40 = null;
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher39.repeatZeroOrMore(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher39.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher48 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher48.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher regExpMatcher51 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString52 = null;
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher51.repeatZeroOrMore(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher51.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString57 = null;
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.repeatZeroOrMore(rEString57);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher56.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher51.matchesAnyChar(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher48.makeParenthesis(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher43.matchesAnyChar(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher39.repeatZeroOrOne(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher0.followPattern(rEString38, rEString64);
        st1920.automaton.RegExpMatcher.MatchString matchString68 = regExpMatcher0.makeConcatenation("", "1");
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher0.matchesNoBracketChars("1");
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher0.matchesNumBetweenNandM((int) (short) -1, (int) (short) 0);
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher0.matchesAnyString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
    }

    @Test
    public void test340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test340");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher4 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString5 = null;
        st1920.automaton.RegExpMatcher.REString rEString6 = regExpMatcher4.repeatZeroOrMore(rEString5);
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher4.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher4.matchesAnyChar(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher4.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher16.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher29.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher24.matchesAnyChar(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher21.makeParenthesis(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher16.matchesAnyChar(rEString34);
        st1920.automaton.RegExpMatcher regExpMatcher37 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher37.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher16.repeatOneOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher4.matchesNToMOccurences(rEString40, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher4.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher4.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher0.matchesNToMOccurences(rEString46, (int) (byte) 10, (int) ' ');
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher51 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString52 = null;
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher51.repeatZeroOrMore(rEString52);
        st1920.automaton.RegExpMatcher regExpMatcher54 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString55 = null;
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher54.repeatZeroOrMore(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher54.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher59 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString60 = null;
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher59.repeatZeroOrMore(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher59.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher54.matchesAnyChar(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher51.makeParenthesis(rEString64);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher51.matchesString("#");
        st1920.automaton.RegExpMatcher regExpMatcher68 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString69 = null;
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher68.repeatZeroOrMore(rEString69);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher68.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher0.bothPatterns(rEString67, rEString71);
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher0.matchesString("@");
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher0.matchesString("<10-1>");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
    }

    @Test
    public void test341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test341");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher6.matchesAnyChar(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher6.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher0.repeatOneOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher0.matchesBracketChars("1");
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher regExpMatcher30 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher30.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher30.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher38.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher38.matchesAnyChar(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher35.makeParenthesis(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher19.eitherPattern(rEString33, rEString49);
        st1920.automaton.RegExpMatcher regExpMatcher51 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString52 = null;
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher51.repeatZeroOrMore(rEString52);
        st1920.automaton.RegExpMatcher regExpMatcher54 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString55 = null;
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher54.repeatZeroOrMore(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher54.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher59 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString60 = null;
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher59.repeatZeroOrMore(rEString60);
        st1920.automaton.RegExpMatcher regExpMatcher62 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString63 = null;
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher62.repeatZeroOrMore(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher62.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher67 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString68 = null;
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher67.repeatZeroOrMore(rEString68);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher67.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher62.matchesAnyChar(rEString71);
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher59.makeParenthesis(rEString72);
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher54.matchesAnyChar(rEString72);
        st1920.automaton.RegExpMatcher regExpMatcher75 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher75.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher54.repeatOneOrMore(rEString77);
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher51.matchesNOrMoreOccurences(rEString78, 100);
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher19.matchesAnyChar(rEString80);
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher19.matchesString("");
        st1920.automaton.RegExpMatcher regExpMatcher84 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher84.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher87 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString88 = null;
        st1920.automaton.RegExpMatcher.REString rEString89 = regExpMatcher87.repeatZeroOrMore(rEString88);
        st1920.automaton.RegExpMatcher.REString rEString91 = regExpMatcher87.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString92 = regExpMatcher84.matchesAnyChar(rEString91);
        st1920.automaton.RegExpMatcher.REString rEString93 = regExpMatcher19.repeatOneOrMore(rEString91);
        st1920.automaton.RegExpMatcher.REString rEString96 = regExpMatcher0.matchesNToMOccurences(rEString91, (int) (byte) 10, (int) (byte) 1);
        st1920.automaton.RegExpMatcher.REString rEString98 = regExpMatcher0.matchesBracketChars("<10-1>");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
    }

    @Test
    public void test342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test342");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher20.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher17.makeParenthesis(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher12.matchesAnyChar(rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher12.repeatOneOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher0.matchesNToMOccurences(rEString36, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher0.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher0.matchesNumBetweenNandM(1, (int) (short) -1);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher0.matchesString("");
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher0.matchesBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher0.matchesNumBetweenNandM((int) (short) 10, 1);
        st1920.automaton.RegExpMatcher.MatchString matchString53 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher.MatchString matchString54 = regExpMatcher0.makeNum();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
    }

    @Test
    public void test343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test343");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher35.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher40 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString41 = null;
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher40.repeatZeroOrMore(rEString41);
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher48 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher48.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher48.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher43.matchesAnyChar(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher40.makeParenthesis(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher35.matchesAnyChar(rEString53);
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher35.repeatOneOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher32.matchesNOrMoreOccurences(rEString59, 100);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher0.matchesAnyChar(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher0.matchesString("");
        st1920.automaton.RegExpMatcher regExpMatcher65 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher65.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher68 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString69 = null;
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher68.repeatZeroOrMore(rEString69);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher68.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher65.matchesAnyChar(rEString72);
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher0.repeatOneOrMore(rEString72);
        st1920.automaton.RegExpMatcher.MatchString matchString77 = regExpMatcher0.makeConcatenation("", "a");
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher0.matchesString("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
    }

    @Test
    public void test344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test344");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher8.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher0.excludePattern(rEString11);
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher18 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString19 = null;
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher18.repeatZeroOrMore(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher18.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher13.matchesAnyChar(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher13.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher30 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString31 = null;
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher30.repeatZeroOrMore(rEString31);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = null;
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher33.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher38.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher33.matchesAnyChar(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher30.makeParenthesis(rEString43);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher25.matchesAnyChar(rEString43);
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher25.repeatOneOrMore(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher13.matchesNToMOccurences(rEString49, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher13.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher13.matchesBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString57 = null;
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.repeatZeroOrMore(rEString57);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher56.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher61 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString62 = null;
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher61.repeatZeroOrMore(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher61.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher56.matchesAnyChar(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher56.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher56.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher56.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher0.bothPatterns(rEString55, rEString69);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher0.matchesNoBracketChars("a");
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher0.matchesString("[^hi!]hi!hi!");
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher0.matchesNoBracketChars("hi!hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
    }

    @Test
    public void test345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test345");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher6.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher6.matchesAnyChar(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher3.makeParenthesis(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher0.matchesNOrMoreOccurences(rEString16, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher0.matchesNumBetweenNandM((int) (short) 0, 1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
    }

    @Test
    public void test346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test346");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher5.makeParenthesis(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher0.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher0.repeatOneOrMore(rEString23);
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString29 = null;
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.repeatZeroOrMore(rEString29);
        st1920.automaton.RegExpMatcher regExpMatcher31 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString32 = null;
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher31.repeatZeroOrMore(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher31.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher36 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString37 = null;
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher36.repeatZeroOrMore(rEString37);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher36.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher31.matchesAnyChar(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher28.makeParenthesis(rEString41);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher25.matchesNOrMoreOccurences(rEString41, (int) (byte) -1);
        st1920.automaton.RegExpMatcher regExpMatcher45 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString46 = null;
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher45.repeatZeroOrMore(rEString46);
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher45.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher45.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher0.eitherPattern(rEString44, rEString50);
        java.lang.String str52 = rEString51.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
    }

    @Test
    public void test347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test347");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher3.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher16.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher11.matchesAnyChar(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher8.makeParenthesis(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher3.matchesAnyChar(rEString21);
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher3.repeatOneOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher0.matchesNOrMoreOccurences(rEString27, 100);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.matchesNoBracketChars("[^hi!]");
        st1920.automaton.RegExpMatcher.MatchString matchString32 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = null;
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher regExpMatcher36 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString37 = null;
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher36.repeatZeroOrMore(rEString37);
        st1920.automaton.RegExpMatcher regExpMatcher39 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString40 = null;
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher39.repeatZeroOrMore(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher39.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher44 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString45 = null;
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher44.repeatZeroOrMore(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher44.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher39.matchesAnyChar(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher36.makeParenthesis(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher33.matchesNOrMoreOccurences(rEString49, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher33.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher33.matchesNoChar();
        boolean boolean56 = st1920.automaton.RegExpMatcher.matches(matchString32, rEString55);
        java.lang.String str57 = rEString55.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str57 + "' != '" + "#" + "'", str57.equals("#"));
    }

    @Test
    public void test348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test348");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesString("[^hi!]");
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher0.matchesBracketChars("hi!hi!");
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.matchesString("[[^hi!]hi!hi!]");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
    }

    @Test
    public void test349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test349");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher3.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher0.matchesAnyChar(rEString7);
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher9.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher9.matchesString("[^hi!]");
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher17.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher17.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher17.matchesString("[^hi!]hi!hi!");
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher9.repeatOneOrMore(rEString24);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher0.makeParenthesis(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
    }

    @Test
    public void test350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test350");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString15 = null;
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.repeatZeroOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher9.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher6.makeParenthesis(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesAnyChar(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher0.matchesString("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher24.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher30 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher30.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = null;
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher33.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher30.matchesAnyChar(rEString37);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher30.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher24.repeatOneOrMore(rEString39);
        st1920.automaton.RegExpMatcher.MatchString matchString41 = regExpMatcher24.makeAlpha();
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher24.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher0.repeatZeroOrOne(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
    }

    @Test
    public void test351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test351");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher5.makeParenthesis(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher0.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher0.repeatOneOrMore(rEString23);
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher25.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher30 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString31 = null;
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher30.repeatZeroOrMore(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher30.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher38.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher38.matchesAnyChar(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher35.makeParenthesis(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher30.matchesAnyChar(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher25.matchesAnyChar(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher25.matchesBracketChars("[^hi!]hi!hi!");
        st1920.automaton.RegExpMatcher regExpMatcher54 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString55 = null;
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher54.repeatZeroOrMore(rEString55);
        st1920.automaton.RegExpMatcher regExpMatcher57 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = null;
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher57.repeatZeroOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher57.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher62 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString63 = null;
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher62.repeatZeroOrMore(rEString63);
        st1920.automaton.RegExpMatcher regExpMatcher65 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString66 = null;
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher65.repeatZeroOrMore(rEString66);
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher65.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher70 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString71 = null;
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher70.repeatZeroOrMore(rEString71);
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher70.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher65.matchesAnyChar(rEString74);
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher62.makeParenthesis(rEString75);
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher57.matchesAnyChar(rEString75);
        st1920.automaton.RegExpMatcher regExpMatcher78 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher78.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher57.repeatOneOrMore(rEString80);
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher54.matchesNOrMoreOccurences(rEString81, 100);
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher0.bothPatterns(rEString53, rEString83);
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher0.makeAlphareg();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
    }

    @Test
    public void test352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test352");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString8 = regExpMatcher0.makeConcatenation("", "1");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesBracketChars("1");
        st1920.automaton.RegExpMatcher.MatchString matchString13 = regExpMatcher0.makeConcatenation("null*", "hi!");
        java.lang.Class<?> wildcardClass14 = matchString13.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test353");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher8.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher0.excludePattern(rEString11);
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher18 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString19 = null;
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher18.repeatZeroOrMore(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher18.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher13.matchesAnyChar(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher13.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher30 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString31 = null;
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher30.repeatZeroOrMore(rEString31);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = null;
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher33.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher38.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher33.matchesAnyChar(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher30.makeParenthesis(rEString43);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher25.matchesAnyChar(rEString43);
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher25.repeatOneOrMore(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher13.matchesNToMOccurences(rEString49, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher13.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher13.matchesBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString57 = null;
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.repeatZeroOrMore(rEString57);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher56.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher61 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString62 = null;
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher61.repeatZeroOrMore(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher61.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher56.matchesAnyChar(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher56.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher56.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher56.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher0.bothPatterns(rEString55, rEString69);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher0.matchesNoBracketChars("null*");
        st1920.automaton.RegExpMatcher regExpMatcher74 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString75 = null;
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher74.repeatZeroOrMore(rEString75);
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher74.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher79 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString80 = null;
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher79.repeatZeroOrMore(rEString80);
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher79.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher74.matchesAnyChar(rEString83);
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher74.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher74.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString87 = regExpMatcher74.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString88 = regExpMatcher0.makeParenthesis(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
    }

    @Test
    public void test354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test354");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString15 = null;
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.repeatZeroOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher9.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher6.makeParenthesis(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesAnyChar(rEString19);
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher22.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher22.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher31 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString32 = null;
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher31.repeatZeroOrMore(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher31.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher28.matchesAnyChar(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher28.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher22.repeatOneOrMore(rEString37);
        st1920.automaton.RegExpMatcher regExpMatcher39 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString40 = null;
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher39.repeatZeroOrMore(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher39.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher48 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher48.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher regExpMatcher51 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString52 = null;
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher51.repeatZeroOrMore(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher51.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString57 = null;
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.repeatZeroOrMore(rEString57);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher56.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher51.matchesAnyChar(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher48.makeParenthesis(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher43.matchesAnyChar(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher39.repeatZeroOrOne(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher0.followPattern(rEString38, rEString64);
        st1920.automaton.RegExpMatcher.MatchString matchString68 = regExpMatcher0.makeConcatenation("", "1");
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher0.matchesNoBracketChars("1");
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher0.matchesNumBetweenNandM((int) (short) -1, (int) (short) 0);
        st1920.automaton.RegExpMatcher regExpMatcher74 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString75 = null;
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher74.repeatZeroOrMore(rEString75);
        st1920.automaton.RegExpMatcher regExpMatcher77 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString78 = null;
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher77.repeatZeroOrMore(rEString78);
        st1920.automaton.RegExpMatcher regExpMatcher80 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString81 = null;
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher80.repeatZeroOrMore(rEString81);
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher80.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher85 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString86 = null;
        st1920.automaton.RegExpMatcher.REString rEString87 = regExpMatcher85.repeatZeroOrMore(rEString86);
        st1920.automaton.RegExpMatcher.REString rEString89 = regExpMatcher85.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString90 = regExpMatcher80.matchesAnyChar(rEString89);
        st1920.automaton.RegExpMatcher.REString rEString91 = regExpMatcher77.makeParenthesis(rEString90);
        st1920.automaton.RegExpMatcher.REString rEString93 = regExpMatcher74.matchesNOrMoreOccurences(rEString90, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString94 = regExpMatcher0.makeParenthesis(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
    }

    @Test
    public void test355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test355");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher35.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher40 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString41 = null;
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher40.repeatZeroOrMore(rEString41);
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher48 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher48.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher48.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher43.matchesAnyChar(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher40.makeParenthesis(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher35.matchesAnyChar(rEString53);
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher35.repeatOneOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher32.matchesNOrMoreOccurences(rEString59, 100);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher0.matchesAnyChar(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher65 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString66 = null;
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher65.repeatZeroOrMore(rEString66);
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher65.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher65.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher65.matchesNoBracketChars("[^hi!]");
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher0.matchesAnyChar(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
    }

    @Test
    public void test356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test356");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString15 = null;
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.repeatZeroOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher9.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher6.makeParenthesis(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesAnyChar(rEString19);
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher22.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher22.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher31 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString32 = null;
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher31.repeatZeroOrMore(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher31.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher28.matchesAnyChar(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher28.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher22.repeatOneOrMore(rEString37);
        st1920.automaton.RegExpMatcher regExpMatcher39 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString40 = null;
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher39.repeatZeroOrMore(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher39.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher48 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher48.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher regExpMatcher51 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString52 = null;
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher51.repeatZeroOrMore(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher51.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString57 = null;
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.repeatZeroOrMore(rEString57);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher56.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher51.matchesAnyChar(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher48.makeParenthesis(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher43.matchesAnyChar(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher39.repeatZeroOrOne(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher0.followPattern(rEString38, rEString64);
        st1920.automaton.RegExpMatcher.MatchString matchString68 = regExpMatcher0.makeConcatenation("", "1");
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher0.matchesNoBracketChars("1");
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher0.matchesNoChar();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
    }

    @Test
    public void test357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test357");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher8.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher0.excludePattern(rEString11);
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher18 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString19 = null;
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher18.repeatZeroOrMore(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher18.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher13.matchesAnyChar(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher13.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher30 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString31 = null;
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher30.repeatZeroOrMore(rEString31);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = null;
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher33.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher38.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher33.matchesAnyChar(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher30.makeParenthesis(rEString43);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher25.matchesAnyChar(rEString43);
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher25.repeatOneOrMore(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher13.matchesNToMOccurences(rEString49, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher13.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher13.matchesBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString57 = null;
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.repeatZeroOrMore(rEString57);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher56.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher61 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString62 = null;
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher61.repeatZeroOrMore(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher61.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher56.matchesAnyChar(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher56.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher56.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher56.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher0.bothPatterns(rEString55, rEString69);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher0.matchesNoBracketChars("a");
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher0.matchesString("[^hi!]hi!hi!");
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher0.matchesNoBracketChars("[^hi!]");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
    }

    @Test
    public void test358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test358");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher0.matchesNumBetweenNandM((int) 'a', 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
    }

    @Test
    public void test359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test359");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher35.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher40 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString41 = null;
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher40.repeatZeroOrMore(rEString41);
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher48 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher48.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher48.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher43.matchesAnyChar(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher40.makeParenthesis(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher35.matchesAnyChar(rEString53);
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher35.repeatOneOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher32.matchesNOrMoreOccurences(rEString59, 100);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher0.matchesAnyChar(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher0.matchesString("");
        st1920.automaton.RegExpMatcher regExpMatcher65 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher65.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher68 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString69 = null;
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher68.repeatZeroOrMore(rEString69);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher68.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher65.matchesAnyChar(rEString72);
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher0.repeatOneOrMore(rEString72);
        st1920.automaton.RegExpMatcher.MatchString matchString77 = regExpMatcher0.makeConcatenation("", "a");
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString81 = regExpMatcher0.makeConcatenation("1", "null*");
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher0.matchesString("1[^hi!]");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
    }

    @Test
    public void test360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test360");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString8 = regExpMatcher0.makeConcatenation("", "1");
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher9.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString15 = regExpMatcher9.makeNum();
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher16.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher21.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher16.matchesAnyChar(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher9.repeatOneOrMore(rEString25);
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString29 = null;
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.repeatZeroOrMore(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher28.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher28.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher9.repeatZeroOrOne(rEString33);
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher35.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher35.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher9.excludePattern(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher0.matchesNToMOccurences(rEString40, 10, 1);
        st1920.automaton.RegExpMatcher.MatchString matchString46 = regExpMatcher0.makeConcatenation("[^hi!]hi!hi!", "hi!");
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher0.matchesString("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
    }

    @Test
    public void test361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test361");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesString("[^hi!]");
        st1920.automaton.RegExpMatcher.MatchString matchString8 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher20.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher17.makeParenthesis(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher12.matchesAnyChar(rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher12.repeatOneOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher9.matchesNOrMoreOccurences(rEString36, 100);
        java.lang.String str39 = rEString38.getString();
        boolean boolean40 = st1920.automaton.RegExpMatcher.matches(matchString8, rEString38);
        java.lang.String str41 = matchString8.getString();
        java.lang.String str42 = matchString8.getString();
        java.lang.String str43 = matchString8.getString();
        java.lang.String str44 = matchString8.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str41 + "' != '" + "1" + "'", str41.equals("1"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str42 + "' != '" + "1" + "'", str42.equals("1"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str43 + "' != '" + "1" + "'", str43.equals("1"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str44 + "' != '" + "1" + "'", str44.equals("1"));
    }

    @Test
    public void test362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test362");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher20.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher17.makeParenthesis(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher12.matchesAnyChar(rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher12.repeatOneOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher0.matchesNToMOccurences(rEString36, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher41 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = null;
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher41.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher41.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString47 = null;
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.repeatZeroOrMore(rEString47);
        st1920.automaton.RegExpMatcher regExpMatcher49 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString50 = null;
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher49.repeatZeroOrMore(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher49.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher54 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString55 = null;
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher54.repeatZeroOrMore(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher54.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher49.matchesAnyChar(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher46.makeParenthesis(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher41.matchesAnyChar(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher41.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher41.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher0.matchesNToMOccurences(rEString64, 0, (int) 'a');
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher0.matchesAnyString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
    }

    @Test
    public void test363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test363");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString5 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.MatchString matchString8 = regExpMatcher0.makeConcatenation("@", "[^hi!]hi!hi!");
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher9.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString15 = regExpMatcher9.makeNum();
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher16.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher21.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher16.matchesAnyChar(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher9.repeatOneOrMore(rEString25);
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString29 = null;
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.repeatZeroOrMore(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher28.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher28.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher9.repeatZeroOrOne(rEString33);
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher35.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher35.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher9.excludePattern(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher0.repeatOneOrMore(rEString40);
        st1920.automaton.RegExpMatcher.MatchString matchString42 = regExpMatcher0.makeNum();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
    }

    @Test
    public void test364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test364");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher8.matchesAnyChar(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher0.repeatZeroOrMore(rEString16);
        st1920.automaton.RegExpMatcher regExpMatcher18 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString19 = null;
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher18.repeatZeroOrMore(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher18.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher18.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher23 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString24 = null;
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher23.repeatZeroOrMore(rEString24);
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher23.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString29 = null;
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.repeatZeroOrMore(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher28.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher23.matchesAnyChar(rEString32);
        java.lang.String str34 = rEString32.getString();
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher38.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher38.matchesAnyChar(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher35.makeParenthesis(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher18.bothPatterns(rEString32, rEString49);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher18.matchesNumBetweenNandM((int) (short) 0, (int) ' ');
        st1920.automaton.RegExpMatcher.REString rEString55 = new st1920.automaton.RegExpMatcher.REString("");
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher18.excludePattern(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher0.repeatZeroOrOne(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher59 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString60 = null;
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher59.repeatZeroOrMore(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher59.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher64 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString65 = null;
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher64.repeatZeroOrMore(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher64.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher59.matchesAnyChar(rEString68);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher59.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher0.excludePattern(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "[^hi!]" + "'", str34.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
    }

    @Test
    public void test365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test365");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher6.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher6.matchesAnyChar(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher3.makeParenthesis(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher0.matchesNOrMoreOccurences(rEString16, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher0.matchesNoBracketChars("[^hi!]hi!hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
    }

    @Test
    public void test366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test366");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher8.matchesAnyChar(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher0.repeatZeroOrMore(rEString16);
        st1920.automaton.RegExpMatcher regExpMatcher18 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString19 = null;
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher18.repeatZeroOrMore(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher18.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher18.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher23 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString24 = null;
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher23.repeatZeroOrMore(rEString24);
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher23.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString29 = null;
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.repeatZeroOrMore(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher28.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher23.matchesAnyChar(rEString32);
        java.lang.String str34 = rEString32.getString();
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher38.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher38.matchesAnyChar(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher35.makeParenthesis(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher18.bothPatterns(rEString32, rEString49);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher18.matchesNumBetweenNandM((int) (short) 0, (int) ' ');
        st1920.automaton.RegExpMatcher.REString rEString55 = new st1920.automaton.RegExpMatcher.REString("");
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher18.excludePattern(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher0.repeatZeroOrOne(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher0.matchesNoBracketChars("[]");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "[^hi!]" + "'", str34.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
    }

    @Test
    public void test367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test367");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString15 = null;
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.repeatZeroOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher9.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher6.makeParenthesis(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesAnyChar(rEString19);
        st1920.automaton.RegExpMatcher.MatchString matchString22 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher regExpMatcher23 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString24 = null;
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher23.repeatZeroOrMore(rEString24);
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher23.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher23.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher32.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher37 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString38 = null;
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher37.repeatZeroOrMore(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher37.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher32.matchesAnyChar(rEString41);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher29.makeParenthesis(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher23.matchesAnyChar(rEString42);
        st1920.automaton.RegExpMatcher regExpMatcher45 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString46 = null;
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher45.repeatZeroOrMore(rEString46);
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher45.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher45.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher51 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher51.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher54 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString55 = null;
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher54.repeatZeroOrMore(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher54.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher51.matchesAnyChar(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher51.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher45.repeatOneOrMore(rEString60);
        st1920.automaton.RegExpMatcher regExpMatcher62 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString63 = null;
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher62.repeatZeroOrMore(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher62.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher66 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString67 = null;
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher66.repeatZeroOrMore(rEString67);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher66.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher71 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString72 = null;
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher71.repeatZeroOrMore(rEString72);
        st1920.automaton.RegExpMatcher regExpMatcher74 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString75 = null;
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher74.repeatZeroOrMore(rEString75);
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher74.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher79 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString80 = null;
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher79.repeatZeroOrMore(rEString80);
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher79.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher74.matchesAnyChar(rEString83);
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher71.makeParenthesis(rEString84);
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher66.matchesAnyChar(rEString84);
        st1920.automaton.RegExpMatcher.REString rEString87 = regExpMatcher62.repeatZeroOrOne(rEString84);
        st1920.automaton.RegExpMatcher.REString rEString88 = regExpMatcher23.followPattern(rEString61, rEString87);
        st1920.automaton.RegExpMatcher.REString rEString89 = regExpMatcher0.excludePattern(rEString88);
        java.lang.Class<?> wildcardClass90 = regExpMatcher0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test368");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher17.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher12.matchesAnyChar(rEString21);
        st1920.automaton.RegExpMatcher.MatchString matchString25 = regExpMatcher12.makeConcatenation("hi!hi!", "[^hi!]");
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher26.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher31 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString32 = null;
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher31.repeatZeroOrMore(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher31.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher26.matchesAnyChar(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher26.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher38.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString47 = null;
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.repeatZeroOrMore(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher51 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString52 = null;
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher51.repeatZeroOrMore(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher51.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher46.matchesAnyChar(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher43.makeParenthesis(rEString56);
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher38.matchesAnyChar(rEString56);
        st1920.automaton.RegExpMatcher regExpMatcher59 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher59.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher38.repeatOneOrMore(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher26.matchesNToMOccurences(rEString62, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher26.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher26.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher12.makeParenthesis(rEString68);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher12.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher71 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString72 = null;
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher71.repeatZeroOrMore(rEString72);
        st1920.automaton.RegExpMatcher regExpMatcher74 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString75 = null;
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher74.repeatZeroOrMore(rEString75);
        st1920.automaton.RegExpMatcher regExpMatcher77 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString78 = null;
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher77.repeatZeroOrMore(rEString78);
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher77.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher82 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString83 = null;
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher82.repeatZeroOrMore(rEString83);
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher82.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString87 = regExpMatcher77.matchesAnyChar(rEString86);
        st1920.automaton.RegExpMatcher.REString rEString88 = regExpMatcher74.makeParenthesis(rEString87);
        st1920.automaton.RegExpMatcher.REString rEString90 = regExpMatcher71.matchesNOrMoreOccurences(rEString87, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString92 = regExpMatcher71.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString93 = regExpMatcher71.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString94 = regExpMatcher0.bothPatterns(rEString70, rEString93);
        st1920.automaton.RegExpMatcher.REString rEString96 = regExpMatcher0.matchesNoBracketChars("[^1]");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
    }

    @Test
    public void test369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test369");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher4 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString5 = null;
        st1920.automaton.RegExpMatcher.REString rEString6 = regExpMatcher4.repeatZeroOrMore(rEString5);
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher4.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher4.matchesAnyChar(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher4.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher16.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher29.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher24.matchesAnyChar(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher21.makeParenthesis(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher16.matchesAnyChar(rEString34);
        st1920.automaton.RegExpMatcher regExpMatcher37 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher37.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher16.repeatOneOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher4.matchesNToMOccurences(rEString40, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher4.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher4.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher0.matchesNToMOccurences(rEString46, (int) (byte) 10, (int) ' ');
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher51 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString52 = null;
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher51.repeatZeroOrMore(rEString52);
        st1920.automaton.RegExpMatcher regExpMatcher54 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString55 = null;
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher54.repeatZeroOrMore(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher54.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher59 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString60 = null;
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher59.repeatZeroOrMore(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher59.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher54.matchesAnyChar(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher51.makeParenthesis(rEString64);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher51.matchesString("#");
        st1920.automaton.RegExpMatcher regExpMatcher68 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString69 = null;
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher68.repeatZeroOrMore(rEString69);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher68.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher0.bothPatterns(rEString67, rEString71);
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher0.matchesString("@");
        st1920.automaton.RegExpMatcher.REString rEString76 = new st1920.automaton.RegExpMatcher.REString("");
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher0.matchesAnyChar(rEString76);
        st1920.automaton.RegExpMatcher regExpMatcher78 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString79 = null;
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher78.repeatZeroOrMore(rEString79);
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher78.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher78.matchesBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString87 = regExpMatcher0.matchesNToMOccurences(rEString84, 0, (int) '4');
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
    }

    @Test
    public void test370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test370");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher12.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher23 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString24 = null;
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher23.repeatZeroOrMore(rEString24);
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher23.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher20.matchesAnyChar(rEString27);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher12.repeatZeroOrMore(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher12.matchesNumBetweenNandM(0, (int) ' ');
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = null;
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher33.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher33.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher38.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher38.matchesAnyChar(rEString47);
        java.lang.String str49 = rEString47.getString();
        st1920.automaton.RegExpMatcher regExpMatcher50 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString51 = null;
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher50.repeatZeroOrMore(rEString51);
        st1920.automaton.RegExpMatcher regExpMatcher53 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString54 = null;
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher53.repeatZeroOrMore(rEString54);
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher53.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher58 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString59 = null;
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher58.repeatZeroOrMore(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher58.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher53.matchesAnyChar(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher50.makeParenthesis(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher33.bothPatterns(rEString47, rEString64);
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher12.repeatZeroOrMore(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher0.makeParenthesis(rEString47);
        st1920.automaton.RegExpMatcher regExpMatcher68 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString69 = null;
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher68.repeatZeroOrMore(rEString69);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher68.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher73 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString74 = null;
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher73.repeatZeroOrMore(rEString74);
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher73.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher68.matchesAnyChar(rEString77);
        java.lang.String str79 = rEString77.getString();
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher0.matchesNOccurences(rEString77, 10);
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher0.makeNumreg();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "[^hi!]" + "'", str49.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str79 + "' != '" + "[^hi!]" + "'", str79.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
    }

    @Test
    public void test371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test371");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher5.makeParenthesis(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher0.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher21.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher29.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher34 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = null;
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher34.repeatZeroOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher34.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher29.matchesAnyChar(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher26.makeParenthesis(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher21.matchesAnyChar(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher42 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher42.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher21.repeatOneOrMore(rEString44);
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher0.eitherPattern(rEString44, rEString49);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = null;
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.repeatZeroOrMore(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher52.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher0.matchesNToMOccurences(rEString56, (-1), 100);
        java.lang.Class<?> wildcardClass60 = regExpMatcher0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test372");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString15 = null;
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.repeatZeroOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher9.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher6.makeParenthesis(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesAnyChar(rEString19);
        st1920.automaton.RegExpMatcher.MatchString matchString22 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher24.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher.MatchString matchString32 = regExpMatcher24.makeAlpha();
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = null;
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher33.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher33.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher39 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher39.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher42 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString43 = null;
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher42.repeatZeroOrMore(rEString43);
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher42.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher39.matchesAnyChar(rEString46);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher39.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher33.repeatOneOrMore(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher33.matchesBracketChars("1");
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher33.matchesNumBetweenNandM((int) (byte) -1, (int) (byte) -1);
        st1920.automaton.RegExpMatcher regExpMatcher55 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString56 = null;
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher55.repeatZeroOrMore(rEString56);
        st1920.automaton.RegExpMatcher regExpMatcher58 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString59 = null;
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher58.repeatZeroOrMore(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher58.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher63 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString64 = null;
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher63.repeatZeroOrMore(rEString64);
        st1920.automaton.RegExpMatcher regExpMatcher66 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString67 = null;
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher66.repeatZeroOrMore(rEString67);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher66.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher71 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString72 = null;
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher71.repeatZeroOrMore(rEString72);
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher71.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher66.matchesAnyChar(rEString75);
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher63.makeParenthesis(rEString76);
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher58.matchesAnyChar(rEString76);
        st1920.automaton.RegExpMatcher regExpMatcher79 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher79.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher58.repeatOneOrMore(rEString81);
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher55.matchesNOrMoreOccurences(rEString82, 100);
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher55.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString87 = regExpMatcher55.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString88 = regExpMatcher24.bothPatterns(rEString54, rEString87);
        st1920.automaton.RegExpMatcher.REString rEString89 = regExpMatcher24.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString91 = new st1920.automaton.RegExpMatcher.REString("null*");
        st1920.automaton.RegExpMatcher.REString rEString92 = regExpMatcher0.eitherPattern(rEString89, rEString91);
        java.lang.String str93 = rEString92.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
    }

    @Test
    public void test373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test373");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString6 = regExpMatcher0.matchesBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher7 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString8 = null;
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher7.repeatZeroOrMore(rEString8);
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString8);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher11.makeAlphareg();
        st1920.automaton.RegExpMatcher.MatchString matchString15 = regExpMatcher11.makeAlpha();
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher16.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher21.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher16.matchesAnyChar(rEString25);
        st1920.automaton.RegExpMatcher regExpMatcher27 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher27.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher27.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher35.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher40 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString41 = null;
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher40.repeatZeroOrMore(rEString41);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher40.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher35.matchesAnyChar(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher32.makeParenthesis(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher16.eitherPattern(rEString30, rEString46);
        st1920.automaton.RegExpMatcher.MatchString matchString50 = regExpMatcher16.makeConcatenation("", "");
        st1920.automaton.RegExpMatcher.MatchString matchString51 = regExpMatcher16.makeAlpha();
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = null;
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.repeatZeroOrMore(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher52.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher57 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = null;
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher57.repeatZeroOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher57.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher52.matchesAnyChar(rEString61);
        st1920.automaton.RegExpMatcher regExpMatcher63 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher63.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString66 = null;
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher63.repeatZeroOrMore(rEString66);
        st1920.automaton.RegExpMatcher regExpMatcher68 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString69 = null;
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher68.repeatZeroOrMore(rEString69);
        st1920.automaton.RegExpMatcher regExpMatcher71 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString72 = null;
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher71.repeatZeroOrMore(rEString72);
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher71.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher76 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString77 = null;
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher76.repeatZeroOrMore(rEString77);
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher76.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher71.matchesAnyChar(rEString80);
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher68.makeParenthesis(rEString81);
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher52.eitherPattern(rEString66, rEString82);
        st1920.automaton.RegExpMatcher regExpMatcher84 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString85 = null;
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher84.repeatZeroOrMore(rEString85);
        st1920.automaton.RegExpMatcher.REString rEString88 = regExpMatcher84.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher89 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString90 = null;
        st1920.automaton.RegExpMatcher.REString rEString91 = regExpMatcher89.repeatZeroOrMore(rEString90);
        st1920.automaton.RegExpMatcher.REString rEString93 = regExpMatcher89.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString94 = regExpMatcher84.matchesAnyChar(rEString93);
        st1920.automaton.RegExpMatcher.REString rEString95 = regExpMatcher84.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString96 = regExpMatcher52.makeParenthesis(rEString95);
        boolean boolean97 = st1920.automaton.RegExpMatcher.matches(matchString51, rEString96);
        st1920.automaton.RegExpMatcher.REString rEString98 = regExpMatcher11.excludePattern(rEString96);
        st1920.automaton.RegExpMatcher.REString rEString99 = regExpMatcher0.repeatOneOrMore(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString99);
    }

    @Test
    public void test374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test374");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher5.makeParenthesis(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher0.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher21.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher29.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher34 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = null;
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher34.repeatZeroOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher34.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher29.matchesAnyChar(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher26.makeParenthesis(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher21.matchesAnyChar(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher42 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher42.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher21.repeatOneOrMore(rEString44);
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher0.eitherPattern(rEString44, rEString49);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = null;
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.repeatZeroOrMore(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher52.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher0.matchesNToMOccurences(rEString56, (-1), 100);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher0.matchesAnyString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
    }

    @Test
    public void test375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test375");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher6.matchesAnyChar(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher6.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher0.repeatOneOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher0.matchesBracketChars("1");
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher0.makeNumreg();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
    }

    @Test
    public void test376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test376");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString13 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher regExpMatcher15 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString16 = null;
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher15.repeatZeroOrMore(rEString16);
        st1920.automaton.RegExpMatcher regExpMatcher18 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString19 = null;
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher18.repeatZeroOrMore(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher18.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher23 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString24 = null;
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher23.repeatZeroOrMore(rEString24);
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher23.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher18.matchesAnyChar(rEString27);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher15.makeParenthesis(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher15.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher15.matchesNumBetweenNandM((int) (byte) 10, (int) '#');
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher0.bothPatterns(rEString14, rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
    }

    @Test
    public void test377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test377");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher8.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher0.excludePattern(rEString11);
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher18 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString19 = null;
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher18.repeatZeroOrMore(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher18.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher13.matchesAnyChar(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher13.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher30 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString31 = null;
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher30.repeatZeroOrMore(rEString31);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = null;
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher33.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher38.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher33.matchesAnyChar(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher30.makeParenthesis(rEString43);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher25.matchesAnyChar(rEString43);
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher25.repeatOneOrMore(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher13.matchesNToMOccurences(rEString49, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher13.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher13.matchesBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString57 = null;
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.repeatZeroOrMore(rEString57);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher56.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher61 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString62 = null;
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher61.repeatZeroOrMore(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher61.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher56.matchesAnyChar(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher56.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher56.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher56.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher0.bothPatterns(rEString55, rEString69);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString73 = new st1920.automaton.RegExpMatcher.REString("hi!hi!");
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher0.repeatZeroOrOne(rEString73);
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher0.matchesNumBetweenNandM((-1), 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
    }

    @Test
    public void test378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test378");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString15 = null;
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.repeatZeroOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher9.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher6.makeParenthesis(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesAnyChar(rEString19);
        st1920.automaton.RegExpMatcher.MatchString matchString22 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher0.matchesString("1");
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher0.matchesNumBetweenNandM((int) '4', (int) (byte) 1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
    }

    @Test
    public void test379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test379");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher6.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher6.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher16.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher11.matchesAnyChar(rEString20);
        java.lang.String str22 = rEString20.getString();
        st1920.automaton.RegExpMatcher regExpMatcher23 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString24 = null;
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher23.repeatZeroOrMore(rEString24);
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher26.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher31 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString32 = null;
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher31.repeatZeroOrMore(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher31.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher26.matchesAnyChar(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher23.makeParenthesis(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher6.bothPatterns(rEString20, rEString37);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher6.matchesNumBetweenNandM((int) (short) 0, (int) ' ');
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher6.matchesNumBetweenNandM((int) 'a', (int) (byte) 100);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher0.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.MatchString matchString46 = regExpMatcher0.makeAlpha();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "[^hi!]" + "'", str22.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
    }

    @Test
    public void test380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test380");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher3.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher16.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher11.matchesAnyChar(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher8.makeParenthesis(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher3.matchesAnyChar(rEString21);
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher3.repeatOneOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher0.matchesNOrMoreOccurences(rEString27, 100);
        st1920.automaton.RegExpMatcher regExpMatcher30 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString31 = null;
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher30.repeatZeroOrMore(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher30.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher38.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher38.matchesAnyChar(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher35.makeParenthesis(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher30.matchesAnyChar(rEString48);
        st1920.automaton.RegExpMatcher regExpMatcher51 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher51.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher30.repeatOneOrMore(rEString53);
        st1920.automaton.RegExpMatcher regExpMatcher55 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString56 = null;
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher55.repeatZeroOrMore(rEString56);
        st1920.automaton.RegExpMatcher regExpMatcher58 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString59 = null;
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher58.repeatZeroOrMore(rEString59);
        st1920.automaton.RegExpMatcher regExpMatcher61 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString62 = null;
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher61.repeatZeroOrMore(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher61.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher66 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString67 = null;
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher66.repeatZeroOrMore(rEString67);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher66.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher61.matchesAnyChar(rEString70);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher58.makeParenthesis(rEString71);
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher55.matchesNOrMoreOccurences(rEString71, (int) (byte) -1);
        st1920.automaton.RegExpMatcher regExpMatcher75 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString76 = null;
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher75.repeatZeroOrMore(rEString76);
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher75.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher75.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher30.eitherPattern(rEString74, rEString80);
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher0.matchesNToMOccurences(rEString74, (int) ' ', (int) '4');
        st1920.automaton.RegExpMatcher.MatchString matchString85 = regExpMatcher0.makeNum();
        java.lang.String str86 = matchString85.getString();
        java.lang.String str87 = matchString85.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str86 + "' != '" + "1" + "'", str86.equals("1"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str87 + "' != '" + "1" + "'", str87.equals("1"));
    }

    @Test
    public void test381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test381");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher10 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString11 = null;
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher10.repeatZeroOrMore(rEString11);
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher10.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher5.matchesAnyChar(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString19 = null;
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher16.repeatZeroOrMore(rEString19);
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher29.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher24.matchesAnyChar(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher21.makeParenthesis(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher5.eitherPattern(rEString19, rEString35);
        st1920.automaton.RegExpMatcher regExpMatcher37 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString38 = null;
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher37.repeatZeroOrMore(rEString38);
        st1920.automaton.RegExpMatcher regExpMatcher40 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString41 = null;
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher40.repeatZeroOrMore(rEString41);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher40.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher45 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString46 = null;
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher45.repeatZeroOrMore(rEString46);
        st1920.automaton.RegExpMatcher regExpMatcher48 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher48.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher48.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher53 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString54 = null;
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher53.repeatZeroOrMore(rEString54);
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher53.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher48.matchesAnyChar(rEString57);
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher45.makeParenthesis(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher40.matchesAnyChar(rEString58);
        st1920.automaton.RegExpMatcher regExpMatcher61 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher61.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher40.repeatOneOrMore(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher37.matchesNOrMoreOccurences(rEString64, 100);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher5.matchesAnyChar(rEString66);
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher5.matchesString("");
        st1920.automaton.RegExpMatcher regExpMatcher70 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher70.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher73 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString74 = null;
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher73.repeatZeroOrMore(rEString74);
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher73.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher70.matchesAnyChar(rEString77);
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher5.repeatOneOrMore(rEString77);
        st1920.automaton.RegExpMatcher.MatchString matchString82 = regExpMatcher5.makeConcatenation("", "a");
        st1920.automaton.RegExpMatcher regExpMatcher83 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString84 = null;
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher83.repeatZeroOrMore(rEString84);
        st1920.automaton.RegExpMatcher.REString rEString87 = regExpMatcher83.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher88 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString89 = null;
        st1920.automaton.RegExpMatcher.REString rEString90 = regExpMatcher88.repeatZeroOrMore(rEString89);
        st1920.automaton.RegExpMatcher.REString rEString92 = regExpMatcher88.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString93 = regExpMatcher83.matchesAnyChar(rEString92);
        st1920.automaton.RegExpMatcher.REString rEString94 = regExpMatcher5.matchesAnyChar(rEString93);
        st1920.automaton.RegExpMatcher.REString rEString96 = regExpMatcher0.matchesNOrMoreOccurences(rEString94, (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
    }

    @Test
    public void test382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test382");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher17.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher12.matchesAnyChar(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher12.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString26 = regExpMatcher12.makeConcatenation("hi!", "hi!");
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher12.matchesBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher12.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher0.repeatOneOrMore(rEString29);
        java.lang.Class<?> wildcardClass31 = regExpMatcher0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test383");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString14 = regExpMatcher0.makeAlpha();
        java.lang.Class<?> wildcardClass15 = matchString14.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test384");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString6 = regExpMatcher0.makeConcatenation("hi!", "hi!");
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher0.matchesNoBracketChars("1");
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.matchesBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher0.matchesBracketChars("@");
        st1920.automaton.RegExpMatcher.MatchString matchString14 = regExpMatcher0.makeNum();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
    }

    @Test
    public void test385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test385");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher20.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher17.makeParenthesis(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher12.matchesAnyChar(rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher12.repeatOneOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher0.matchesNToMOccurences(rEString36, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher0.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher0.matchesNumBetweenNandM(1, (int) (short) -1);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher0.matchesString("");
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher0.matchesBracketChars("hi!");
        st1920.automaton.RegExpMatcher.MatchString matchString52 = regExpMatcher0.makeConcatenation("[^hi!]hi!hi!", "[^hi!]");
        st1920.automaton.RegExpMatcher regExpMatcher53 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString54 = null;
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher53.repeatZeroOrMore(rEString54);
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString57 = null;
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.repeatZeroOrMore(rEString57);
        st1920.automaton.RegExpMatcher regExpMatcher59 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString60 = null;
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher59.repeatZeroOrMore(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher59.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher64 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString65 = null;
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher64.repeatZeroOrMore(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher64.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher59.matchesAnyChar(rEString68);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher56.makeParenthesis(rEString69);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher53.matchesNOrMoreOccurences(rEString69, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher53.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher53.matchesNoChar();
        st1920.automaton.RegExpMatcher regExpMatcher76 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString77 = null;
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher76.repeatZeroOrMore(rEString77);
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher76.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher76.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher76.matchesString("[^hi!]hi!hi!");
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher53.repeatZeroOrMore(rEString83);
        st1920.automaton.RegExpMatcher.REString rEString87 = regExpMatcher0.matchesNToMOccurences(rEString84, (int) (byte) 100, (int) (byte) -1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
    }

    @Test
    public void test386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test386");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher3.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher16.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher11.matchesAnyChar(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher8.makeParenthesis(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher3.matchesAnyChar(rEString21);
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher3.repeatOneOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher0.matchesNOrMoreOccurences(rEString27, 100);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.matchesString("");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
    }

    @Test
    public void test387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test387");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher6.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher6.matchesAnyChar(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher3.makeParenthesis(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher0.matchesNOrMoreOccurences(rEString16, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher22.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher27 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString28 = null;
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher27.repeatZeroOrMore(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher27.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher22.matchesAnyChar(rEString31);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher33.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher41 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = null;
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher41.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher41.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString47 = null;
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.repeatZeroOrMore(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher41.matchesAnyChar(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher38.makeParenthesis(rEString51);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher22.eitherPattern(rEString36, rEString52);
        st1920.automaton.RegExpMatcher regExpMatcher54 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString55 = null;
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher54.repeatZeroOrMore(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher54.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher59 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString60 = null;
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher59.repeatZeroOrMore(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher59.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher54.matchesAnyChar(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher54.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher22.makeParenthesis(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher0.repeatZeroOrMore(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher0.matchesBracketChars("[^hi!]");
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher0.matchesBracketChars("[^hi!]");
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher0.matchesNumBetweenNandM((int) '#', 0);
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher0.matchesNumBetweenNandM((int) (short) -1, 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
    }

    @Test
    public void test388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test388");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesString("#");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher11.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher11.repeatOneOrMore(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher8.matchesNOrMoreOccurences(rEString35, 100);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher8.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher0.repeatOneOrMore(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
    }

    @Test
    public void test389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test389");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher0.makeAlphareg();
        java.lang.String str10 = rEString9.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "a" + "'", str10.equals("a"));
    }

    @Test
    public void test390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test390");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher5.makeParenthesis(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher0.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString22 = regExpMatcher0.makeNum();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
    }

    @Test
    public void test391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test391");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString6 = regExpMatcher0.makeAlphareg();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
    }

    @Test
    public void test392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test392");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher8.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher0.excludePattern(rEString11);
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher18 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString19 = null;
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher18.repeatZeroOrMore(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher18.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher13.matchesAnyChar(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher13.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher30 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString31 = null;
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher30.repeatZeroOrMore(rEString31);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = null;
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher33.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher38.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher33.matchesAnyChar(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher30.makeParenthesis(rEString43);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher25.matchesAnyChar(rEString43);
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher25.repeatOneOrMore(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher13.matchesNToMOccurences(rEString49, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher13.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher13.matchesBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString57 = null;
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.repeatZeroOrMore(rEString57);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher56.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher61 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString62 = null;
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher61.repeatZeroOrMore(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher61.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher56.matchesAnyChar(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher56.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher56.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher56.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher0.bothPatterns(rEString55, rEString69);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString73 = new st1920.automaton.RegExpMatcher.REString("hi!hi!");
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher0.repeatZeroOrOne(rEString73);
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher0.makeNumreg();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
    }

    @Test
    public void test393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test393");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesString("[^hi!]");
        st1920.automaton.RegExpMatcher.MatchString matchString10 = regExpMatcher0.makeConcatenation("a", "[^[^hi!]]");
        java.lang.String str11 = matchString10.getString();
        java.lang.String str12 = matchString10.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "a[^[^hi!]]" + "'", str11.equals("a[^[^hi!]]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "a[^[^hi!]]" + "'", str12.equals("a[^[^hi!]]"));
    }

    @Test
    public void test394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test394");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher35.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher40 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString41 = null;
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher40.repeatZeroOrMore(rEString41);
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher48 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher48.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher48.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher43.matchesAnyChar(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher40.makeParenthesis(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher35.matchesAnyChar(rEString53);
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher35.repeatOneOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher32.matchesNOrMoreOccurences(rEString59, 100);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher0.matchesAnyChar(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher0.matchesString("");
        st1920.automaton.RegExpMatcher regExpMatcher65 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher65.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher68 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString69 = null;
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher68.repeatZeroOrMore(rEString69);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher68.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher65.matchesAnyChar(rEString72);
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher0.repeatOneOrMore(rEString72);
        st1920.automaton.RegExpMatcher.MatchString matchString77 = regExpMatcher0.makeConcatenation("", "a");
        st1920.automaton.RegExpMatcher regExpMatcher78 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString79 = null;
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher78.repeatZeroOrMore(rEString79);
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher78.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher83 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString84 = null;
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher83.repeatZeroOrMore(rEString84);
        st1920.automaton.RegExpMatcher.REString rEString87 = regExpMatcher83.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString88 = regExpMatcher78.matchesAnyChar(rEString87);
        st1920.automaton.RegExpMatcher.REString rEString89 = regExpMatcher0.matchesAnyChar(rEString88);
        st1920.automaton.RegExpMatcher.REString rEString91 = regExpMatcher0.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString92 = regExpMatcher0.makeAlphareg();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
    }

    @Test
    public void test395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test395");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher6.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher6.matchesAnyChar(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher3.makeParenthesis(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher0.matchesNOrMoreOccurences(rEString16, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher regExpMatcher27 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString28 = null;
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher27.repeatZeroOrMore(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher27.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher27.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher26.makeParenthesis(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher0.matchesNOrMoreOccurences(rEString34, (int) (byte) 1);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher0.matchesNoBracketChars("[^[^hi!]]");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
    }

    @Test
    public void test396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test396");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher20.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher17.makeParenthesis(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher12.matchesAnyChar(rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher12.repeatOneOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher0.matchesNToMOccurences(rEString36, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher0.matchesBracketChars("[^hi!]hi!hi!");
        st1920.automaton.RegExpMatcher regExpMatcher42 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString43 = null;
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher42.repeatZeroOrMore(rEString43);
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher42.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher42.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher regExpMatcher50 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher50.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher53 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString54 = null;
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher53.repeatZeroOrMore(rEString54);
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher53.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher50.matchesAnyChar(rEString57);
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher42.repeatZeroOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher0.matchesNOrMoreOccurences(rEString59, (int) (byte) 1);
        java.lang.Class<?> wildcardClass62 = rEString61.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test397");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.MatchString matchString7 = regExpMatcher0.makeConcatenation("[^hi!]", "");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher8.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher8.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher21.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher26.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher21.matchesAnyChar(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher21.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = null;
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher33.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher41 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = null;
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher41.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher41.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString47 = null;
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.repeatZeroOrMore(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher41.matchesAnyChar(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher38.makeParenthesis(rEString51);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher33.matchesAnyChar(rEString51);
        st1920.automaton.RegExpMatcher regExpMatcher54 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher54.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher33.repeatOneOrMore(rEString56);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher21.matchesNToMOccurences(rEString57, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher21.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher21.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher21.matchesNumBetweenNandM(1, (int) (short) -1);
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher21.matchesString("");
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher21.matchesBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher21.matchesNumBetweenNandM((int) (short) 10, 1);
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher21.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher21.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher8.repeatOneOrMore(rEString75);
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher0.matchesNOrMoreOccurences(rEString75, (int) (short) 0);
        st1920.automaton.RegExpMatcher.REString rEString79 = null;
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher0.matchesNToMOccurences(rEString79, (int) ' ', 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
    }

    @Test
    public void test398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test398");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher35.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher40 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString41 = null;
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher40.repeatZeroOrMore(rEString41);
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher48 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher48.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher48.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher43.matchesAnyChar(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher40.makeParenthesis(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher35.matchesAnyChar(rEString53);
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher35.repeatOneOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher32.matchesNOrMoreOccurences(rEString59, 100);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher0.matchesAnyChar(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher0.matchesString("");
        st1920.automaton.RegExpMatcher regExpMatcher65 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString66 = null;
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher65.repeatZeroOrMore(rEString66);
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher65.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher65.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher70 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString71 = null;
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher70.repeatZeroOrMore(rEString71);
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher70.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher75 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString76 = null;
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher75.repeatZeroOrMore(rEString76);
        st1920.automaton.RegExpMatcher regExpMatcher78 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString79 = null;
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher78.repeatZeroOrMore(rEString79);
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher78.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher83 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString84 = null;
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher83.repeatZeroOrMore(rEString84);
        st1920.automaton.RegExpMatcher.REString rEString87 = regExpMatcher83.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString88 = regExpMatcher78.matchesAnyChar(rEString87);
        st1920.automaton.RegExpMatcher.REString rEString89 = regExpMatcher75.makeParenthesis(rEString88);
        st1920.automaton.RegExpMatcher.REString rEString90 = regExpMatcher70.matchesAnyChar(rEString88);
        st1920.automaton.RegExpMatcher.REString rEString91 = regExpMatcher65.matchesAnyChar(rEString90);
        st1920.automaton.RegExpMatcher.REString rEString94 = regExpMatcher65.matchesNumBetweenNandM((int) (byte) -1, (int) (short) 0);
        st1920.automaton.RegExpMatcher.REString rEString95 = regExpMatcher0.repeatOneOrMore(rEString94);
        st1920.automaton.RegExpMatcher.REString rEString97 = regExpMatcher0.matchesNoBracketChars("[^1]");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
    }

    @Test
    public void test399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test399");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString6 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesNoChar();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
    }

    @Test
    public void test400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test400");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString15 = null;
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.repeatZeroOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher9.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher6.makeParenthesis(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesAnyChar(rEString19);
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher22.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher22.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher31 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString32 = null;
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher31.repeatZeroOrMore(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher31.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher28.matchesAnyChar(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher28.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher22.repeatOneOrMore(rEString37);
        st1920.automaton.RegExpMatcher regExpMatcher39 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString40 = null;
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher39.repeatZeroOrMore(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher39.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher48 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher48.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher regExpMatcher51 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString52 = null;
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher51.repeatZeroOrMore(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher51.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString57 = null;
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.repeatZeroOrMore(rEString57);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher56.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher51.matchesAnyChar(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher48.makeParenthesis(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher43.matchesAnyChar(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher39.repeatZeroOrOne(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher0.followPattern(rEString38, rEString64);
        st1920.automaton.RegExpMatcher.MatchString matchString68 = regExpMatcher0.makeConcatenation("", "1");
        st1920.automaton.RegExpMatcher.REString rEString69 = null;
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher0.matchesNOrMoreOccurences(rEString69, 0);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher0.makeNumreg();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
    }

    @Test
    public void test401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test401");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher.MatchString matchString8 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString15 = null;
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.repeatZeroOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher9.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString29 = null;
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.repeatZeroOrMore(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher28.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = null;
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher33.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher28.matchesAnyChar(rEString37);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher25.makeParenthesis(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher9.eitherPattern(rEString23, rEString39);
        st1920.automaton.RegExpMatcher.MatchString matchString43 = regExpMatcher9.makeConcatenation("", "");
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher9.matchesString("hi!");
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher0.matchesNOrMoreOccurences(rEString47, (int) (byte) 1);
        java.lang.Class<?> wildcardClass50 = rEString47.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test402");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher5.makeParenthesis(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher0.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher.MatchString matchString23 = regExpMatcher0.makeConcatenation("hi!", "#");
        java.lang.String str24 = matchString23.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "hi!#" + "'", str24.equals("hi!#"));
    }

    @Test
    public void test403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test403");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString6 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher regExpMatcher7 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString8 = null;
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher7.repeatZeroOrMore(rEString8);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher7.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher7.matchesAnyChar(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher0.repeatOneOrMore(rEString16);
        st1920.automaton.RegExpMatcher.MatchString matchString19 = regExpMatcher0.makeAlpha();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
    }

    @Test
    public void test404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test404");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher.MatchString matchString34 = regExpMatcher0.makeConcatenation("", "");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher0.matchesString("hi!");
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher0.matchesString("@");
        st1920.automaton.RegExpMatcher.MatchString matchString43 = regExpMatcher0.makeConcatenation("<10-1>", "hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
    }

    @Test
    public void test405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test405");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher5.makeParenthesis(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher0.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher0.matchesNOccurences(rEString21, (-1));
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher24.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher24.matchesString("[^hi!]");
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher35.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher40 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString41 = null;
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher40.repeatZeroOrMore(rEString41);
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher48 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher48.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher48.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher43.matchesAnyChar(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher40.makeParenthesis(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher35.matchesAnyChar(rEString53);
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher35.repeatOneOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher32.matchesNOrMoreOccurences(rEString59, 100);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher24.makeParenthesis(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher0.matchesNOrMoreOccurences(rEString62, (int) '4');
        st1920.automaton.RegExpMatcher.MatchString matchString67 = regExpMatcher0.makeConcatenation("[^]", "[]");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
    }

    @Test
    public void test406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test406");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString8 = regExpMatcher0.makeConcatenation("", "1");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesBracketChars("1");
        st1920.automaton.RegExpMatcher.MatchString matchString13 = regExpMatcher0.makeConcatenation("null*", "hi!");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher0.makeParenthesis(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
    }

    @Test
    public void test407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test407");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher6.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher6.matchesAnyChar(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher3.makeParenthesis(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher0.matchesNOrMoreOccurences(rEString16, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher22.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher27 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString28 = null;
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher27.repeatZeroOrMore(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher27.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher22.matchesAnyChar(rEString31);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher33.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher41 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = null;
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher41.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher41.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString47 = null;
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.repeatZeroOrMore(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher41.matchesAnyChar(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher38.makeParenthesis(rEString51);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher22.eitherPattern(rEString36, rEString52);
        st1920.automaton.RegExpMatcher regExpMatcher54 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString55 = null;
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher54.repeatZeroOrMore(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher54.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher59 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString60 = null;
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher59.repeatZeroOrMore(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher59.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher54.matchesAnyChar(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher54.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher22.makeParenthesis(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher0.repeatZeroOrMore(rEString65);
        st1920.automaton.RegExpMatcher.MatchString matchString68 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher0.matchesNumBetweenNandM((int) (short) 10, (int) (short) 0);
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher0.matchesString("#");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
    }

    @Test
    public void test408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test408");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString6 = regExpMatcher0.matchesString("");
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher0.matchesNoBracketChars("@");
        st1920.automaton.RegExpMatcher regExpMatcher10 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString11 = null;
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher10.repeatZeroOrMore(rEString11);
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher10.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher15 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString16 = null;
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher15.repeatZeroOrMore(rEString16);
        st1920.automaton.RegExpMatcher regExpMatcher18 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString19 = null;
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher18.repeatZeroOrMore(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher18.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher23 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString24 = null;
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher23.repeatZeroOrMore(rEString24);
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher23.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher18.matchesAnyChar(rEString27);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher15.makeParenthesis(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher10.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher0.matchesNOccurences(rEString30, (int) (short) 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
    }

    @Test
    public void test409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test409");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher6.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher6.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString12 = regExpMatcher6.makeNum();
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher18 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString19 = null;
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher18.repeatZeroOrMore(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher18.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher13.matchesAnyChar(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher6.repeatOneOrMore(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher0.matchesNOccurences(rEString24, (int) (short) 10);
        st1920.automaton.RegExpMatcher.MatchString matchString27 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString29 = null;
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.repeatZeroOrMore(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher28.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = null;
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher33.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher28.matchesAnyChar(rEString37);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher28.matchesNoChar();
        java.lang.String str40 = rEString39.getString();
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher0.matchesNOrMoreOccurences(rEString39, (int) (short) 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "#" + "'", str40.equals("#"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
    }

    @Test
    public void test410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test410");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher3.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher16.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher11.matchesAnyChar(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher8.makeParenthesis(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher3.matchesAnyChar(rEString21);
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher3.repeatOneOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher0.matchesNOrMoreOccurences(rEString27, 100);
        st1920.automaton.RegExpMatcher regExpMatcher30 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString31 = null;
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher30.repeatZeroOrMore(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher30.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher38.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher38.matchesAnyChar(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher35.makeParenthesis(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher30.matchesAnyChar(rEString48);
        st1920.automaton.RegExpMatcher regExpMatcher51 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString52 = null;
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher51.repeatZeroOrMore(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher51.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString57 = null;
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.repeatZeroOrMore(rEString57);
        st1920.automaton.RegExpMatcher regExpMatcher59 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString60 = null;
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher59.repeatZeroOrMore(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher59.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher64 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString65 = null;
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher64.repeatZeroOrMore(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher64.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher59.matchesAnyChar(rEString68);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher56.makeParenthesis(rEString69);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher51.matchesAnyChar(rEString69);
        st1920.automaton.RegExpMatcher regExpMatcher72 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher72.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher51.repeatOneOrMore(rEString74);
        st1920.automaton.RegExpMatcher regExpMatcher76 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher76.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString79 = null;
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher76.repeatZeroOrMore(rEString79);
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher30.eitherPattern(rEString74, rEString79);
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher0.repeatOneOrMore(rEString79);
        st1920.automaton.RegExpMatcher.MatchString matchString83 = regExpMatcher0.makeNum();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString83);
    }

    @Test
    public void test411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test411");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher6.matchesAnyChar(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher6.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher0.repeatOneOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher0.matchesBracketChars("1");
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher19.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher29.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher24.matchesAnyChar(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher24.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher36 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString37 = null;
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher36.repeatZeroOrMore(rEString37);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher36.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher41 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = null;
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher41.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher regExpMatcher44 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString45 = null;
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher44.repeatZeroOrMore(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher44.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher49 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString50 = null;
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher49.repeatZeroOrMore(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher49.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher44.matchesAnyChar(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher41.makeParenthesis(rEString54);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher36.matchesAnyChar(rEString54);
        st1920.automaton.RegExpMatcher regExpMatcher57 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher57.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher36.repeatOneOrMore(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher24.matchesNToMOccurences(rEString60, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher24.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher24.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher24.matchesNumBetweenNandM(1, (int) (short) -1);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher19.makeParenthesis(rEString69);
        st1920.automaton.RegExpMatcher.REString rEString72 = new st1920.automaton.RegExpMatcher.REString("[^hi!]");
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher19.excludePattern(rEString72);
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher19.matchesNumBetweenNandM(0, (int) (short) 100);
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher0.repeatOneOrMore(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
    }

    @Test
    public void test412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test412");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher5.makeParenthesis(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher0.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher0.repeatOneOrMore(rEString23);
        st1920.automaton.RegExpMatcher.MatchString matchString27 = regExpMatcher0.makeConcatenation("", "null+");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
    }

    @Test
    public void test413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test413");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString8 = regExpMatcher0.makeConcatenation("", "1");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesBracketChars("1");
        st1920.automaton.RegExpMatcher.MatchString matchString13 = regExpMatcher0.makeConcatenation("null*", "hi!");
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher0.matchesNumBetweenNandM((int) 'a', (int) '#');
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
    }

    @Test
    public void test414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test414");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher10 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString11 = null;
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher10.repeatZeroOrMore(rEString11);
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher10.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher5.matchesAnyChar(rEString14);
        java.lang.String str16 = rEString14.getString();
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher20.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher17.makeParenthesis(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher0.bothPatterns(rEString14, rEString31);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher0.matchesNumBetweenNandM((int) (short) 0, (int) ' ');
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher0.matchesBracketChars("[^hi!]hi!hi!");
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher0.matchesString("a[^[^hi!]]");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "[^hi!]" + "'", str16.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
    }

    @Test
    public void test415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test415");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString6 = regExpMatcher0.matchesString("");
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher0.matchesString("#");
        java.lang.Class<?> wildcardClass9 = rEString8.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test416");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString6 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher regExpMatcher7 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString8 = null;
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher7.repeatZeroOrMore(rEString8);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher7.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher7.matchesAnyChar(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher0.repeatOneOrMore(rEString16);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher19.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher0.repeatZeroOrOne(rEString24);
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher26.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher26.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.excludePattern(rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher32.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher37 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString38 = null;
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher37.repeatZeroOrMore(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher37.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher32.matchesAnyChar(rEString41);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher32.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher44 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString45 = null;
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher44.repeatZeroOrMore(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher44.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher49 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString50 = null;
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher49.repeatZeroOrMore(rEString50);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = null;
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.repeatZeroOrMore(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher52.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher57 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = null;
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher57.repeatZeroOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher57.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher52.matchesAnyChar(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher49.makeParenthesis(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher44.matchesAnyChar(rEString62);
        st1920.automaton.RegExpMatcher regExpMatcher65 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher65.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher44.repeatOneOrMore(rEString67);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher32.matchesNToMOccurences(rEString68, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher32.makeAlphareg();
        st1920.automaton.RegExpMatcher.MatchString matchString73 = regExpMatcher32.makeNum();
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher32.matchesNumBetweenNandM((int) (short) -1, 0);
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher0.makeParenthesis(rEString76);
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher0.makeAlphareg();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
    }

    @Test
    public void test417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test417");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher5.makeParenthesis(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher0.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher0.matchesNOccurences(rEString21, (-1));
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher24.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher24.matchesString("[^hi!]");
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher35.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher40 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString41 = null;
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher40.repeatZeroOrMore(rEString41);
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher48 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher48.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher48.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher43.matchesAnyChar(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher40.makeParenthesis(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher35.matchesAnyChar(rEString53);
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher35.repeatOneOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher32.matchesNOrMoreOccurences(rEString59, 100);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher24.makeParenthesis(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher0.matchesNOrMoreOccurences(rEString62, (int) '4');
        st1920.automaton.RegExpMatcher.MatchString matchString67 = regExpMatcher0.makeConcatenation("[^[^hi!]]", "#");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
    }

    @Test
    public void test418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test418");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher3.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher16.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher11.matchesAnyChar(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher8.makeParenthesis(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher3.matchesAnyChar(rEString21);
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher3.repeatOneOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher0.matchesNOrMoreOccurences(rEString27, 100);
        st1920.automaton.RegExpMatcher.MatchString matchString30 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher.MatchString matchString33 = regExpMatcher0.makeConcatenation("[^1]", "#");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
    }

    @Test
    public void test419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test419");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString15 = null;
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.repeatZeroOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher9.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher6.makeParenthesis(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesAnyChar(rEString19);
        st1920.automaton.RegExpMatcher.MatchString matchString22 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher0.matchesBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher0.matchesAnyString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
    }

    @Test
    public void test420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test420");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher20.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher17.makeParenthesis(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher12.matchesAnyChar(rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher12.repeatOneOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher0.matchesNToMOccurences(rEString36, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher0.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher0.matchesNumBetweenNandM(1, (int) (short) -1);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher0.matchesString("");
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher0.matchesBracketChars("hi!");
        st1920.automaton.RegExpMatcher.MatchString matchString52 = regExpMatcher0.makeConcatenation("[^hi!]hi!hi!", "[^hi!]");
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher0.matchesAnyString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
    }

    @Test
    public void test421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test421");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher8.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher0.excludePattern(rEString11);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher0.makeNumreg();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
    }

    @Test
    public void test422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test422");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher3.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher3.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString15 = null;
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.repeatZeroOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher11.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher3.repeatZeroOrMore(rEString19);
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher21.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher21.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher26.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher31 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString32 = null;
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher31.repeatZeroOrMore(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher31.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher26.matchesAnyChar(rEString35);
        java.lang.String str37 = rEString35.getString();
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher41 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = null;
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher41.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher41.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString47 = null;
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.repeatZeroOrMore(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher41.matchesAnyChar(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher38.makeParenthesis(rEString51);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher21.bothPatterns(rEString35, rEString52);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher21.matchesNumBetweenNandM((int) (short) 0, (int) ' ');
        st1920.automaton.RegExpMatcher.REString rEString58 = new st1920.automaton.RegExpMatcher.REString("");
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher21.excludePattern(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher3.repeatZeroOrOne(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher0.repeatOneOrMore(rEString60);
        st1920.automaton.RegExpMatcher.MatchString matchString62 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher0.matchesNoBracketChars("hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "[^hi!]" + "'", str37.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
    }

    @Test
    public void test423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test423");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString14 = regExpMatcher0.makeConcatenation("hi!", "hi!");
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher0.matchesBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher0.matchesNoBracketChars("[^]");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
    }

    @Test
    public void test424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test424");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher5.makeParenthesis(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher0.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher21.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher29.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher34 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = null;
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher34.repeatZeroOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher34.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher29.matchesAnyChar(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher26.makeParenthesis(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher21.matchesAnyChar(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher42 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher42.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher21.repeatOneOrMore(rEString44);
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher0.eitherPattern(rEString44, rEString49);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = null;
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.repeatZeroOrMore(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher52.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher52.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher57 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = null;
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher57.repeatZeroOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher57.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher62 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString63 = null;
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher62.repeatZeroOrMore(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher62.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher57.matchesAnyChar(rEString66);
        java.lang.String str68 = rEString66.getString();
        st1920.automaton.RegExpMatcher regExpMatcher69 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString70 = null;
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher69.repeatZeroOrMore(rEString70);
        st1920.automaton.RegExpMatcher regExpMatcher72 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString73 = null;
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher72.repeatZeroOrMore(rEString73);
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher72.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher77 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString78 = null;
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher77.repeatZeroOrMore(rEString78);
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher77.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher72.matchesAnyChar(rEString81);
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher69.makeParenthesis(rEString82);
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher52.bothPatterns(rEString66, rEString83);
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher0.makeParenthesis(rEString84);
        st1920.automaton.RegExpMatcher.REString rEString87 = new st1920.automaton.RegExpMatcher.REString("[^hi!]hi!hi!");
        st1920.automaton.RegExpMatcher.REString rEString89 = regExpMatcher0.matchesNOccurences(rEString87, (int) (short) 10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str68 + "' != '" + "[^hi!]" + "'", str68.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
    }

    @Test
    public void test425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test425");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher5.makeParenthesis(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher0.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher0.repeatOneOrMore(rEString23);
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher25.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher30 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString31 = null;
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher30.repeatZeroOrMore(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher30.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher38.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher38.matchesAnyChar(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher35.makeParenthesis(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher30.matchesAnyChar(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher25.matchesAnyChar(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher25.matchesBracketChars("[^hi!]hi!hi!");
        st1920.automaton.RegExpMatcher regExpMatcher54 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString55 = null;
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher54.repeatZeroOrMore(rEString55);
        st1920.automaton.RegExpMatcher regExpMatcher57 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = null;
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher57.repeatZeroOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher57.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher62 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString63 = null;
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher62.repeatZeroOrMore(rEString63);
        st1920.automaton.RegExpMatcher regExpMatcher65 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString66 = null;
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher65.repeatZeroOrMore(rEString66);
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher65.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher70 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString71 = null;
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher70.repeatZeroOrMore(rEString71);
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher70.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher65.matchesAnyChar(rEString74);
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher62.makeParenthesis(rEString75);
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher57.matchesAnyChar(rEString75);
        st1920.automaton.RegExpMatcher regExpMatcher78 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher78.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher57.repeatOneOrMore(rEString80);
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher54.matchesNOrMoreOccurences(rEString81, 100);
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher0.bothPatterns(rEString53, rEString83);
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher0.matchesString("[^]");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
    }

    @Test
    public void test426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test426");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.MatchString matchString11 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher17.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher12.matchesAnyChar(rEString21);
        st1920.automaton.RegExpMatcher regExpMatcher23 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher23.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher23.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString29 = null;
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.repeatZeroOrMore(rEString29);
        st1920.automaton.RegExpMatcher regExpMatcher31 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString32 = null;
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher31.repeatZeroOrMore(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher31.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher36 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString37 = null;
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher36.repeatZeroOrMore(rEString37);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher36.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher31.matchesAnyChar(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher28.makeParenthesis(rEString41);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher12.eitherPattern(rEString26, rEString42);
        st1920.automaton.RegExpMatcher regExpMatcher44 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher44.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher12.repeatZeroOrMore(rEString46);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher12.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher12.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString50 = null;
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher12.matchesNToMOccurences(rEString50, 1, (int) (short) 1);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher0.repeatZeroOrMore(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
    }

    @Test
    public void test427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test427");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString6 = regExpMatcher0.makeConcatenation("hi!", "hi!");
        st1920.automaton.RegExpMatcher.MatchString matchString7 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher8.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher20.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher31 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString32 = null;
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher31.repeatZeroOrMore(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher31.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher28.matchesAnyChar(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher20.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher20.matchesNumBetweenNandM(0, (int) ' ');
        st1920.automaton.RegExpMatcher regExpMatcher41 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = null;
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher41.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher41.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher41.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString47 = null;
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.repeatZeroOrMore(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher51 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString52 = null;
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher51.repeatZeroOrMore(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher51.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher46.matchesAnyChar(rEString55);
        java.lang.String str57 = rEString55.getString();
        st1920.automaton.RegExpMatcher regExpMatcher58 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString59 = null;
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher58.repeatZeroOrMore(rEString59);
        st1920.automaton.RegExpMatcher regExpMatcher61 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString62 = null;
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher61.repeatZeroOrMore(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher61.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher66 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString67 = null;
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher66.repeatZeroOrMore(rEString67);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher66.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher61.matchesAnyChar(rEString70);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher58.makeParenthesis(rEString71);
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher41.bothPatterns(rEString55, rEString72);
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher20.repeatZeroOrMore(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher8.makeParenthesis(rEString55);
        st1920.automaton.RegExpMatcher regExpMatcher76 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString77 = null;
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher76.repeatZeroOrMore(rEString77);
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher76.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher81 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString82 = null;
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher81.repeatZeroOrMore(rEString82);
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher81.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher76.matchesAnyChar(rEString85);
        java.lang.String str87 = rEString85.getString();
        st1920.automaton.RegExpMatcher.REString rEString89 = regExpMatcher8.matchesNOccurences(rEString85, 10);
        st1920.automaton.RegExpMatcher.REString rEString90 = regExpMatcher0.repeatZeroOrOne(rEString89);
        st1920.automaton.RegExpMatcher.MatchString matchString93 = regExpMatcher0.makeConcatenation("a", "");
        st1920.automaton.RegExpMatcher.REString rEString94 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean95 = st1920.automaton.RegExpMatcher.matches(matchString93, rEString94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str57 + "' != '" + "[^hi!]" + "'", str57.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str87 + "' != '" + "[^hi!]" + "'", str87.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString93);
    }

    @Test
    public void test428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test428");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher8.matchesAnyChar(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher0.repeatZeroOrMore(rEString16);
        st1920.automaton.RegExpMatcher.MatchString matchString18 = regExpMatcher0.makeNum();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
    }

    @Test
    public void test429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test429");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.MatchString matchString13 = regExpMatcher0.makeConcatenation("hi!hi!", "[^hi!]");
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher0.matchesBracketChars("hi!");
        st1920.automaton.RegExpMatcher.MatchString matchString18 = regExpMatcher0.makeConcatenation("1", "hi!");
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher0.matchesNToMOccurences(rEString20, (-1), (int) (byte) 10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
    }

    @Test
    public void test430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test430");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher0.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher38.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher42 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString43 = null;
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher42.repeatZeroOrMore(rEString43);
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher42.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher47 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = null;
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher47.repeatZeroOrMore(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher47.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher42.matchesAnyChar(rEString51);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher42.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher54 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString55 = null;
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher54.repeatZeroOrMore(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher54.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher59 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString60 = null;
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher59.repeatZeroOrMore(rEString60);
        st1920.automaton.RegExpMatcher regExpMatcher62 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString63 = null;
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher62.repeatZeroOrMore(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher62.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher67 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString68 = null;
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher67.repeatZeroOrMore(rEString68);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher67.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher62.matchesAnyChar(rEString71);
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher59.makeParenthesis(rEString72);
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher54.matchesAnyChar(rEString72);
        st1920.automaton.RegExpMatcher regExpMatcher75 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher75.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher54.repeatOneOrMore(rEString77);
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher42.matchesNToMOccurences(rEString78, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher42.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher42.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString87 = regExpMatcher38.matchesNToMOccurences(rEString84, (int) (byte) 10, (int) ' ');
        st1920.automaton.RegExpMatcher.REString rEString88 = regExpMatcher38.makeAlphareg();
        st1920.automaton.RegExpMatcher.MatchString matchString89 = regExpMatcher38.makeNum();
        st1920.automaton.RegExpMatcher.MatchString matchString92 = regExpMatcher38.makeConcatenation("hi!", "");
        st1920.automaton.RegExpMatcher.REString rEString94 = regExpMatcher38.matchesString("[^hi!]");
        st1920.automaton.RegExpMatcher.REString rEString95 = regExpMatcher0.repeatOneOrMore(rEString94);
        st1920.automaton.RegExpMatcher.REString rEString98 = regExpMatcher0.matchesNumBetweenNandM((int) (byte) 1, (int) '4');
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
    }

    @Test
    public void test431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test431");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher20.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher17.makeParenthesis(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher12.matchesAnyChar(rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher12.repeatOneOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher0.matchesNToMOccurences(rEString36, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher0.matchesNoChar();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
    }

    @Test
    public void test432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test432");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher6.matchesAnyChar(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher6.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher0.repeatOneOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher0.matchesBracketChars("1");
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesNumBetweenNandM((int) (byte) -1, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher23 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString24 = null;
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher23.repeatZeroOrMore(rEString24);
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher23.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher23.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher regExpMatcher31 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher31.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher34 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = null;
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher34.repeatZeroOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher34.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher31.matchesAnyChar(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher23.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher23.matchesNumBetweenNandM(0, (int) ' ');
        st1920.automaton.RegExpMatcher regExpMatcher44 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString45 = null;
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher44.repeatZeroOrMore(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher44.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher44.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher49 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString50 = null;
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher49.repeatZeroOrMore(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher49.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher54 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString55 = null;
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher54.repeatZeroOrMore(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher54.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher49.matchesAnyChar(rEString58);
        java.lang.String str60 = rEString58.getString();
        st1920.automaton.RegExpMatcher regExpMatcher61 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString62 = null;
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher61.repeatZeroOrMore(rEString62);
        st1920.automaton.RegExpMatcher regExpMatcher64 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString65 = null;
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher64.repeatZeroOrMore(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher64.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher69 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString70 = null;
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher69.repeatZeroOrMore(rEString70);
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher69.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher64.matchesAnyChar(rEString73);
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher61.makeParenthesis(rEString74);
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher44.bothPatterns(rEString58, rEString75);
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher23.repeatZeroOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher23.matchesNumBetweenNandM((int) '#', 100);
        st1920.automaton.RegExpMatcher.MatchString matchString81 = regExpMatcher23.makeNum();
        st1920.automaton.RegExpMatcher regExpMatcher82 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher82.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher85 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString86 = null;
        st1920.automaton.RegExpMatcher.REString rEString87 = regExpMatcher85.repeatZeroOrMore(rEString86);
        st1920.automaton.RegExpMatcher.REString rEString89 = regExpMatcher85.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString90 = regExpMatcher82.matchesAnyChar(rEString89);
        st1920.automaton.RegExpMatcher.REString rEString91 = regExpMatcher82.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString92 = regExpMatcher23.makeParenthesis(rEString91);
        st1920.automaton.RegExpMatcher.REString rEString93 = regExpMatcher0.makeParenthesis(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str60 + "' != '" + "[^hi!]" + "'", str60.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
    }

    @Test
    public void test433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test433");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString8 = regExpMatcher0.makeConcatenation("", "1");
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher regExpMatcher15 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString16 = null;
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher15.repeatZeroOrMore(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher15.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher15.matchesAnyChar(rEString24);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher12.makeParenthesis(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher9.matchesNOrMoreOccurences(rEString25, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher31 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString32 = null;
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher31.repeatZeroOrMore(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher31.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher36 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString37 = null;
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher36.repeatZeroOrMore(rEString37);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher36.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher31.matchesAnyChar(rEString40);
        st1920.automaton.RegExpMatcher regExpMatcher42 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher42.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString45 = null;
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher42.repeatZeroOrMore(rEString45);
        st1920.automaton.RegExpMatcher regExpMatcher47 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = null;
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher47.repeatZeroOrMore(rEString48);
        st1920.automaton.RegExpMatcher regExpMatcher50 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString51 = null;
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher50.repeatZeroOrMore(rEString51);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher50.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher55 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString56 = null;
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher55.repeatZeroOrMore(rEString56);
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher55.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher50.matchesAnyChar(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher47.makeParenthesis(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher31.eitherPattern(rEString45, rEString61);
        st1920.automaton.RegExpMatcher regExpMatcher63 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString64 = null;
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher63.repeatZeroOrMore(rEString64);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher63.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher68 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString69 = null;
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher68.repeatZeroOrMore(rEString69);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher68.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher63.matchesAnyChar(rEString72);
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher63.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher31.makeParenthesis(rEString74);
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher9.repeatZeroOrMore(rEString74);
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher9.matchesBracketChars("[^hi!]");
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher9.matchesBracketChars("[^hi!]");
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher9.matchesNumBetweenNandM((int) '#', 0);
        boolean boolean84 = st1920.automaton.RegExpMatcher.matches(matchString8, rEString83);
        java.lang.String str85 = rEString83.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str85 + "' != '" + "<35-0>" + "'", str85.equals("<35-0>"));
    }

    @Test
    public void test434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test434");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.MatchString matchString13 = regExpMatcher0.makeConcatenation("hi!hi!", "[^hi!]");
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher15 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString16 = null;
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher15.repeatZeroOrMore(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher15.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher15.matchesAnyChar(rEString24);
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString29 = null;
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher26.repeatZeroOrMore(rEString29);
        st1920.automaton.RegExpMatcher regExpMatcher31 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString32 = null;
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher31.repeatZeroOrMore(rEString32);
        st1920.automaton.RegExpMatcher regExpMatcher34 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = null;
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher34.repeatZeroOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher34.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher39 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString40 = null;
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher39.repeatZeroOrMore(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher39.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher34.matchesAnyChar(rEString43);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher31.makeParenthesis(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher15.eitherPattern(rEString29, rEString45);
        st1920.automaton.RegExpMatcher.MatchString matchString49 = regExpMatcher15.makeConcatenation("", "");
        st1920.automaton.RegExpMatcher regExpMatcher50 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString51 = null;
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher50.repeatZeroOrMore(rEString51);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher50.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.MatchString matchString57 = regExpMatcher50.makeConcatenation("[^hi!]", "");
        st1920.automaton.RegExpMatcher regExpMatcher58 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString59 = null;
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher58.repeatZeroOrMore(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher58.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher63 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString64 = null;
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher63.repeatZeroOrMore(rEString64);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher63.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher58.matchesAnyChar(rEString67);
        st1920.automaton.RegExpMatcher regExpMatcher69 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher69.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString72 = null;
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher69.repeatZeroOrMore(rEString72);
        st1920.automaton.RegExpMatcher regExpMatcher74 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString75 = null;
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher74.repeatZeroOrMore(rEString75);
        st1920.automaton.RegExpMatcher regExpMatcher77 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString78 = null;
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher77.repeatZeroOrMore(rEString78);
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher77.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher82 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString83 = null;
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher82.repeatZeroOrMore(rEString83);
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher82.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString87 = regExpMatcher77.matchesAnyChar(rEString86);
        st1920.automaton.RegExpMatcher.REString rEString88 = regExpMatcher74.makeParenthesis(rEString87);
        st1920.automaton.RegExpMatcher.REString rEString89 = regExpMatcher58.eitherPattern(rEString72, rEString88);
        st1920.automaton.RegExpMatcher regExpMatcher90 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString92 = regExpMatcher90.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString93 = regExpMatcher58.repeatZeroOrMore(rEString92);
        st1920.automaton.RegExpMatcher.REString rEString95 = regExpMatcher58.matchesBracketChars("1");
        st1920.automaton.RegExpMatcher.REString rEString96 = regExpMatcher50.matchesAnyChar(rEString95);
        st1920.automaton.RegExpMatcher.REString rEString97 = regExpMatcher50.matchesAnyString();
        boolean boolean98 = st1920.automaton.RegExpMatcher.matches(matchString49, rEString97);
        st1920.automaton.RegExpMatcher.REString rEString99 = regExpMatcher0.repeatOneOrMore(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString99);
    }

    @Test
    public void test435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test435");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher10 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString11 = null;
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher10.repeatZeroOrMore(rEString11);
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher10.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher5.matchesAnyChar(rEString14);
        java.lang.String str16 = rEString14.getString();
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher20.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher17.makeParenthesis(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher0.bothPatterns(rEString14, rEString31);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher0.matchesNumBetweenNandM((int) (short) 0, (int) ' ');
        st1920.automaton.RegExpMatcher.REString rEString37 = new st1920.automaton.RegExpMatcher.REString("");
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher0.excludePattern(rEString37);
        st1920.automaton.RegExpMatcher.MatchString matchString41 = regExpMatcher0.makeConcatenation("hi!hi!", "a");
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher0.matchesNumBetweenNandM(0, (int) (byte) 0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "[^hi!]" + "'", str16.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
    }

    @Test
    public void test436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test436");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher35.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher40 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString41 = null;
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher40.repeatZeroOrMore(rEString41);
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher48 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher48.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher48.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher43.matchesAnyChar(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher40.makeParenthesis(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher35.matchesAnyChar(rEString53);
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher35.repeatOneOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher32.matchesNOrMoreOccurences(rEString59, 100);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher0.matchesAnyChar(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher0.matchesString("");
        st1920.automaton.RegExpMatcher regExpMatcher65 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher65.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher68 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString69 = null;
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher68.repeatZeroOrMore(rEString69);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher68.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher65.matchesAnyChar(rEString72);
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher0.repeatOneOrMore(rEString72);
        st1920.automaton.RegExpMatcher.MatchString matchString77 = regExpMatcher0.makeConcatenation("", "a");
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString81 = regExpMatcher0.makeConcatenation("1", "null*");
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher0.matchesString("a");
        st1920.automaton.RegExpMatcher.MatchString matchString86 = regExpMatcher0.makeConcatenation("#", "");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString86);
    }

    @Test
    public void test437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test437");
        st1920.automaton.RegExpMatcher.REString rEString1 = new st1920.automaton.RegExpMatcher.REString("[^[^hi!]]");
    }

    @Test
    public void test438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test438");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher10 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString11 = null;
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher10.repeatZeroOrMore(rEString11);
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher10.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher5.matchesAnyChar(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher5.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher17.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher30 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString31 = null;
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher30.repeatZeroOrMore(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher30.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher25.matchesAnyChar(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher22.makeParenthesis(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher17.matchesAnyChar(rEString35);
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher17.repeatOneOrMore(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher5.matchesNToMOccurences(rEString41, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher5.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher5.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher5.matchesNumBetweenNandM(1, (int) (short) -1);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher0.makeParenthesis(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.MatchString matchString53 = regExpMatcher0.makeAlpha();
        java.lang.String str54 = matchString53.getString();
        java.lang.String str55 = matchString53.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str54 + "' != '" + "a" + "'", str54.equals("a"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "a" + "'", str55.equals("a"));
    }

    @Test
    public void test439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test439");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher8.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher0.excludePattern(rEString11);
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher18 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString19 = null;
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher18.repeatZeroOrMore(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher18.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher13.matchesAnyChar(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher13.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher30 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString31 = null;
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher30.repeatZeroOrMore(rEString31);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = null;
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher33.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher38.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher33.matchesAnyChar(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher30.makeParenthesis(rEString43);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher25.matchesAnyChar(rEString43);
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher25.repeatOneOrMore(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher13.matchesNToMOccurences(rEString49, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher13.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher13.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher13.matchesString("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher57 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = null;
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher57.repeatZeroOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher57.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher57.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher62 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString63 = null;
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher62.repeatZeroOrMore(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher62.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher67 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString68 = null;
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher67.repeatZeroOrMore(rEString68);
        st1920.automaton.RegExpMatcher regExpMatcher70 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString71 = null;
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher70.repeatZeroOrMore(rEString71);
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher70.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher75 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString76 = null;
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher75.repeatZeroOrMore(rEString76);
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher75.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher70.matchesAnyChar(rEString79);
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher67.makeParenthesis(rEString80);
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher62.matchesAnyChar(rEString80);
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher57.matchesAnyChar(rEString82);
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher0.followPattern(rEString56, rEString83);
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher0.makeAlphareg();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
    }

    @Test
    public void test440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test440");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher6.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher6.matchesAnyChar(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher3.makeParenthesis(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher0.matchesNOrMoreOccurences(rEString16, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher22.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher27 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString28 = null;
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher27.repeatZeroOrMore(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher27.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher22.matchesAnyChar(rEString31);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher33.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher41 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = null;
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher41.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher41.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString47 = null;
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.repeatZeroOrMore(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher41.matchesAnyChar(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher38.makeParenthesis(rEString51);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher22.eitherPattern(rEString36, rEString52);
        st1920.automaton.RegExpMatcher regExpMatcher54 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString55 = null;
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher54.repeatZeroOrMore(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher54.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher59 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString60 = null;
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher59.repeatZeroOrMore(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher59.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher54.matchesAnyChar(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher54.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher22.makeParenthesis(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher0.repeatZeroOrMore(rEString65);
        st1920.automaton.RegExpMatcher.MatchString matchString68 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher0.matchesNumBetweenNandM((-1), 100);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher0.makeAlphareg();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
    }

    @Test
    public void test441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test441");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString7 = regExpMatcher0.makeConcatenation("[^hi!]", "hi!hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesNumBetweenNandM((-1), 0);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher0.matchesBracketChars("a");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
    }

    @Test
    public void test442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test442");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesNumBetweenNandM((int) '#', (-1));
        st1920.automaton.RegExpMatcher.MatchString matchString10 = regExpMatcher0.makeConcatenation("#", "null*");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
    }

    @Test
    public void test443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test443");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString6 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher regExpMatcher7 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString8 = null;
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher7.repeatZeroOrMore(rEString8);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher7.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher7.matchesAnyChar(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher0.repeatOneOrMore(rEString16);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher19.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher0.repeatZeroOrOne(rEString24);
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher26.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher26.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.excludePattern(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString35 = regExpMatcher0.makeConcatenation("a[^[^hi!]]", "[^[^hi!]]");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
    }

    @Test
    public void test444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test444");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString3 = null;
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.repeatZeroOrMore(rEString3);
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString6 = regExpMatcher0.matchesAnyString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
    }

    @Test
    public void test445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test445");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher8.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher0.excludePattern(rEString11);
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher13.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher22.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher27 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString28 = null;
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher27.repeatZeroOrMore(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher27.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher22.matchesAnyChar(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher19.makeParenthesis(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher13.matchesAnyChar(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher13.matchesString("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher37 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString38 = null;
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher37.repeatZeroOrMore(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher37.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher37.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher42 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString43 = null;
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher42.repeatZeroOrMore(rEString43);
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher42.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher47 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = null;
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher47.repeatZeroOrMore(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher47.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher42.matchesAnyChar(rEString51);
        java.lang.String str53 = rEString51.getString();
        st1920.automaton.RegExpMatcher regExpMatcher54 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString55 = null;
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher54.repeatZeroOrMore(rEString55);
        st1920.automaton.RegExpMatcher regExpMatcher57 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = null;
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher57.repeatZeroOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher57.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher62 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString63 = null;
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher62.repeatZeroOrMore(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher62.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher57.matchesAnyChar(rEString66);
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher54.makeParenthesis(rEString67);
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher37.bothPatterns(rEString51, rEString68);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher37.matchesNumBetweenNandM((int) (short) 0, (int) ' ');
        st1920.automaton.RegExpMatcher regExpMatcher73 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString74 = null;
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher73.repeatZeroOrMore(rEString74);
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher73.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher73.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString81 = regExpMatcher73.makeConcatenation("", "1");
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher73.matchesBracketChars("1");
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher13.followPattern(rEString72, rEString83);
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher0.repeatZeroOrOne(rEString84);
        st1920.automaton.RegExpMatcher.MatchString matchString88 = regExpMatcher0.makeConcatenation("[^]", "hi!#");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str53 + "' != '" + "[^hi!]" + "'", str53.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString88);
    }

    @Test
    public void test446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test446");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher20.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher17.makeParenthesis(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher12.matchesAnyChar(rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher12.repeatOneOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher0.matchesNToMOccurences(rEString36, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.MatchString matchString41 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.MatchString matchString44 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher0.makeNumreg();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
    }

    @Test
    public void test447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test447");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString15 = null;
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.repeatZeroOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher9.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher6.makeParenthesis(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesAnyChar(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher0.matchesNumBetweenNandM((int) (short) 0, (int) (short) 100);
        st1920.automaton.RegExpMatcher.MatchString matchString25 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher26.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher26.matchesBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = null;
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher33.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher33.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher41 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher41.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher41.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher38.repeatOneOrMore(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher26.eitherPattern(rEString37, rEString45);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher0.excludePattern(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
    }

    @Test
    public void test448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test448");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher10 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString11 = null;
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher10.repeatZeroOrMore(rEString11);
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher10.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher5.matchesAnyChar(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher5.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher17.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher30 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString31 = null;
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher30.repeatZeroOrMore(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher30.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher25.matchesAnyChar(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher22.makeParenthesis(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher17.matchesAnyChar(rEString35);
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher17.repeatOneOrMore(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher5.matchesNToMOccurences(rEString41, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher5.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher5.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher5.matchesNumBetweenNandM(1, (int) (short) -1);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher0.makeParenthesis(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.MatchString matchString55 = regExpMatcher0.makeConcatenation("", "1");
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher0.matchesBracketChars("a");
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher0.matchesNoBracketChars("[]");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
    }

    @Test
    public void test449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test449");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher8.matchesAnyChar(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher0.repeatZeroOrMore(rEString16);
        st1920.automaton.RegExpMatcher regExpMatcher18 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString19 = null;
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher18.repeatZeroOrMore(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher18.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher18.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher23 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString24 = null;
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher23.repeatZeroOrMore(rEString24);
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher23.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString29 = null;
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.repeatZeroOrMore(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher28.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher23.matchesAnyChar(rEString32);
        java.lang.String str34 = rEString32.getString();
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher38.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher38.matchesAnyChar(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher35.makeParenthesis(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher18.bothPatterns(rEString32, rEString49);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher18.matchesNumBetweenNandM((int) (short) 0, (int) ' ');
        st1920.automaton.RegExpMatcher.REString rEString55 = new st1920.automaton.RegExpMatcher.REString("");
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher18.excludePattern(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher0.repeatZeroOrOne(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher0.matchesBracketChars("@");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "[^hi!]" + "'", str34.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
    }

    @Test
    public void test450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test450");
        st1920.automaton.RegExpMatcher.MatchString matchString1 = new st1920.automaton.RegExpMatcher.MatchString("[^1]");
    }

    @Test
    public void test451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test451");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString7 = regExpMatcher0.makeConcatenation("[^hi!]", "hi!hi!");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher16.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher11.matchesAnyChar(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher8.makeParenthesis(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher8.matchesString("#");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher30 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString31 = null;
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher30.repeatZeroOrMore(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher30.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher25.matchesAnyChar(rEString34);
        st1920.automaton.RegExpMatcher regExpMatcher36 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher36.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher36.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher41 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = null;
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher41.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher regExpMatcher44 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString45 = null;
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher44.repeatZeroOrMore(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher44.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher49 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString50 = null;
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher49.repeatZeroOrMore(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher49.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher44.matchesAnyChar(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher41.makeParenthesis(rEString54);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher25.eitherPattern(rEString39, rEString55);
        st1920.automaton.RegExpMatcher regExpMatcher57 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher57.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher25.repeatZeroOrMore(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher8.makeParenthesis(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher0.matchesNOccurences(rEString60, (int) (byte) 10);
        java.lang.String str64 = rEString60.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
    }

    @Test
    public void test452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test452");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString7 = regExpMatcher0.makeConcatenation("[^hi!]", "hi!hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesNumBetweenNandM((-1), 0);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString15 = null;
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.repeatZeroOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher14.matchesAnyChar(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher14.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher26.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher31 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString32 = null;
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher31.repeatZeroOrMore(rEString32);
        st1920.automaton.RegExpMatcher regExpMatcher34 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = null;
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher34.repeatZeroOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher34.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher39 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString40 = null;
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher39.repeatZeroOrMore(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher39.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher34.matchesAnyChar(rEString43);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher31.makeParenthesis(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher26.matchesAnyChar(rEString44);
        st1920.automaton.RegExpMatcher regExpMatcher47 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher47.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher26.repeatOneOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher14.matchesNToMOccurences(rEString50, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher regExpMatcher54 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString55 = null;
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher54.repeatZeroOrMore(rEString55);
        st1920.automaton.RegExpMatcher regExpMatcher57 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = null;
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher57.repeatZeroOrMore(rEString58);
        st1920.automaton.RegExpMatcher regExpMatcher60 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString61 = null;
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher60.repeatZeroOrMore(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher60.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher65 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString66 = null;
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher65.repeatZeroOrMore(rEString66);
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher65.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher60.matchesAnyChar(rEString69);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher57.makeParenthesis(rEString70);
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher54.matchesNOrMoreOccurences(rEString70, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher11.eitherPattern(rEString50, rEString70);
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher11.matchesBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString78 = new st1920.automaton.RegExpMatcher.REString("null*");
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher0.eitherPattern(rEString76, rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
    }

    @Test
    public void test453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test453");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString6 = regExpMatcher0.makeConcatenation("hi!", "hi!");
        st1920.automaton.RegExpMatcher.MatchString matchString7 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.REString rEString8 = null;
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString15 = null;
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.repeatZeroOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher9.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher9.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher21.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher29.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher34 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = null;
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher34.repeatZeroOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher34.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher29.matchesAnyChar(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher26.makeParenthesis(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher21.matchesAnyChar(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher42 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher42.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher21.repeatOneOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher9.matchesNToMOccurences(rEString45, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher9.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher9.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher9.matchesNumBetweenNandM(1, (int) (short) -1);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher9.matchesString("");
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher0.followPattern(rEString8, rEString56);
        st1920.automaton.RegExpMatcher regExpMatcher58 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString59 = null;
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher58.repeatZeroOrMore(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher58.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher58.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher58.matchesBracketChars("1");
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher0.excludePattern(rEString64);
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher0.matchesNoChar();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
    }

    @Test
    public void test454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test454");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesString("[^hi!]");
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher0.matchesString("<10-1>");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
    }

    @Test
    public void test455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test455");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher3.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher3.matchesAnyChar(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher0.makeParenthesis(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher0.matchesNoBracketChars("null*");
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher17.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher22.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher17.matchesAnyChar(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher17.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString31 = regExpMatcher17.makeConcatenation("hi!", "hi!");
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher17.matchesBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher17.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher17.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher0.matchesNToMOccurences(rEString35, 10, (-1));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
    }

    @Test
    public void test456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test456");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher3.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher3.matchesAnyChar(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher0.makeParenthesis(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher16.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher20.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher20.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher32.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher37 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString38 = null;
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher37.repeatZeroOrMore(rEString38);
        st1920.automaton.RegExpMatcher regExpMatcher40 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString41 = null;
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher40.repeatZeroOrMore(rEString41);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher40.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher45 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString46 = null;
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher45.repeatZeroOrMore(rEString46);
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher45.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher40.matchesAnyChar(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher37.makeParenthesis(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher32.matchesAnyChar(rEString50);
        st1920.automaton.RegExpMatcher regExpMatcher53 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher53.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher32.repeatOneOrMore(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher20.matchesNToMOccurences(rEString56, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher20.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher20.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher16.matchesNToMOccurences(rEString62, (int) (byte) 10, (int) ' ');
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher16.makeAlphareg();
        st1920.automaton.RegExpMatcher.MatchString matchString67 = regExpMatcher16.makeNum();
        st1920.automaton.RegExpMatcher.MatchString matchString70 = regExpMatcher16.makeConcatenation("hi!", "");
        st1920.automaton.RegExpMatcher regExpMatcher71 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString72 = null;
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher71.repeatZeroOrMore(rEString72);
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher71.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher76 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString77 = null;
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher76.repeatZeroOrMore(rEString77);
        st1920.automaton.RegExpMatcher regExpMatcher79 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString80 = null;
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher79.repeatZeroOrMore(rEString80);
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher79.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher84 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString85 = null;
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher84.repeatZeroOrMore(rEString85);
        st1920.automaton.RegExpMatcher.REString rEString88 = regExpMatcher84.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString89 = regExpMatcher79.matchesAnyChar(rEString88);
        st1920.automaton.RegExpMatcher.REString rEString90 = regExpMatcher76.makeParenthesis(rEString89);
        st1920.automaton.RegExpMatcher.REString rEString91 = regExpMatcher71.matchesAnyChar(rEString89);
        st1920.automaton.RegExpMatcher.REString rEString92 = regExpMatcher71.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString93 = regExpMatcher16.repeatZeroOrOne(rEString92);
        st1920.automaton.RegExpMatcher.REString rEString96 = regExpMatcher0.matchesNToMOccurences(rEString92, 100, (int) (byte) -1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
    }

    @Test
    public void test457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test457");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher5.makeParenthesis(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher0.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher21.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher29.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher34 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = null;
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher34.repeatZeroOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher34.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher29.matchesAnyChar(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher26.makeParenthesis(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher21.matchesAnyChar(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher42 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher42.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher21.repeatOneOrMore(rEString44);
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher0.eitherPattern(rEString44, rEString49);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher55 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString56 = null;
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher55.repeatZeroOrMore(rEString56);
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher55.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher52.matchesAnyChar(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher52.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher62 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString63 = null;
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher62.repeatZeroOrMore(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher62.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher62.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher0.eitherPattern(rEString61, rEString69);
        st1920.automaton.RegExpMatcher.MatchString matchString71 = regExpMatcher0.makeAlpha();
        java.lang.Class<?> wildcardClass72 = matchString71.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test458");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher5.makeParenthesis(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher0.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher21 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher21.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher21.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher26 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = null;
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher26.repeatZeroOrMore(rEString27);
        st1920.automaton.RegExpMatcher regExpMatcher29 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = null;
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher29.repeatZeroOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher29.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher34 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = null;
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher34.repeatZeroOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher34.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher29.matchesAnyChar(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher26.makeParenthesis(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher21.matchesAnyChar(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher42 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher42.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher21.repeatOneOrMore(rEString44);
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher0.eitherPattern(rEString44, rEString49);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher55 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString56 = null;
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher55.repeatZeroOrMore(rEString56);
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher55.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher52.matchesAnyChar(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher52.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher62 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString63 = null;
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher62.repeatZeroOrMore(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher62.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher62.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher0.eitherPattern(rEString61, rEString69);
        st1920.automaton.RegExpMatcher.MatchString matchString71 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher.MatchString matchString72 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher.MatchString matchString73 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher0.matchesBracketChars("[^[^hi!]]");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
    }

    @Test
    public void test459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test459");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher5.makeParenthesis(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher0.matchesAnyChar(rEString18);
        java.lang.String str21 = rEString18.getString();
        java.lang.Class<?> wildcardClass22 = rEString18.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test460");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString3 = null;
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.repeatZeroOrMore(rEString3);
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.matchesNoBracketChars("hi!hi!");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString15 = null;
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.repeatZeroOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher14.matchesAnyChar(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher11.makeParenthesis(rEString24);
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher8.matchesNOrMoreOccurences(rEString24, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher8.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = null;
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher33.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher38.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher33.matchesAnyChar(rEString42);
        st1920.automaton.RegExpMatcher regExpMatcher44 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher44.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString47 = null;
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher44.repeatZeroOrMore(rEString47);
        st1920.automaton.RegExpMatcher regExpMatcher49 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString50 = null;
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher49.repeatZeroOrMore(rEString50);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = null;
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.repeatZeroOrMore(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher52.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher57 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = null;
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher57.repeatZeroOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher57.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher52.matchesAnyChar(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher49.makeParenthesis(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher33.eitherPattern(rEString47, rEString63);
        st1920.automaton.RegExpMatcher regExpMatcher65 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString66 = null;
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher65.repeatZeroOrMore(rEString66);
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher65.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher70 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString71 = null;
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher70.repeatZeroOrMore(rEString71);
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher70.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher65.matchesAnyChar(rEString74);
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher65.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher33.makeParenthesis(rEString76);
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher8.makeParenthesis(rEString77);
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher0.matchesNToMOccurences(rEString77, (int) (byte) 10, 1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
    }

    @Test
    public void test461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test461");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString13 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString15 = null;
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.repeatZeroOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher14.matchesAnyChar(rEString23);
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString28 = null;
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.repeatZeroOrMore(rEString28);
        st1920.automaton.RegExpMatcher regExpMatcher30 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString31 = null;
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher30.repeatZeroOrMore(rEString31);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = null;
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher33.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher38.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher33.matchesAnyChar(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher30.makeParenthesis(rEString43);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher14.eitherPattern(rEString28, rEString44);
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher14.repeatZeroOrMore(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher14.matchesBracketChars("a");
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher14.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher0.matchesAnyChar(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
    }

    @Test
    public void test462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test462");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher20.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher17.makeParenthesis(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher12.matchesAnyChar(rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher12.repeatOneOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher0.matchesNToMOccurences(rEString36, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.MatchString matchString41 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher0.matchesNumBetweenNandM((int) (short) -1, 0);
        st1920.automaton.RegExpMatcher.MatchString matchString47 = regExpMatcher0.makeConcatenation("[^]", "[^[^hi!]]");
        st1920.automaton.RegExpMatcher.MatchString matchString48 = regExpMatcher0.makeAlpha();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
    }

    @Test
    public void test463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test463");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.MatchString matchString11 = regExpMatcher0.makeAlpha();
        java.lang.String str12 = matchString11.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "a" + "'", str12.equals("a"));
    }

    @Test
    public void test464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test464");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher20.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher17.makeParenthesis(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher12.matchesAnyChar(rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher12.repeatOneOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher0.matchesNToMOccurences(rEString36, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher0.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher0.matchesNumBetweenNandM(1, (int) (short) -1);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher0.matchesString("");
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher0.matchesBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher0.matchesNumBetweenNandM((int) (short) 10, 1);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher0.makeNumreg();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
    }

    @Test
    public void test465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test465");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher35.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher40 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString41 = null;
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher40.repeatZeroOrMore(rEString41);
        st1920.automaton.RegExpMatcher regExpMatcher43 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString44 = null;
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher43.repeatZeroOrMore(rEString44);
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher43.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher48 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString49 = null;
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher48.repeatZeroOrMore(rEString49);
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher48.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher43.matchesAnyChar(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher40.makeParenthesis(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher35.matchesAnyChar(rEString53);
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher35.repeatOneOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher32.matchesNOrMoreOccurences(rEString59, 100);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher0.matchesAnyChar(rEString61);
        st1920.automaton.RegExpMatcher regExpMatcher63 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString64 = null;
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher63.repeatZeroOrMore(rEString64);
        st1920.automaton.RegExpMatcher regExpMatcher66 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString67 = null;
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher66.repeatZeroOrMore(rEString67);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher66.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher71 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString72 = null;
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher71.repeatZeroOrMore(rEString72);
        st1920.automaton.RegExpMatcher regExpMatcher74 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString75 = null;
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher74.repeatZeroOrMore(rEString75);
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher74.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher79 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString80 = null;
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher79.repeatZeroOrMore(rEString80);
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher79.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher74.matchesAnyChar(rEString83);
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher71.makeParenthesis(rEString84);
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher66.matchesAnyChar(rEString84);
        st1920.automaton.RegExpMatcher regExpMatcher87 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString89 = regExpMatcher87.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString90 = regExpMatcher66.repeatOneOrMore(rEString89);
        st1920.automaton.RegExpMatcher.REString rEString92 = regExpMatcher63.matchesNOrMoreOccurences(rEString90, 100);
        java.lang.String str93 = rEString92.getString();
        st1920.automaton.RegExpMatcher.REString rEString95 = regExpMatcher0.matchesNOccurences(rEString92, 100);
        st1920.automaton.RegExpMatcher.REString rEString96 = regExpMatcher0.matchesAnyString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
    }

    @Test
    public void test466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test466");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher6.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher6.matchesAnyChar(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher3.makeParenthesis(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher0.matchesNOrMoreOccurences(rEString16, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher25.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString34 = null;
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.repeatZeroOrMore(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher33.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher33.matchesString("");
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher33.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher0.bothPatterns(rEString32, rEString40);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher0.matchesBracketChars("a[^[^hi!]]");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
    }

    @Test
    public void test467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test467");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString7 = regExpMatcher0.makeConcatenation("[^hi!]", "hi!hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesNumBetweenNandM((-1), 0);
        st1920.automaton.RegExpMatcher.MatchString matchString13 = regExpMatcher0.makeConcatenation("hi!", "#");
        java.lang.String str14 = matchString13.getString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "hi!#" + "'", str14.equals("hi!#"));
    }

    @Test
    public void test468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test468");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher6.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher6.matchesAnyChar(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher3.makeParenthesis(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher0.matchesNOrMoreOccurences(rEString16, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.MatchString matchString22 = regExpMatcher0.makeAlpha();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
    }

    @Test
    public void test469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test469");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher10 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString11 = null;
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher10.repeatZeroOrMore(rEString11);
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher10.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher5.matchesAnyChar(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher5.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher17.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString23 = null;
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.repeatZeroOrMore(rEString23);
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher30 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString31 = null;
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher30.repeatZeroOrMore(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher30.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher25.matchesAnyChar(rEString34);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher22.makeParenthesis(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher17.matchesAnyChar(rEString35);
        st1920.automaton.RegExpMatcher regExpMatcher38 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher38.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher17.repeatOneOrMore(rEString40);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher5.matchesNToMOccurences(rEString41, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher5.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher5.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher5.matchesNumBetweenNandM(1, (int) (short) -1);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher0.makeParenthesis(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString53 = new st1920.automaton.RegExpMatcher.REString("[^hi!]");
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher0.excludePattern(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher0.matchesNoBracketChars("[^hi!]");
        st1920.automaton.RegExpMatcher.MatchString matchString59 = regExpMatcher0.makeConcatenation("", "");
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher0.matchesNoBracketChars("[^hi!]");
        st1920.automaton.RegExpMatcher.MatchString matchString62 = regExpMatcher0.makeNum();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
    }

    @Test
    public void test470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test470");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString6 = regExpMatcher0.makeConcatenation("hi!", "hi!");
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher0.matchesNoBracketChars("1");
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.matchesNoBracketChars("hi!hi!");
        st1920.automaton.RegExpMatcher.MatchString matchString14 = regExpMatcher0.makeConcatenation("[[^hi!]hi!hi!]", "[^]");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
    }

    @Test
    public void test471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test471");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString6 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher regExpMatcher7 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString8 = null;
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher7.repeatZeroOrMore(rEString8);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher7.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher7.matchesAnyChar(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher0.repeatOneOrMore(rEString16);
        st1920.automaton.RegExpMatcher.MatchString matchString19 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher23 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString24 = null;
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher23.repeatZeroOrMore(rEString24);
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher23.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher20.matchesAnyChar(rEString27);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher20.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher30 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString31 = null;
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher30.repeatZeroOrMore(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher30.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher35 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString36 = null;
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher35.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher35.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher30.matchesAnyChar(rEString39);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher30.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher42 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString43 = null;
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher42.repeatZeroOrMore(rEString43);
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher42.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher47 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = null;
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher47.repeatZeroOrMore(rEString48);
        st1920.automaton.RegExpMatcher regExpMatcher50 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString51 = null;
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher50.repeatZeroOrMore(rEString51);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher50.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher55 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString56 = null;
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher55.repeatZeroOrMore(rEString56);
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher55.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher50.matchesAnyChar(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher47.makeParenthesis(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher42.matchesAnyChar(rEString60);
        st1920.automaton.RegExpMatcher regExpMatcher63 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher63.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher42.repeatOneOrMore(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher30.matchesNToMOccurences(rEString66, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher30.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher30.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher30.matchesNumBetweenNandM(1, (int) (short) -1);
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher30.matchesString("");
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher30.matchesBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher30.matchesNumBetweenNandM((int) (short) 10, 1);
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher30.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher20.repeatZeroOrOne(rEString83);
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher0.matchesAnyChar(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
    }

    @Test
    public void test472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test472");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher12.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher17 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString18 = null;
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher17.repeatZeroOrMore(rEString18);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher20.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher17.makeParenthesis(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher12.matchesAnyChar(rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher33 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher33.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher12.repeatOneOrMore(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher0.matchesNToMOccurences(rEString36, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher.MatchString matchString41 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher regExpMatcher42 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString43 = null;
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher42.repeatZeroOrMore(rEString43);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher42.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher42.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher47 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString48 = null;
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher47.repeatZeroOrMore(rEString48);
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher47.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = null;
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.repeatZeroOrMore(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher52.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher47.matchesAnyChar(rEString56);
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher47.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher59 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString60 = null;
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher59.repeatZeroOrMore(rEString60);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher59.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher64 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString65 = null;
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher64.repeatZeroOrMore(rEString65);
        st1920.automaton.RegExpMatcher regExpMatcher67 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString68 = null;
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher67.repeatZeroOrMore(rEString68);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher67.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher72 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString73 = null;
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher72.repeatZeroOrMore(rEString73);
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher72.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher67.matchesAnyChar(rEString76);
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher64.makeParenthesis(rEString77);
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher59.matchesAnyChar(rEString77);
        st1920.automaton.RegExpMatcher regExpMatcher80 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher80.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher59.repeatOneOrMore(rEString82);
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher47.matchesNToMOccurences(rEString83, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString87 = regExpMatcher47.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString89 = regExpMatcher47.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString92 = regExpMatcher47.matchesNumBetweenNandM(1, (int) (short) -1);
        st1920.automaton.RegExpMatcher.REString rEString93 = regExpMatcher42.makeParenthesis(rEString92);
        st1920.automaton.RegExpMatcher.REString rEString94 = regExpMatcher42.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString95 = regExpMatcher0.makeParenthesis(rEString94);
        st1920.automaton.RegExpMatcher.MatchString matchString96 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher.REString rEString98 = new st1920.automaton.RegExpMatcher.REString("[^hi!]hi!hi!");
        st1920.automaton.RegExpMatcher.REString rEString99 = regExpMatcher0.repeatZeroOrMore(rEString98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString99);
    }

    @Test
    public void test473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test473");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = null;
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.repeatZeroOrMore(rEString20);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString28 = regExpMatcher24.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher19.matchesAnyChar(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher16.makeParenthesis(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher0.eitherPattern(rEString14, rEString30);
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher32.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher37 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString38 = null;
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher37.repeatZeroOrMore(rEString38);
        st1920.automaton.RegExpMatcher.REString rEString41 = regExpMatcher37.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher32.matchesAnyChar(rEString41);
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher32.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher44 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString45 = null;
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher44.repeatZeroOrMore(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher44.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher49 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString50 = null;
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher49.repeatZeroOrMore(rEString50);
        st1920.automaton.RegExpMatcher regExpMatcher52 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString53 = null;
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher52.repeatZeroOrMore(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher52.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher57 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = null;
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher57.repeatZeroOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher57.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher52.matchesAnyChar(rEString61);
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher49.makeParenthesis(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher44.matchesAnyChar(rEString62);
        st1920.automaton.RegExpMatcher regExpMatcher65 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher65.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher44.repeatOneOrMore(rEString67);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher32.matchesNToMOccurences(rEString68, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher32.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher32.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher0.matchesNOccurences(rEString74, (int) '#');
        st1920.automaton.RegExpMatcher regExpMatcher77 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString78 = null;
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher77.repeatZeroOrMore(rEString78);
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher77.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher77.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher77.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher0.repeatOneOrMore(rEString85);
        st1920.automaton.RegExpMatcher.REString rEString87 = regExpMatcher0.makeAlphareg();
        java.lang.Class<?> wildcardClass88 = regExpMatcher0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test474");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher4 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString5 = null;
        st1920.automaton.RegExpMatcher.REString rEString6 = regExpMatcher4.repeatZeroOrMore(rEString5);
        st1920.automaton.RegExpMatcher regExpMatcher7 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString8 = null;
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher7.repeatZeroOrMore(rEString8);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher7.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher12 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString13 = null;
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher12.repeatZeroOrMore(rEString13);
        st1920.automaton.RegExpMatcher regExpMatcher15 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString16 = null;
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher15.repeatZeroOrMore(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher15.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher15.matchesAnyChar(rEString24);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher12.makeParenthesis(rEString25);
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher7.matchesAnyChar(rEString25);
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher7.repeatOneOrMore(rEString30);
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher4.matchesNOrMoreOccurences(rEString31, 100);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher4.matchesNoBracketChars("[^hi!]");
        st1920.automaton.RegExpMatcher regExpMatcher36 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString37 = null;
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher36.repeatZeroOrMore(rEString37);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher36.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher36.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher41 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = null;
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher41.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher41.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString47 = null;
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.repeatZeroOrMore(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher41.matchesAnyChar(rEString50);
        java.lang.String str52 = rEString50.getString();
        st1920.automaton.RegExpMatcher regExpMatcher53 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString54 = null;
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher53.repeatZeroOrMore(rEString54);
        st1920.automaton.RegExpMatcher regExpMatcher56 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString57 = null;
        st1920.automaton.RegExpMatcher.REString rEString58 = regExpMatcher56.repeatZeroOrMore(rEString57);
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher56.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher61 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString62 = null;
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher61.repeatZeroOrMore(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher61.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher56.matchesAnyChar(rEString65);
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher53.makeParenthesis(rEString66);
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher36.bothPatterns(rEString50, rEString67);
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher0.eitherPattern(rEString35, rEString68);
        java.lang.Class<?> wildcardClass70 = rEString69.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str52 + "' != '" + "[^hi!]" + "'", str52.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test475");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher6.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher6.matchesAnyChar(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher3.makeParenthesis(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher0.matchesNOrMoreOccurences(rEString16, (int) (byte) -1);
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher regExpMatcher23 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString24 = null;
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher23.repeatZeroOrMore(rEString24);
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher23.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString29 = null;
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.repeatZeroOrMore(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher28.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher23.matchesAnyChar(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher20.makeParenthesis(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher0.matchesNOrMoreOccurences(rEString34, (int) '4');
        st1920.automaton.RegExpMatcher.MatchString matchString37 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher0.makeNumreg();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
    }

    @Test
    public void test476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test476");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher6.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher11 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString12 = null;
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher11.repeatZeroOrMore(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher11.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher6.matchesAnyChar(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher3.makeParenthesis(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher0.matchesNOrMoreOccurences(rEString16, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher30 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString31 = null;
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher30.repeatZeroOrMore(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher30.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher25.matchesAnyChar(rEString34);
        st1920.automaton.RegExpMatcher regExpMatcher36 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher36.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString39 = null;
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher36.repeatZeroOrMore(rEString39);
        st1920.automaton.RegExpMatcher regExpMatcher41 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = null;
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher41.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher regExpMatcher44 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString45 = null;
        st1920.automaton.RegExpMatcher.REString rEString46 = regExpMatcher44.repeatZeroOrMore(rEString45);
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher44.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher49 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString50 = null;
        st1920.automaton.RegExpMatcher.REString rEString51 = regExpMatcher49.repeatZeroOrMore(rEString50);
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher49.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher44.matchesAnyChar(rEString53);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher41.makeParenthesis(rEString54);
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher25.eitherPattern(rEString39, rEString55);
        st1920.automaton.RegExpMatcher regExpMatcher57 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString58 = null;
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher57.repeatZeroOrMore(rEString58);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher57.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher62 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString63 = null;
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher62.repeatZeroOrMore(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher62.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString67 = regExpMatcher57.matchesAnyChar(rEString66);
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher57.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher25.makeParenthesis(rEString68);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher0.makeParenthesis(rEString69);
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher0.makeNumreg();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
    }

    @Test
    public void test477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test477");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString6 = regExpMatcher0.makeConcatenation("hi!", "hi!");
        st1920.automaton.RegExpMatcher.MatchString matchString7 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher regExpMatcher19 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher19.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString22 = null;
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher19.repeatZeroOrMore(rEString22);
        st1920.automaton.RegExpMatcher regExpMatcher24 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString25 = null;
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher24.repeatZeroOrMore(rEString25);
        st1920.automaton.RegExpMatcher regExpMatcher27 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString28 = null;
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher27.repeatZeroOrMore(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher27.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher32.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher27.matchesAnyChar(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher24.makeParenthesis(rEString37);
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher8.eitherPattern(rEString22, rEString38);
        st1920.automaton.RegExpMatcher regExpMatcher40 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = regExpMatcher40.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher8.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher0.makeParenthesis(rEString43);
        st1920.automaton.RegExpMatcher regExpMatcher45 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString46 = null;
        st1920.automaton.RegExpMatcher.REString rEString47 = regExpMatcher45.repeatZeroOrMore(rEString46);
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher45.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.MatchString matchString52 = regExpMatcher45.makeConcatenation("[^hi!]", "");
        st1920.automaton.RegExpMatcher regExpMatcher53 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString54 = null;
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher53.repeatZeroOrMore(rEString54);
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher53.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher58 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString59 = null;
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher58.repeatZeroOrMore(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString62 = regExpMatcher58.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher53.matchesAnyChar(rEString62);
        st1920.automaton.RegExpMatcher regExpMatcher64 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher64.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString67 = null;
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher64.repeatZeroOrMore(rEString67);
        st1920.automaton.RegExpMatcher regExpMatcher69 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString70 = null;
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher69.repeatZeroOrMore(rEString70);
        st1920.automaton.RegExpMatcher regExpMatcher72 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString73 = null;
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher72.repeatZeroOrMore(rEString73);
        st1920.automaton.RegExpMatcher.REString rEString76 = regExpMatcher72.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher77 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString78 = null;
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher77.repeatZeroOrMore(rEString78);
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher77.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher72.matchesAnyChar(rEString81);
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher69.makeParenthesis(rEString82);
        st1920.automaton.RegExpMatcher.REString rEString84 = regExpMatcher53.eitherPattern(rEString67, rEString83);
        st1920.automaton.RegExpMatcher regExpMatcher85 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString87 = regExpMatcher85.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString88 = regExpMatcher53.repeatZeroOrMore(rEString87);
        st1920.automaton.RegExpMatcher.REString rEString90 = regExpMatcher53.matchesBracketChars("1");
        st1920.automaton.RegExpMatcher.REString rEString91 = regExpMatcher45.matchesAnyChar(rEString90);
        st1920.automaton.RegExpMatcher.REString rEString93 = regExpMatcher0.matchesNOccurences(rEString91, (int) 'a');
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
    }

    @Test
    public void test478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test478");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher regExpMatcher3 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString4 = null;
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher3.repeatZeroOrMore(rEString4);
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher3.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher3.matchesAnyChar(rEString12);
        st1920.automaton.RegExpMatcher.REString rEString14 = regExpMatcher0.makeParenthesis(rEString13);
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher regExpMatcher16 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString17 = null;
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher16.repeatZeroOrMore(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher16.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher16.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher22 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher22.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher25 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString26 = null;
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher25.repeatZeroOrMore(rEString26);
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher25.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher22.matchesAnyChar(rEString29);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher22.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString32 = regExpMatcher16.repeatOneOrMore(rEString31);
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher16.matchesBracketChars("1");
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher16.matchesNumBetweenNandM((int) (byte) -1, (int) (byte) -1);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher16.matchesAnyString();
        st1920.automaton.RegExpMatcher.REString rEString39 = regExpMatcher0.excludePattern(rEString38);
        st1920.automaton.RegExpMatcher.MatchString matchString40 = regExpMatcher0.makeNum();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
    }

    @Test
    public void test479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test479");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString3 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString6 = regExpMatcher0.makeConcatenation("hi!", "hi!");
        st1920.automaton.RegExpMatcher.MatchString matchString7 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher regExpMatcher8 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString9 = null;
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher8.repeatZeroOrMore(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher8.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher13 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString14 = null;
        st1920.automaton.RegExpMatcher.REString rEString15 = regExpMatcher13.repeatZeroOrMore(rEString14);
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher13.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher8.matchesAnyChar(rEString17);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher8.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher20.matchesNumBetweenNandM(100, (int) (short) 0);
        st1920.automaton.RegExpMatcher regExpMatcher28 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString30 = regExpMatcher28.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher regExpMatcher31 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString32 = null;
        st1920.automaton.RegExpMatcher.REString rEString33 = regExpMatcher31.repeatZeroOrMore(rEString32);
        st1920.automaton.RegExpMatcher.REString rEString35 = regExpMatcher31.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher28.matchesAnyChar(rEString35);
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher20.repeatZeroOrMore(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString40 = regExpMatcher20.matchesNumBetweenNandM(0, (int) ' ');
        st1920.automaton.RegExpMatcher regExpMatcher41 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString42 = null;
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher41.repeatZeroOrMore(rEString42);
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher41.makeNumreg();
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher41.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString47 = null;
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.repeatZeroOrMore(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString50 = regExpMatcher46.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher51 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString52 = null;
        st1920.automaton.RegExpMatcher.REString rEString53 = regExpMatcher51.repeatZeroOrMore(rEString52);
        st1920.automaton.RegExpMatcher.REString rEString55 = regExpMatcher51.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString56 = regExpMatcher46.matchesAnyChar(rEString55);
        java.lang.String str57 = rEString55.getString();
        st1920.automaton.RegExpMatcher regExpMatcher58 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString59 = null;
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher58.repeatZeroOrMore(rEString59);
        st1920.automaton.RegExpMatcher regExpMatcher61 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString62 = null;
        st1920.automaton.RegExpMatcher.REString rEString63 = regExpMatcher61.repeatZeroOrMore(rEString62);
        st1920.automaton.RegExpMatcher.REString rEString65 = regExpMatcher61.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher66 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString67 = null;
        st1920.automaton.RegExpMatcher.REString rEString68 = regExpMatcher66.repeatZeroOrMore(rEString67);
        st1920.automaton.RegExpMatcher.REString rEString70 = regExpMatcher66.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString71 = regExpMatcher61.matchesAnyChar(rEString70);
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher58.makeParenthesis(rEString71);
        st1920.automaton.RegExpMatcher.REString rEString73 = regExpMatcher41.bothPatterns(rEString55, rEString72);
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher20.repeatZeroOrMore(rEString55);
        st1920.automaton.RegExpMatcher.REString rEString75 = regExpMatcher8.makeParenthesis(rEString55);
        st1920.automaton.RegExpMatcher regExpMatcher76 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString77 = null;
        st1920.automaton.RegExpMatcher.REString rEString78 = regExpMatcher76.repeatZeroOrMore(rEString77);
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher76.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher81 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString82 = null;
        st1920.automaton.RegExpMatcher.REString rEString83 = regExpMatcher81.repeatZeroOrMore(rEString82);
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher81.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher76.matchesAnyChar(rEString85);
        java.lang.String str87 = rEString85.getString();
        st1920.automaton.RegExpMatcher.REString rEString89 = regExpMatcher8.matchesNOccurences(rEString85, 10);
        st1920.automaton.RegExpMatcher.REString rEString90 = regExpMatcher0.repeatZeroOrOne(rEString89);
        st1920.automaton.RegExpMatcher.REString rEString92 = regExpMatcher0.matchesBracketChars("@");
        st1920.automaton.RegExpMatcher.REString rEString94 = regExpMatcher0.matchesBracketChars("<35-0>");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str57 + "' != '" + "[^hi!]" + "'", str57.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str87 + "' != '" + "[^hi!]" + "'", str87.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
    }

    @Test
    public void test480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test480");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString14 = regExpMatcher0.makeConcatenation("hi!", "hi!");
        st1920.automaton.RegExpMatcher regExpMatcher15 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString16 = null;
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher15.repeatZeroOrMore(rEString16);
        st1920.automaton.RegExpMatcher regExpMatcher18 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher18.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher18.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString23 = regExpMatcher15.repeatOneOrMore(rEString22);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher0.repeatOneOrMore(rEString23);
        st1920.automaton.RegExpMatcher.REString rEString27 = regExpMatcher0.matchesNumBetweenNandM((int) 'a', (int) '4');
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
    }

    @Test
    public void test481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test481");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString5 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher regExpMatcher6 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString7 = null;
        st1920.automaton.RegExpMatcher.REString rEString8 = regExpMatcher6.repeatZeroOrMore(rEString7);
        st1920.automaton.RegExpMatcher regExpMatcher9 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString10 = null;
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher9.repeatZeroOrMore(rEString10);
        st1920.automaton.RegExpMatcher.REString rEString13 = regExpMatcher9.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher14 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString15 = null;
        st1920.automaton.RegExpMatcher.REString rEString16 = regExpMatcher14.repeatZeroOrMore(rEString15);
        st1920.automaton.RegExpMatcher.REString rEString18 = regExpMatcher14.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher9.matchesAnyChar(rEString18);
        st1920.automaton.RegExpMatcher.REString rEString20 = regExpMatcher6.makeParenthesis(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString21 = regExpMatcher0.matchesAnyChar(rEString19);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher0.matchesNumBetweenNandM((int) (short) 0, (int) (short) 100);
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher0.matchesNoChar();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
    }

    @Test
    public void test482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test482");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString1 = null;
        st1920.automaton.RegExpMatcher.REString rEString2 = regExpMatcher0.repeatZeroOrMore(rEString1);
        st1920.automaton.RegExpMatcher.REString rEString4 = regExpMatcher0.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher5 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString6 = null;
        st1920.automaton.RegExpMatcher.REString rEString7 = regExpMatcher5.repeatZeroOrMore(rEString6);
        st1920.automaton.RegExpMatcher.REString rEString9 = regExpMatcher5.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString10 = regExpMatcher0.matchesAnyChar(rEString9);
        st1920.automaton.RegExpMatcher.REString rEString11 = regExpMatcher0.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString12 = regExpMatcher0.matchesAnyString();
        st1920.automaton.RegExpMatcher.MatchString matchString13 = regExpMatcher0.makeNum();
        st1920.automaton.RegExpMatcher.MatchString matchString14 = regExpMatcher0.makeAlpha();
        st1920.automaton.RegExpMatcher regExpMatcher15 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString16 = null;
        st1920.automaton.RegExpMatcher.REString rEString17 = regExpMatcher15.repeatZeroOrMore(rEString16);
        st1920.automaton.RegExpMatcher.REString rEString19 = regExpMatcher15.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher20 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString21 = null;
        st1920.automaton.RegExpMatcher.REString rEString22 = regExpMatcher20.repeatZeroOrMore(rEString21);
        st1920.automaton.RegExpMatcher.REString rEString24 = regExpMatcher20.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString25 = regExpMatcher15.matchesAnyChar(rEString24);
        st1920.automaton.RegExpMatcher.REString rEString26 = regExpMatcher15.matchesNoChar();
        st1920.automaton.RegExpMatcher regExpMatcher27 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString28 = null;
        st1920.automaton.RegExpMatcher.REString rEString29 = regExpMatcher27.repeatZeroOrMore(rEString28);
        st1920.automaton.RegExpMatcher.REString rEString31 = regExpMatcher27.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher32 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString33 = null;
        st1920.automaton.RegExpMatcher.REString rEString34 = regExpMatcher32.repeatZeroOrMore(rEString33);
        st1920.automaton.RegExpMatcher.REString rEString36 = regExpMatcher32.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString37 = regExpMatcher27.matchesAnyChar(rEString36);
        st1920.automaton.RegExpMatcher.REString rEString38 = regExpMatcher27.makeNumreg();
        st1920.automaton.RegExpMatcher.MatchString matchString41 = regExpMatcher27.makeConcatenation("hi!", "hi!");
        st1920.automaton.RegExpMatcher.REString rEString43 = regExpMatcher27.matchesBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString44 = regExpMatcher27.matchesNoChar();
        st1920.automaton.RegExpMatcher.REString rEString45 = regExpMatcher15.repeatOneOrMore(rEString44);
        st1920.automaton.RegExpMatcher regExpMatcher46 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString47 = null;
        st1920.automaton.RegExpMatcher.REString rEString48 = regExpMatcher46.repeatZeroOrMore(rEString47);
        st1920.automaton.RegExpMatcher.REString rEString49 = regExpMatcher46.makeAlphareg();
        st1920.automaton.RegExpMatcher regExpMatcher50 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString51 = null;
        st1920.automaton.RegExpMatcher.REString rEString52 = regExpMatcher50.repeatZeroOrMore(rEString51);
        st1920.automaton.RegExpMatcher.REString rEString54 = regExpMatcher50.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher55 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString56 = null;
        st1920.automaton.RegExpMatcher.REString rEString57 = regExpMatcher55.repeatZeroOrMore(rEString56);
        st1920.automaton.RegExpMatcher.REString rEString59 = regExpMatcher55.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString60 = regExpMatcher50.matchesAnyChar(rEString59);
        st1920.automaton.RegExpMatcher.REString rEString61 = regExpMatcher50.makeNumreg();
        st1920.automaton.RegExpMatcher regExpMatcher62 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString63 = null;
        st1920.automaton.RegExpMatcher.REString rEString64 = regExpMatcher62.repeatZeroOrMore(rEString63);
        st1920.automaton.RegExpMatcher.REString rEString66 = regExpMatcher62.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher67 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString68 = null;
        st1920.automaton.RegExpMatcher.REString rEString69 = regExpMatcher67.repeatZeroOrMore(rEString68);
        st1920.automaton.RegExpMatcher regExpMatcher70 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString71 = null;
        st1920.automaton.RegExpMatcher.REString rEString72 = regExpMatcher70.repeatZeroOrMore(rEString71);
        st1920.automaton.RegExpMatcher.REString rEString74 = regExpMatcher70.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher regExpMatcher75 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString76 = null;
        st1920.automaton.RegExpMatcher.REString rEString77 = regExpMatcher75.repeatZeroOrMore(rEString76);
        st1920.automaton.RegExpMatcher.REString rEString79 = regExpMatcher75.matchesNoBracketChars("hi!");
        st1920.automaton.RegExpMatcher.REString rEString80 = regExpMatcher70.matchesAnyChar(rEString79);
        st1920.automaton.RegExpMatcher.REString rEString81 = regExpMatcher67.makeParenthesis(rEString80);
        st1920.automaton.RegExpMatcher.REString rEString82 = regExpMatcher62.matchesAnyChar(rEString80);
        st1920.automaton.RegExpMatcher regExpMatcher83 = new st1920.automaton.RegExpMatcher();
        st1920.automaton.RegExpMatcher.REString rEString85 = regExpMatcher83.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString86 = regExpMatcher62.repeatOneOrMore(rEString85);
        st1920.automaton.RegExpMatcher.REString rEString89 = regExpMatcher50.matchesNToMOccurences(rEString86, (int) (short) 1, 0);
        st1920.automaton.RegExpMatcher.REString rEString90 = regExpMatcher50.makeAlphareg();
        st1920.automaton.RegExpMatcher.REString rEString92 = regExpMatcher50.matchesNoBracketChars("");
        st1920.automaton.RegExpMatcher.REString rEString95 = regExpMatcher46.matchesNToMOccurences(rEString92, (int) (byte) 10, (int) ' ');
        st1920.automaton.RegExpMatcher.REString rEString96 = regExpMatcher15.matchesAnyChar(rEString95);
        java.lang.String str97 = rEString96.getString();
        boolean boolean98 = st1920.automaton.RegExpMatcher.matches(matchString14, rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }
}

